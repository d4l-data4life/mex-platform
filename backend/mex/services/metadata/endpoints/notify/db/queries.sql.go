// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: queries.sql

package dbNotify

import (
	"context"
)

const dbGetItemValues = `-- name: DbGetItemValues :many
SELECT field_name, field_value FROM current_item_values
WHERE item_id = $1
ORDER BY field_name ASC, place ASC
`

type DbGetItemValuesRow struct {
	FieldName  string
	FieldValue string
}

func (q *Queries) DbGetItemValues(ctx context.Context, itemID string) ([]DbGetItemValuesRow, error) {
	rows, err := q.db.Query(ctx, dbGetItemValues, itemID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []DbGetItemValuesRow
	for rows.Next() {
		var i DbGetItemValuesRow
		if err := rows.Scan(&i.FieldName, &i.FieldValue); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
