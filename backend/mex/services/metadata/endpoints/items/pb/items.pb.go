// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.22.0
// source: services/metadata/endpoints/items/items.proto

package itemspb

import (
	cfg "github.com/d4l-data4life/mex/mex/shared/cfg"
	items "github.com/d4l-data4life/mex/mex/shared/items"
	_ "github.com/d4l-data4life/mex/mex/shared/known/securitypb"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item                *items.Item `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	PreventAnnouncement bool        `protobuf:"varint,3,opt,name=prevent_announcement,json=preventAnnouncement,proto3" json:"prevent_announcement,omitempty"`
	Hash                string      `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *CreateItemRequest) Reset() {
	*x = CreateItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateItemRequest) ProtoMessage() {}

func (x *CreateItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateItemRequest.ProtoReflect.Descriptor instead.
func (*CreateItemRequest) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{0}
}

func (x *CreateItemRequest) GetItem() *items.Item {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *CreateItemRequest) GetPreventAnnouncement() bool {
	if x != nil {
		return x.PreventAnnouncement
	}
	return false
}

func (x *CreateItemRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type CreateItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId     string `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	BusinessId string `protobuf:"bytes,2,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
}

func (x *CreateItemResponse) Reset() {
	*x = CreateItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateItemResponse) ProtoMessage() {}

func (x *CreateItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateItemResponse.ProtoReflect.Descriptor instead.
func (*CreateItemResponse) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{1}
}

func (x *CreateItemResponse) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *CreateItemResponse) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

type CreateItemsBulkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*items.Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// This seemingly redundant flag is needed since a request that leaves out the algorithm parameter
	// would otherwise be interpreted as requested the algorithm corresponding to the default value 0.
	OverrideDuplicateAlgorithm bool                            `protobuf:"varint,2,opt,name=override_duplicate_algorithm,json=overrideDuplicateAlgorithm,proto3" json:"override_duplicate_algorithm,omitempty"`
	DuplicateAlgorithm         cfg.DuplicateDetectionAlgorithm `protobuf:"varint,3,opt,name=duplicate_algorithm,json=duplicateAlgorithm,proto3,enum=d4l.mex.cfg.DuplicateDetectionAlgorithm" json:"duplicate_algorithm,omitempty"`
}

func (x *CreateItemsBulkRequest) Reset() {
	*x = CreateItemsBulkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateItemsBulkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateItemsBulkRequest) ProtoMessage() {}

func (x *CreateItemsBulkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateItemsBulkRequest.ProtoReflect.Descriptor instead.
func (*CreateItemsBulkRequest) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{2}
}

func (x *CreateItemsBulkRequest) GetItems() []*items.Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CreateItemsBulkRequest) GetOverrideDuplicateAlgorithm() bool {
	if x != nil {
		return x.OverrideDuplicateAlgorithm
	}
	return false
}

func (x *CreateItemsBulkRequest) GetDuplicateAlgorithm() cfg.DuplicateDetectionAlgorithm {
	if x != nil {
		return x.DuplicateAlgorithm
	}
	return cfg.DuplicateDetectionAlgorithm(0)
}

type CreateItemsBulkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *CreateItemsBulkResponse) Reset() {
	*x = CreateItemsBulkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateItemsBulkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateItemsBulkResponse) ProtoMessage() {}

func (x *CreateItemsBulkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateItemsBulkResponse.ProtoReflect.Descriptor instead.
func (*CreateItemsBulkResponse) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{3}
}

func (x *CreateItemsBulkResponse) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type ComputeVersionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId string `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *ComputeVersionsRequest) Reset() {
	*x = ComputeVersionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeVersionsRequest) ProtoMessage() {}

func (x *ComputeVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeVersionsRequest.ProtoReflect.Descriptor instead.
func (*ComputeVersionsRequest) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{4}
}

func (x *ComputeVersionsRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

type ComputeVersionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Versions []*ComputeVersionsResponse_Version `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *ComputeVersionsResponse) Reset() {
	*x = ComputeVersionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeVersionsResponse) ProtoMessage() {}

func (x *ComputeVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeVersionsResponse.ProtoReflect.Descriptor instead.
func (*ComputeVersionsResponse) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{5}
}

func (x *ComputeVersionsResponse) GetVersions() []*ComputeVersionsResponse_Version {
	if x != nil {
		return x.Versions
	}
	return nil
}

type ComputeVersionsByBusinessIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
}

func (x *ComputeVersionsByBusinessIdRequest) Reset() {
	*x = ComputeVersionsByBusinessIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeVersionsByBusinessIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeVersionsByBusinessIdRequest) ProtoMessage() {}

func (x *ComputeVersionsByBusinessIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeVersionsByBusinessIdRequest.ProtoReflect.Descriptor instead.
func (*ComputeVersionsByBusinessIdRequest) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{6}
}

func (x *ComputeVersionsByBusinessIdRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

type ComputeVersionsByBusinessIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Versions []*ComputeVersionsByBusinessIdResponse_Version `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *ComputeVersionsByBusinessIdResponse) Reset() {
	*x = ComputeVersionsByBusinessIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeVersionsByBusinessIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeVersionsByBusinessIdResponse) ProtoMessage() {}

func (x *ComputeVersionsByBusinessIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeVersionsByBusinessIdResponse.ProtoReflect.Descriptor instead.
func (*ComputeVersionsByBusinessIdResponse) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{7}
}

func (x *ComputeVersionsByBusinessIdResponse) GetVersions() []*ComputeVersionsByBusinessIdResponse_Version {
	if x != nil {
		return x.Versions
	}
	return nil
}

type CreateRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         string             `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	SourceItemId string             `protobuf:"bytes,2,opt,name=source_item_id,json=sourceItemId,proto3" json:"source_item_id,omitempty"`
	TargetItemId string             `protobuf:"bytes,3,opt,name=target_item_id,json=targetItemId,proto3" json:"target_item_id,omitempty"`
	Values       []*items.ItemValue `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *CreateRelationRequest) Reset() {
	*x = CreateRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRelationRequest) ProtoMessage() {}

func (x *CreateRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRelationRequest.ProtoReflect.Descriptor instead.
func (*CreateRelationRequest) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{8}
}

func (x *CreateRelationRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateRelationRequest) GetSourceItemId() string {
	if x != nil {
		return x.SourceItemId
	}
	return ""
}

func (x *CreateRelationRequest) GetTargetItemId() string {
	if x != nil {
		return x.TargetItemId
	}
	return ""
}

func (x *CreateRelationRequest) GetValues() []*items.ItemValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type CreateRelationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelationId string  `protobuf:"bytes,1,opt,name=relation_id,json=relationId,proto3" json:"relation_id,omitempty"`
	InfoItemId *string `protobuf:"bytes,2,opt,name=info_item_id,json=infoItemId,proto3,oneof" json:"info_item_id,omitempty"`
}

func (x *CreateRelationResponse) Reset() {
	*x = CreateRelationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRelationResponse) ProtoMessage() {}

func (x *CreateRelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRelationResponse.ProtoReflect.Descriptor instead.
func (*CreateRelationResponse) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{9}
}

func (x *CreateRelationResponse) GetRelationId() string {
	if x != nil {
		return x.RelationId
	}
	return ""
}

func (x *CreateRelationResponse) GetInfoItemId() string {
	if x != nil && x.InfoItemId != nil {
		return *x.InfoItemId
	}
	return ""
}

type CreateRelationsFromBusinessIdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelationType        string `protobuf:"bytes,1,opt,name=relation_type,json=relationType,proto3" json:"relation_type,omitempty"`
	SourceItemId        string `protobuf:"bytes,4,opt,name=source_item_id,json=sourceItemId,proto3" json:"source_item_id,omitempty"`
	SourceItemFieldName string `protobuf:"bytes,5,opt,name=source_item_field_name,json=sourceItemFieldName,proto3" json:"source_item_field_name,omitempty"`
}

func (x *CreateRelationsFromBusinessIdsRequest) Reset() {
	*x = CreateRelationsFromBusinessIdsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRelationsFromBusinessIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRelationsFromBusinessIdsRequest) ProtoMessage() {}

func (x *CreateRelationsFromBusinessIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRelationsFromBusinessIdsRequest.ProtoReflect.Descriptor instead.
func (*CreateRelationsFromBusinessIdsRequest) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{10}
}

func (x *CreateRelationsFromBusinessIdsRequest) GetRelationType() string {
	if x != nil {
		return x.RelationType
	}
	return ""
}

func (x *CreateRelationsFromBusinessIdsRequest) GetSourceItemId() string {
	if x != nil {
		return x.SourceItemId
	}
	return ""
}

func (x *CreateRelationsFromBusinessIdsRequest) GetSourceItemFieldName() string {
	if x != nil {
		return x.SourceItemFieldName
	}
	return ""
}

type CreateRelationsFromBusinessIdsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inserted int32 `protobuf:"varint,1,opt,name=inserted,proto3" json:"inserted,omitempty"`
}

func (x *CreateRelationsFromBusinessIdsResponse) Reset() {
	*x = CreateRelationsFromBusinessIdsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRelationsFromBusinessIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRelationsFromBusinessIdsResponse) ProtoMessage() {}

func (x *CreateRelationsFromBusinessIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRelationsFromBusinessIdsResponse.ProtoReflect.Descriptor instead.
func (*CreateRelationsFromBusinessIdsResponse) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{11}
}

func (x *CreateRelationsFromBusinessIdsResponse) GetInserted() int32 {
	if x != nil {
		return x.Inserted
	}
	return 0
}

type CreateRelationsFromOriginalItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelationType string `protobuf:"bytes,1,opt,name=relation_type,json=relationType,proto3" json:"relation_type,omitempty"`
	SourceItemId string `protobuf:"bytes,2,opt,name=source_item_id,json=sourceItemId,proto3" json:"source_item_id,omitempty"`
	BusinessId   string `protobuf:"bytes,3,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
}

func (x *CreateRelationsFromOriginalItemsRequest) Reset() {
	*x = CreateRelationsFromOriginalItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRelationsFromOriginalItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRelationsFromOriginalItemsRequest) ProtoMessage() {}

func (x *CreateRelationsFromOriginalItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRelationsFromOriginalItemsRequest.ProtoReflect.Descriptor instead.
func (*CreateRelationsFromOriginalItemsRequest) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{12}
}

func (x *CreateRelationsFromOriginalItemsRequest) GetRelationType() string {
	if x != nil {
		return x.RelationType
	}
	return ""
}

func (x *CreateRelationsFromOriginalItemsRequest) GetSourceItemId() string {
	if x != nil {
		return x.SourceItemId
	}
	return ""
}

func (x *CreateRelationsFromOriginalItemsRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

type CreateRelationsFromOriginalItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inserted int32 `protobuf:"varint,1,opt,name=inserted,proto3" json:"inserted,omitempty"`
}

func (x *CreateRelationsFromOriginalItemsResponse) Reset() {
	*x = CreateRelationsFromOriginalItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRelationsFromOriginalItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRelationsFromOriginalItemsResponse) ProtoMessage() {}

func (x *CreateRelationsFromOriginalItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRelationsFromOriginalItemsResponse.ProtoReflect.Descriptor instead.
func (*CreateRelationsFromOriginalItemsResponse) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{13}
}

func (x *CreateRelationsFromOriginalItemsResponse) GetInserted() int32 {
	if x != nil {
		return x.Inserted
	}
	return 0
}

type ListRelationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRelationsRequest) Reset() {
	*x = ListRelationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRelationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRelationsRequest) ProtoMessage() {}

func (x *ListRelationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRelationsRequest.ProtoReflect.Descriptor instead.
func (*ListRelationsRequest) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{14}
}

type ListRelation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelationId   string  `protobuf:"bytes,1,opt,name=relation_id,json=relationId,proto3" json:"relation_id,omitempty"`
	Type         string  `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	SourceItemId string  `protobuf:"bytes,3,opt,name=source_item_id,json=sourceItemId,proto3" json:"source_item_id,omitempty"`
	TargetItemId string  `protobuf:"bytes,4,opt,name=target_item_id,json=targetItemId,proto3" json:"target_item_id,omitempty"`
	InfoItemId   *string `protobuf:"bytes,5,opt,name=info_item_id,json=infoItemId,proto3,oneof" json:"info_item_id,omitempty"`
}

func (x *ListRelation) Reset() {
	*x = ListRelation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRelation) ProtoMessage() {}

func (x *ListRelation) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRelation.ProtoReflect.Descriptor instead.
func (*ListRelation) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{15}
}

func (x *ListRelation) GetRelationId() string {
	if x != nil {
		return x.RelationId
	}
	return ""
}

func (x *ListRelation) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ListRelation) GetSourceItemId() string {
	if x != nil {
		return x.SourceItemId
	}
	return ""
}

func (x *ListRelation) GetTargetItemId() string {
	if x != nil {
		return x.TargetItemId
	}
	return ""
}

func (x *ListRelation) GetInfoItemId() string {
	if x != nil && x.InfoItemId != nil {
		return *x.InfoItemId
	}
	return ""
}

type ListRelationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Relations map[string]*ListRelation `protobuf:"bytes,1,rep,name=relations,proto3" json:"relations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListRelationsResponse) Reset() {
	*x = ListRelationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRelationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRelationsResponse) ProtoMessage() {}

func (x *ListRelationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRelationsResponse.ProtoReflect.Descriptor instead.
func (*ListRelationsResponse) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{16}
}

func (x *ListRelationsResponse) GetRelations() map[string]*ListRelation {
	if x != nil {
		return x.Relations
	}
	return nil
}

type ListItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next       string `protobuf:"bytes,1,opt,name=next,proto3" json:"next,omitempty"`
	EntityType string `protobuf:"bytes,2,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
}

func (x *ListItemsRequest) Reset() {
	*x = ListItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListItemsRequest) ProtoMessage() {}

func (x *ListItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListItemsRequest.ProtoReflect.Descriptor instead.
func (*ListItemsRequest) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{17}
}

func (x *ListItemsRequest) GetNext() string {
	if x != nil {
		return x.Next
	}
	return ""
}

func (x *ListItemsRequest) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

type ListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId     string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	EntityType string                 `protobuf:"bytes,3,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
	Owner      string                 `protobuf:"bytes,4,opt,name=owner,proto3" json:"owner,omitempty"`
	BusinessId string                 `protobuf:"bytes,5,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
}

func (x *ListItem) Reset() {
	*x = ListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListItem) ProtoMessage() {}

func (x *ListItem) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListItem.ProtoReflect.Descriptor instead.
func (*ListItem) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{18}
}

func (x *ListItem) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *ListItem) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ListItem) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

func (x *ListItem) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ListItem) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

type ListItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ListItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Next  string      `protobuf:"bytes,2,opt,name=next,proto3" json:"next,omitempty"`
}

func (x *ListItemsResponse) Reset() {
	*x = ListItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListItemsResponse) ProtoMessage() {}

func (x *ListItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListItemsResponse.ProtoReflect.Descriptor instead.
func (*ListItemsResponse) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{19}
}

func (x *ListItemsResponse) GetItems() []*ListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListItemsResponse) GetNext() string {
	if x != nil {
		return x.Next
	}
	return ""
}

type GetItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId string `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *GetItemRequest) Reset() {
	*x = GetItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemRequest) ProtoMessage() {}

func (x *GetItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemRequest.ProtoReflect.Descriptor instead.
func (*GetItemRequest) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{20}
}

func (x *GetItemRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

type GetItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId     string                           `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	EntityType string                           `protobuf:"bytes,2,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
	Owner      string                           `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	CreatedAt  *timestamppb.Timestamp           `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	BusinessId *string                          `protobuf:"bytes,5,opt,name=business_id,json=businessId,proto3,oneof" json:"business_id,omitempty"`
	Values     []*GetItemResponse_FullItemValue `protobuf:"bytes,6,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *GetItemResponse) Reset() {
	*x = GetItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemResponse) ProtoMessage() {}

func (x *GetItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemResponse.ProtoReflect.Descriptor instead.
func (*GetItemResponse) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{21}
}

func (x *GetItemResponse) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *GetItemResponse) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

func (x *GetItemResponse) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *GetItemResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetItemResponse) GetBusinessId() string {
	if x != nil && x.BusinessId != nil {
		return *x.BusinessId
	}
	return ""
}

func (x *GetItemResponse) GetValues() []*GetItemResponse_FullItemValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type DeleteItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId string `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *DeleteItemRequest) Reset() {
	*x = DeleteItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteItemRequest) ProtoMessage() {}

func (x *DeleteItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteItemRequest.ProtoReflect.Descriptor instead.
func (*DeleteItemRequest) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteItemRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

type DeleteItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteItemResponse) Reset() {
	*x = DeleteItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteItemResponse) ProtoMessage() {}

func (x *DeleteItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteItemResponse.ProtoReflect.Descriptor instead.
func (*DeleteItemResponse) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{23}
}

type DeleteItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemIds     []string `protobuf:"bytes,1,rep,name=item_ids,json=itemIds,proto3" json:"item_ids,omitempty"`
	BusinessIds []string `protobuf:"bytes,2,rep,name=business_ids,json=businessIds,proto3" json:"business_ids,omitempty"`
	Cascade     bool     `protobuf:"varint,3,opt,name=cascade,proto3" json:"cascade,omitempty"`
}

func (x *DeleteItemsRequest) Reset() {
	*x = DeleteItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteItemsRequest) ProtoMessage() {}

func (x *DeleteItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteItemsRequest.ProtoReflect.Descriptor instead.
func (*DeleteItemsRequest) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteItemsRequest) GetItemIds() []string {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

func (x *DeleteItemsRequest) GetBusinessIds() []string {
	if x != nil {
		return x.BusinessIds
	}
	return nil
}

func (x *DeleteItemsRequest) GetCascade() bool {
	if x != nil {
		return x.Cascade
	}
	return false
}

type DeleteItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeleteItemIds []string `protobuf:"bytes,1,rep,name=delete_item_ids,json=deleteItemIds,proto3" json:"delete_item_ids,omitempty"`
	RowsModified  int32    `protobuf:"varint,2,opt,name=rows_modified,json=rowsModified,proto3" json:"rows_modified,omitempty"`
}

func (x *DeleteItemsResponse) Reset() {
	*x = DeleteItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteItemsResponse) ProtoMessage() {}

func (x *DeleteItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteItemsResponse.ProtoReflect.Descriptor instead.
func (*DeleteItemsResponse) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteItemsResponse) GetDeleteItemIds() []string {
	if x != nil {
		return x.DeleteItemIds
	}
	return nil
}

func (x *DeleteItemsResponse) GetRowsModified() int32 {
	if x != nil {
		return x.RowsModified
	}
	return 0
}

type DeleteAllItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAllItemsRequest) Reset() {
	*x = DeleteAllItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAllItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAllItemsRequest) ProtoMessage() {}

func (x *DeleteAllItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAllItemsRequest.ProtoReflect.Descriptor instead.
func (*DeleteAllItemsRequest) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{26}
}

type DeleteAllItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAllItemsResponse) Reset() {
	*x = DeleteAllItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAllItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAllItemsResponse) ProtoMessage() {}

func (x *DeleteAllItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAllItemsResponse.ProtoReflect.Descriptor instead.
func (*DeleteAllItemsResponse) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{27}
}

type AggregateItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityType string `protobuf:"bytes,1,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
	BusinessId string `protobuf:"bytes,2,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
}

func (x *AggregateItemsRequest) Reset() {
	*x = AggregateItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregateItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateItemsRequest) ProtoMessage() {}

func (x *AggregateItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateItemsRequest.ProtoReflect.Descriptor instead.
func (*AggregateItemsRequest) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{28}
}

func (x *AggregateItemsRequest) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

func (x *AggregateItemsRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

type AggregateItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AggregateItemId   string   `protobuf:"bytes,1,opt,name=aggregate_item_id,json=aggregateItemId,proto3" json:"aggregate_item_id,omitempty"`
	AggregatedItemIds []string `protobuf:"bytes,2,rep,name=aggregated_item_ids,json=aggregatedItemIds,proto3" json:"aggregated_item_ids,omitempty"`
	NewBusinessId     string   `protobuf:"bytes,3,opt,name=new_business_id,json=newBusinessId,proto3" json:"new_business_id,omitempty"`
}

func (x *AggregateItemsResponse) Reset() {
	*x = AggregateItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregateItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateItemsResponse) ProtoMessage() {}

func (x *AggregateItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateItemsResponse.ProtoReflect.Descriptor instead.
func (*AggregateItemsResponse) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{29}
}

func (x *AggregateItemsResponse) GetAggregateItemId() string {
	if x != nil {
		return x.AggregateItemId
	}
	return ""
}

func (x *AggregateItemsResponse) GetAggregatedItemIds() []string {
	if x != nil {
		return x.AggregatedItemIds
	}
	return nil
}

func (x *AggregateItemsResponse) GetNewBusinessId() string {
	if x != nil {
		return x.NewBusinessId
	}
	return ""
}

type ListAllVersionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListAllVersionsRequest) Reset() {
	*x = ListAllVersionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllVersionsRequest) ProtoMessage() {}

func (x *ListAllVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllVersionsRequest.ProtoReflect.Descriptor instead.
func (*ListAllVersionsRequest) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{30}
}

type ListAllVersionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Versions []*ListAllVersionsResponse_Versions `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *ListAllVersionsResponse) Reset() {
	*x = ListAllVersionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllVersionsResponse) ProtoMessage() {}

func (x *ListAllVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllVersionsResponse.ProtoReflect.Descriptor instead.
func (*ListAllVersionsResponse) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{31}
}

func (x *ListAllVersionsResponse) GetVersions() []*ListAllVersionsResponse_Versions {
	if x != nil {
		return x.Versions
	}
	return nil
}

type ComputeItemsTreeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeEntityType   string `protobuf:"bytes,1,opt,name=node_entity_type,json=nodeEntityType,proto3" json:"node_entity_type,omitempty"`
	LinkFieldName    string `protobuf:"bytes,2,opt,name=link_field_name,json=linkFieldName,proto3" json:"link_field_name,omitempty"`
	DisplayFieldName string `protobuf:"bytes,3,opt,name=display_field_name,json=displayFieldName,proto3" json:"display_field_name,omitempty"`
}

func (x *ComputeItemsTreeRequest) Reset() {
	*x = ComputeItemsTreeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeItemsTreeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeItemsTreeRequest) ProtoMessage() {}

func (x *ComputeItemsTreeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeItemsTreeRequest.ProtoReflect.Descriptor instead.
func (*ComputeItemsTreeRequest) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{32}
}

func (x *ComputeItemsTreeRequest) GetNodeEntityType() string {
	if x != nil {
		return x.NodeEntityType
	}
	return ""
}

func (x *ComputeItemsTreeRequest) GetLinkFieldName() string {
	if x != nil {
		return x.LinkFieldName
	}
	return ""
}

func (x *ComputeItemsTreeRequest) GetDisplayFieldName() string {
	if x != nil {
		return x.DisplayFieldName
	}
	return ""
}

type ComputeItemsTreeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*ComputeItemsTreeResponse_TreeNode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *ComputeItemsTreeResponse) Reset() {
	*x = ComputeItemsTreeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeItemsTreeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeItemsTreeResponse) ProtoMessage() {}

func (x *ComputeItemsTreeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeItemsTreeResponse.ProtoReflect.Descriptor instead.
func (*ComputeItemsTreeResponse) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{33}
}

func (x *ComputeItemsTreeResponse) GetNodes() []*ComputeItemsTreeResponse_TreeNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type CreateItemResponse_PostActionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *CreateItemResponse_PostActionResult) Reset() {
	*x = CreateItemResponse_PostActionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateItemResponse_PostActionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateItemResponse_PostActionResult) ProtoMessage() {}

func (x *CreateItemResponse_PostActionResult) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateItemResponse_PostActionResult.ProtoReflect.Descriptor instead.
func (*CreateItemResponse_PostActionResult) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{1, 0}
}

func (x *CreateItemResponse_PostActionResult) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type ComputeVersionsResponse_Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId      string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	VersionDesc string                 `protobuf:"bytes,2,opt,name=version_desc,json=versionDesc,proto3" json:"version_desc,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *ComputeVersionsResponse_Version) Reset() {
	*x = ComputeVersionsResponse_Version{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeVersionsResponse_Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeVersionsResponse_Version) ProtoMessage() {}

func (x *ComputeVersionsResponse_Version) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeVersionsResponse_Version.ProtoReflect.Descriptor instead.
func (*ComputeVersionsResponse_Version) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ComputeVersionsResponse_Version) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *ComputeVersionsResponse_Version) GetVersionDesc() string {
	if x != nil {
		return x.VersionDesc
	}
	return ""
}

func (x *ComputeVersionsResponse_Version) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type ComputeVersionsByBusinessIdResponse_Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId      string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	VersionDesc string                 `protobuf:"bytes,2,opt,name=version_desc,json=versionDesc,proto3" json:"version_desc,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *ComputeVersionsByBusinessIdResponse_Version) Reset() {
	*x = ComputeVersionsByBusinessIdResponse_Version{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeVersionsByBusinessIdResponse_Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeVersionsByBusinessIdResponse_Version) ProtoMessage() {}

func (x *ComputeVersionsByBusinessIdResponse_Version) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeVersionsByBusinessIdResponse_Version.ProtoReflect.Descriptor instead.
func (*ComputeVersionsByBusinessIdResponse_Version) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ComputeVersionsByBusinessIdResponse_Version) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *ComputeVersionsByBusinessIdResponse_Version) GetVersionDesc() string {
	if x != nil {
		return x.VersionDesc
	}
	return ""
}

func (x *ComputeVersionsByBusinessIdResponse_Version) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type GetItemResponse_FullItemValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemValueId string `protobuf:"bytes,1,opt,name=item_value_id,json=itemValueId,proto3" json:"item_value_id,omitempty"`
	FieldName   string `protobuf:"bytes,2,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
	FieldValue  string `protobuf:"bytes,3,opt,name=field_value,json=fieldValue,proto3" json:"field_value,omitempty"`
	Language    string `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	Place       int32  `protobuf:"varint,5,opt,name=place,proto3" json:"place,omitempty"`
	Revision    int32  `protobuf:"varint,6,opt,name=revision,proto3" json:"revision,omitempty"`
}

func (x *GetItemResponse_FullItemValue) Reset() {
	*x = GetItemResponse_FullItemValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemResponse_FullItemValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemResponse_FullItemValue) ProtoMessage() {}

func (x *GetItemResponse_FullItemValue) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemResponse_FullItemValue.ProtoReflect.Descriptor instead.
func (*GetItemResponse_FullItemValue) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{21, 0}
}

func (x *GetItemResponse_FullItemValue) GetItemValueId() string {
	if x != nil {
		return x.ItemValueId
	}
	return ""
}

func (x *GetItemResponse_FullItemValue) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *GetItemResponse_FullItemValue) GetFieldValue() string {
	if x != nil {
		return x.FieldValue
	}
	return ""
}

func (x *GetItemResponse_FullItemValue) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *GetItemResponse_FullItemValue) GetPlace() int32 {
	if x != nil {
		return x.Place
	}
	return 0
}

func (x *GetItemResponse_FullItemValue) GetRevision() int32 {
	if x != nil {
		return x.Revision
	}
	return 0
}

type ListAllVersionsResponse_Versions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId string   `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	ItemIds    []string `protobuf:"bytes,2,rep,name=item_ids,json=itemIds,proto3" json:"item_ids,omitempty"`
}

func (x *ListAllVersionsResponse_Versions) Reset() {
	*x = ListAllVersionsResponse_Versions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllVersionsResponse_Versions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllVersionsResponse_Versions) ProtoMessage() {}

func (x *ListAllVersionsResponse_Versions) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllVersionsResponse_Versions.ProtoReflect.Descriptor instead.
func (*ListAllVersionsResponse_Versions) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{31, 0}
}

func (x *ListAllVersionsResponse_Versions) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *ListAllVersionsResponse_Versions) GetItemIds() []string {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

type ComputeItemsTreeResponse_Display struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language *string `protobuf:"bytes,1,opt,name=language,proto3,oneof" json:"language,omitempty"`
	Place    *int32  `protobuf:"varint,2,opt,name=place,proto3,oneof" json:"place,omitempty"`
	Display  string  `protobuf:"bytes,3,opt,name=display,proto3" json:"display,omitempty"`
}

func (x *ComputeItemsTreeResponse_Display) Reset() {
	*x = ComputeItemsTreeResponse_Display{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeItemsTreeResponse_Display) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeItemsTreeResponse_Display) ProtoMessage() {}

func (x *ComputeItemsTreeResponse_Display) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeItemsTreeResponse_Display.ProtoReflect.Descriptor instead.
func (*ComputeItemsTreeResponse_Display) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{33, 0}
}

func (x *ComputeItemsTreeResponse_Display) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *ComputeItemsTreeResponse_Display) GetPlace() int32 {
	if x != nil && x.Place != nil {
		return *x.Place
	}
	return 0
}

func (x *ComputeItemsTreeResponse_Display) GetDisplay() string {
	if x != nil {
		return x.Display
	}
	return ""
}

type ComputeItemsTreeResponse_TreeNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId       string                              `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ParentNodeId *string                             `protobuf:"bytes,2,opt,name=parent_node_id,json=parentNodeId,proto3,oneof" json:"parent_node_id,omitempty"`
	Depth        int32                               `protobuf:"varint,3,opt,name=depth,proto3" json:"depth,omitempty"`
	Display      []*ComputeItemsTreeResponse_Display `protobuf:"bytes,4,rep,name=display,proto3" json:"display,omitempty"`
}

func (x *ComputeItemsTreeResponse_TreeNode) Reset() {
	*x = ComputeItemsTreeResponse_TreeNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeItemsTreeResponse_TreeNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeItemsTreeResponse_TreeNode) ProtoMessage() {}

func (x *ComputeItemsTreeResponse_TreeNode) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_items_items_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeItemsTreeResponse_TreeNode.ProtoReflect.Descriptor instead.
func (*ComputeItemsTreeResponse_TreeNode) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_items_items_proto_rawDescGZIP(), []int{33, 1}
}

func (x *ComputeItemsTreeResponse_TreeNode) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ComputeItemsTreeResponse_TreeNode) GetParentNodeId() string {
	if x != nil && x.ParentNodeId != nil {
		return *x.ParentNodeId
	}
	return ""
}

func (x *ComputeItemsTreeResponse_TreeNode) GetDepth() int32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

func (x *ComputeItemsTreeResponse_TreeNode) GetDisplay() []*ComputeItemsTreeResponse_Display {
	if x != nil {
		return x.Display
	}
	return nil
}

var File_services_metadata_endpoints_items_items_proto protoreflect.FileDescriptor

var file_services_metadata_endpoints_items_items_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2f, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0d, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x18,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2f, 0x63, 0x66, 0x67, 0x2f, 0x6d, 0x65, 0x78, 0x63, 0x66, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x12, 0x64, 0x34, 0x6c, 0x2f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd4, 0x03, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d,
	0x65, 0x78, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x12, 0x31, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x61,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x13, 0x70, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x3a, 0xce, 0x02, 0x92, 0x41, 0xca,
	0x02, 0x32, 0xc7, 0x02, 0x7b, 0x22, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x3a, 0x7b, 0x22, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x22, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x22, 0x2c, 0x22, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x3a, 0x5b, 0x7b,
	0x22, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x22, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x22, 0x2c, 0x22, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x3a, 0x22, 0x4f, 0x6e, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x2c, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x61, 0x6e,
	0x20, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x6f, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x45, 0x6e, 0x74, 0x73, 0x63, 0x68, 0x65, 0x69, 0x64, 0x75, 0x6e, 0x67,
	0x73, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x22, 0x7d, 0x2c, 0x7b, 0x22, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x22, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x22,
	0x2c, 0x22, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x22, 0x41,
	0x2e, 0x4d, 0x2e, 0x20, 0x54, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x7d, 0x2c, 0x7b, 0x22, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x22, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x22, 0x2c, 0x22, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a,
	0x22, 0x45, 0x2e, 0x4c, 0x2e, 0x20, 0x42, 0x72, 0x6f, 0x77, 0x6e, 0x22, 0x7d, 0x2c, 0x7b, 0x22,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x22, 0x61, 0x62, 0x73, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x22, 0x2c, 0x22, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x3a, 0x22, 0x54, 0x68, 0x65, 0x20, 0x27, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x27, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x20, 0x6d, 0x61, 0x79,
	0x20, 0x62, 0x65, 0x2e, 0x2e, 0x2e, 0x22, 0x7d, 0x5d, 0x7d, 0x7d, 0x22, 0xb2, 0x01, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x1a, 0x2a, 0x0a, 0x10,
	0x50, 0x6f, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x36, 0x92, 0x41, 0x33, 0x32, 0x31, 0x7b,
	0x22, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x3a, 0x22, 0x38, 0x64, 0x39, 0x38, 0x37, 0x36,
	0x64, 0x62, 0x2d, 0x65, 0x61, 0x64, 0x39, 0x2d, 0x34, 0x62, 0x30, 0x65, 0x2d, 0x39, 0x63, 0x63,
	0x31, 0x2d, 0x64, 0x31, 0x37, 0x32, 0x33, 0x65, 0x65, 0x66, 0x31, 0x39, 0x38, 0x38, 0x22, 0x7d,
	0x22, 0xe0, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x34, 0x6c,
	0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x40, 0x0a, 0x1c, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69,
	0x64, 0x65, 0x5f, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x6c, 0x67,
	0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x6f, 0x76,
	0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x41,
	0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x59, 0x0a, 0x13, 0x64, 0x75, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e,
	0x63, 0x66, 0x67, 0x2e, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x44, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x52,
	0x12, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69,
	0x74, 0x68, 0x6d, 0x22, 0x30, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15,
	0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0xe8, 0x01, 0x0a, 0x17, 0x43, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78,
	0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x1a, 0x80, 0x01, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x45, 0x0a, 0x22, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x80, 0x02, 0x0a, 0x23, 0x43,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x56, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x80, 0x01, 0x0a, 0x07, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x73, 0x63, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa9, 0x01,
	0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65,
	0x78, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x71, 0x0a, 0x16, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0c, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x6e,
	0x66, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x22, 0xa7, 0x01, 0x0a,
	0x25, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x46, 0x72, 0x6f, 0x6d, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x33, 0x0a, 0x16, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x44, 0x0a, 0x26, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x22, 0x95, 0x01, 0x0a,
	0x27, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x46, 0x72, 0x6f, 0x6d, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a,
	0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x28, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x22, 0x16, 0x0a, 0x14,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0xc7, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0c, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a,
	0x69, 0x6e, 0x66, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x22, 0xc5,
	0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x09, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x64, 0x34,
	0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x59, 0x0a, 0x0e, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x47, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22,
	0xb6, 0x01, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64,
	0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74,
	0x22, 0x29, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0xdc, 0x03, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x44, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0xc1, 0x01, 0x0a, 0x0d, 0x46, 0x75, 0x6c, 0x6c, 0x49,
	0x74, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x69, 0x74, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x22, 0x2c, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6c,
	0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49,
	0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x22, 0x62, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x6f, 0x77, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x72, 0x6f, 0x77, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x59, 0x0a, 0x15, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x9c,
	0x01, 0x0a, 0x16, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x11, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x5f, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6e, 0x65, 0x77, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x18, 0x0a,
	0x16, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xae, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x6c, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x1a, 0x46, 0x0a, 0x08, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x17, 0x43, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6e, 0x6f, 0x64, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x69, 0x6e, 0x6b, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x9f, 0x03, 0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x46, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x54, 0x72, 0x65,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x1a, 0x76, 0x0a, 0x07, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x12, 0x1f, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x1a, 0xc2, 0x01, 0x0a, 0x08, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x12, 0x49, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x64, 0x34, 0x6c, 0x2e,
	0x6d, 0x65, 0x78, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x32, 0xf1, 0x20, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0xcf, 0x03, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x20, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xfb, 0x02, 0x92, 0x41, 0xbf, 0x02, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x6e, 0x65, 0x77, 0x20, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x20, 0x69, 0x74, 0x65, 0x6d, 0x4a, 0x64, 0x0a, 0x03,
	0x32, 0x30, 0x30, 0x12, 0x5d, 0x0a, 0x59, 0x54, 0x68, 0x69, 0x73, 0x20, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x20, 0x69, 0x73, 0x20, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x20, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x2e, 0x20, 0x49, 0x74, 0x20, 0x69, 0x73, 0x20, 0x61, 0x6e,
	0x20, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x52, 0x45, 0x53, 0x54, 0x20, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x20, 0x53, 0x77,
	0x61, 0x67, 0x67, 0x65, 0x72, 0x20, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x12, 0x00, 0x4a, 0x8f, 0x01, 0x0a, 0x03, 0x32, 0x30, 0x31, 0x12, 0x87, 0x01, 0x0a, 0x3e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x20, 0x69, 0x74, 0x65, 0x6d, 0x20, 0x77, 0x61, 0x73,
	0x20, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x20, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x66, 0x75, 0x6c, 0x6c, 0x79, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x69, 0x74, 0x73, 0x20, 0x49, 0x44,
	0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x2e, 0x22, 0x45, 0x0a,
	0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f,
	0x6e, 0x12, 0x31, 0x7b, 0x22, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x3a, 0x22, 0x38, 0x64,
	0x39, 0x38, 0x37, 0x36, 0x64, 0x62, 0x2d, 0x65, 0x61, 0x64, 0x39, 0x2d, 0x34, 0x62, 0x30, 0x65,
	0x2d, 0x39, 0x63, 0x63, 0x31, 0x2d, 0x64, 0x31, 0x37, 0x32, 0x33, 0x65, 0x65, 0x66, 0x31, 0x39,
	0x38, 0x38, 0x22, 0x7d, 0x62, 0x24, 0x0a, 0x22, 0x0a, 0x12, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32,
	0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x64, 0x73, 0x12, 0x0c, 0x0a, 0x0a,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x77, 0x98, 0xf1, 0x04, 0x02, 0xaa, 0xf1,
	0x04, 0x0f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x30, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x9f, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x42, 0x75, 0x6c, 0x6b, 0x12, 0x25, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78,
	0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x98, 0xf1, 0x04, 0x02, 0xaa, 0xf1, 0x04, 0x0f, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30,
	0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f,
	0x62, 0x75, 0x6c, 0x6b, 0x12, 0x83, 0x01, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x1f, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x98, 0xf1, 0x04, 0x02, 0xaa, 0xf1, 0x04, 0x0d, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x04, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x18, 0x12, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x87, 0x01, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78,
	0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x98, 0xf1, 0x04, 0x02, 0xaa, 0xf1, 0x04, 0x0d, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x04, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x22, 0x12, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x7d, 0x12, 0xe6, 0x03, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x20, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x92, 0x03, 0x92, 0x41, 0xcf, 0x02, 0x12,
	0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x61, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x20, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x1a, 0x86, 0x01, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x20, 0x69,
	0x74, 0x65, 0x6d, 0x20, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x20, 0x62, 0x79, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x49, 0x44, 0x2e, 0x20, 0x49, 0x6e, 0x20, 0x63, 0x61, 0x73, 0x65, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x69, 0x74, 0x65, 0x6d, 0x20, 0x64, 0x6f, 0x65, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x65,
	0x78, 0x69, 0x73, 0x74, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x20, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x73, 0x74, 0x69, 0x6c, 0x6c,
	0x20, 0x62, 0x65, 0x20, 0x61, 0x20, 0x32, 0x30, 0x34, 0x20, 0x28, 0x61, 0x6e, 0x64, 0x20, 0x6e,
	0x6f, 0x74, 0x20, 0x61, 0x20, 0x34, 0x30, 0x34, 0x20, 0x6f, 0x72, 0x20, 0x34, 0x30, 0x33, 0x29,
	0x2e, 0x4a, 0x3c, 0x0a, 0x03, 0x32, 0x30, 0x34, 0x12, 0x35, 0x0a, 0x33, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x20,
	0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x74, 0x65, 0x6d, 0x20, 0x6f, 0x72, 0x20, 0x69,
	0x74, 0x65, 0x6d, 0x20, 0x77, 0x61, 0x73, 0x20, 0x61, 0x62, 0x73, 0x65, 0x6e, 0x74, 0x2e, 0x4a,
	0x26, 0x0a, 0x03, 0x34, 0x30, 0x31, 0x12, 0x1f, 0x0a, 0x1d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x20, 0x69, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x62, 0x45, 0x0a, 0x1f, 0x0a, 0x0f, 0x4f, 0x41, 0x75,
	0x74, 0x68, 0x32, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0c, 0x0a, 0x0a,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x77, 0x0a, 0x22, 0x0a, 0x12, 0x4f, 0x41,
	0x75, 0x74, 0x68, 0x32, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x64, 0x73,
	0x12, 0x0c, 0x0a, 0x0a, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x77, 0x98, 0xf1,
	0x04, 0x02, 0xaa, 0xf1, 0x04, 0x0f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x06, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x2a, 0x20, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x30, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x8e, 0x07,
	0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x21, 0x2e,
	0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb7, 0x06, 0x92, 0x41, 0xfb, 0x05, 0x12, 0x16, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x20, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x2e, 0x1a, 0xe6, 0x03, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x20, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x20,
	0x67, 0x69, 0x76, 0x65, 0x6e, 0x20, 0x62, 0x79, 0x20, 0x74, 0x68, 0x65, 0x20, 0x49, 0x44, 0x73,
	0x20, 0x28, 0x69, 0x74, 0x65, 0x6d, 0x20, 0x6f, 0x72, 0x20, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x29, 0x2c, 0x20, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x74,
	0x6f, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x66,
	0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x69, 0x66, 0x20, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x2e, 0x20, 0x41, 0x20, 0x32, 0x30, 0x34, 0x20, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x20, 0x28, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x20, 0x62, 0x6f, 0x64,
	0x79, 0x29, 0x20, 0x6d, 0x65, 0x61, 0x6e, 0x73, 0x20, 0x6e, 0x6f, 0x20, 0x69, 0x74, 0x65, 0x6d,
	0x20, 0x49, 0x44, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x77,
	0x65, 0x72, 0x65, 0x20, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x20, 0x6f, 0x72, 0x20, 0x64, 0x65, 0x72,
	0x69, 0x76, 0x65, 0x64, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x74, 0x68, 0x65, 0x20, 0x67, 0x69,
	0x76, 0x65, 0x6e, 0x20, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x20, 0x49, 0x44, 0x73,
	0x2e, 0x20, 0x41, 0x20, 0x32, 0x30, 0x30, 0x20, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x20, 0x6d, 0x65, 0x61, 0x6e, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x77, 0x65, 0x72, 0x65, 0x20, 0x61, 0x74, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x65, 0x64, 0x3a, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x65, 0x64, 0x20, 0x62, 0x6f, 0x64, 0x79, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x73, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x20, 0x49, 0x44,
	0x73, 0x20, 0x77, 0x65, 0x72, 0x65, 0x20, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64,
	0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x61, 0x6e,
	0x64, 0x20, 0x68, 0x6f, 0x77, 0x20, 0x6d, 0x61, 0x6e, 0x79, 0x20, 0x44, 0x42, 0x20, 0x72, 0x6f,
	0x77, 0x73, 0x20, 0x77, 0x65, 0x72, 0x65, 0x20, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x20,
	0x61, 0x73, 0x20, 0x61, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x20, 0x49, 0x6e, 0x20,
	0x63, 0x61, 0x73, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x20, 0x64,
	0x6f, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x65, 0x78, 0x69, 0x73, 0x74, 0x2c, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x77, 0x69, 0x6c,
	0x6c, 0x20, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x20, 0x62, 0x65, 0x20, 0x61, 0x20, 0x32, 0x30, 0x30,
	0x2f, 0x32, 0x30, 0x34, 0x20, 0x28, 0x61, 0x6e, 0x64, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x61, 0x20,
	0x34, 0x30, 0x34, 0x20, 0x6f, 0x72, 0x20, 0x34, 0x30, 0x33, 0x29, 0x2e, 0x4a, 0x3d, 0x0a, 0x03,
	0x32, 0x30, 0x30, 0x12, 0x36, 0x0a, 0x34, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75,
	0x6c, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x20, 0x6f, 0x72, 0x20, 0x69, 0x74, 0x65, 0x6d, 0x20,
	0x77, 0x61, 0x73, 0x20, 0x61, 0x62, 0x73, 0x65, 0x6e, 0x74, 0x2e, 0x4a, 0x4a, 0x0a, 0x03, 0x32,
	0x30, 0x34, 0x12, 0x43, 0x0a, 0x41, 0x4e, 0x6f, 0x20, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x20, 0x49,
	0x44, 0x20, 0x74, 0x6f, 0x20, 0x62, 0x65, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x20,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x20, 0x6f, 0x72, 0x20, 0x64, 0x65, 0x72,
	0x69, 0x76, 0x65, 0x64, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x20, 0x49, 0x44, 0x73, 0x2e, 0x4a, 0x26, 0x0a, 0x03, 0x34, 0x30, 0x31, 0x12, 0x1f,
	0x0a, 0x1d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x20, 0x69, 0x73, 0x20, 0x6e, 0x6f, 0x74,
	0x20, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x62,
	0x45, 0x0a, 0x1f, 0x0a, 0x0f, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x2f, 0x61, 0x75, 0x74, 0x68,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x0c, 0x0a, 0x0a, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x3a, 0x77, 0x0a, 0x22, 0x0a, 0x12, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x64, 0x73, 0x12, 0x0c, 0x0a, 0x0a, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x3a, 0x77, 0x98, 0xf1, 0x04, 0x02, 0xaa, 0xf1, 0x04, 0x0f, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x2a, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0xe9,
	0x02, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x24, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65,
	0x78, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c,
	0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x89,
	0x02, 0x92, 0x41, 0xcc, 0x01, 0x12, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x61, 0x6c,
	0x6c, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x20, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x2e, 0x4a, 0x3f, 0x0a, 0x03, 0x32, 0x30, 0x34, 0x12, 0x38, 0x0a, 0x36, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x20,
	0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x20, 0x6f, 0x72, 0x20,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x20, 0x77, 0x65, 0x72, 0x65, 0x20, 0x61, 0x62, 0x73, 0x65, 0x6e,
	0x74, 0x2e, 0x4a, 0x26, 0x0a, 0x03, 0x34, 0x30, 0x31, 0x12, 0x1f, 0x0a, 0x1d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x20, 0x69, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x62, 0x45, 0x0a, 0x1f, 0x0a, 0x0f,
	0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x0c, 0x0a, 0x0a, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x77, 0x0a, 0x22, 0x0a,
	0x12, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x72,
	0x65, 0x64, 0x73, 0x12, 0x0c, 0x0a, 0x0a, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x3a,
	0x77, 0x98, 0xf1, 0x04, 0x02, 0xaa, 0xf1, 0x04, 0x0f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x2a, 0x1a,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2f, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0xa8, 0x01, 0x0a, 0x0f, 0x43,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25,
	0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x98,
	0xf1, 0x04, 0x02, 0xaa, 0xf1, 0x04, 0x0d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x04,
	0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x22, 0x29, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x30, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x2f, 0x7b, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0xcd, 0x01, 0x0a, 0x1b, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x49, 0x44, 0x12, 0x31, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d,
	0x65, 0x78, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0x98, 0xf1,
	0x04, 0x02, 0xaa, 0xf1, 0x04, 0x0d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x04, 0x72,
	0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x30, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69,
	0x64, 0x3d, 0x2a, 0x2a, 0x7d, 0x12, 0x9b, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d,
	0x65, 0x78, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x98, 0xf1, 0x04, 0x02, 0xaa, 0xf1, 0x04, 0x0f, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30,
	0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0xd1, 0x01, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x73, 0x12, 0x34, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78,
	0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x64,
	0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x72, 0x6f, 0x6d,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x42, 0x98, 0xf1, 0x04, 0x02, 0xaa, 0xf1, 0x04, 0x0f, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0xe1, 0x01, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x36, 0x2e, 0x64,
	0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x72, 0x6f, 0x6d,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4c, 0x98,
	0xf1, 0x04, 0x02, 0xaa, 0xf1, 0x04, 0x0f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x06,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x3a, 0x01, 0x2a, 0x22,
	0x2a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x73, 0x12, 0x93, 0x01, 0x0a, 0x0d,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x2e,
	0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x98, 0xf1, 0x04, 0x02, 0xaa, 0xf1,
	0x04, 0x0d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x04, 0x72, 0x65, 0x61, 0x64, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x5f, 0x0a, 0x0e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x24, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x64, 0x34, 0x6c, 0x2e,
	0x6d, 0x65, 0x78, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x98, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78,
	0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x6c, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x98, 0xf1, 0x04, 0x02, 0xaa, 0xf1, 0x04, 0x0d, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x04, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1b, 0x12, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x9a, 0x01,
	0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x54, 0x72,
	0x65, 0x65, 0x12, 0x26, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x54,
	0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x64, 0x34, 0x6c,
	0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x35, 0x98, 0xf1, 0x04, 0x02, 0xaa, 0xf1, 0x04, 0x0d, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x04, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a,
	0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x74, 0x72, 0x65, 0x65, 0x42, 0x5f, 0x5a, 0x5d, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x73, 0x75, 0x6e, 0x64, 0x68,
	0x65, 0x69, 0x74, 0x73, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x72, 0x6b, 0x69, 0x2d, 0x6d, 0x65,
	0x78, 0x2d, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x6d, 0x65, 0x78, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x2f, 0x70, 0x62, 0x3b, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_services_metadata_endpoints_items_items_proto_rawDescOnce sync.Once
	file_services_metadata_endpoints_items_items_proto_rawDescData = file_services_metadata_endpoints_items_items_proto_rawDesc
)

func file_services_metadata_endpoints_items_items_proto_rawDescGZIP() []byte {
	file_services_metadata_endpoints_items_items_proto_rawDescOnce.Do(func() {
		file_services_metadata_endpoints_items_items_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_metadata_endpoints_items_items_proto_rawDescData)
	})
	return file_services_metadata_endpoints_items_items_proto_rawDescData
}

var file_services_metadata_endpoints_items_items_proto_msgTypes = make([]protoimpl.MessageInfo, 42)
var file_services_metadata_endpoints_items_items_proto_goTypes = []interface{}{
	(*CreateItemRequest)(nil),                           // 0: d4l.mex.items.CreateItemRequest
	(*CreateItemResponse)(nil),                          // 1: d4l.mex.items.CreateItemResponse
	(*CreateItemsBulkRequest)(nil),                      // 2: d4l.mex.items.CreateItemsBulkRequest
	(*CreateItemsBulkResponse)(nil),                     // 3: d4l.mex.items.CreateItemsBulkResponse
	(*ComputeVersionsRequest)(nil),                      // 4: d4l.mex.items.ComputeVersionsRequest
	(*ComputeVersionsResponse)(nil),                     // 5: d4l.mex.items.ComputeVersionsResponse
	(*ComputeVersionsByBusinessIdRequest)(nil),          // 6: d4l.mex.items.ComputeVersionsByBusinessIdRequest
	(*ComputeVersionsByBusinessIdResponse)(nil),         // 7: d4l.mex.items.ComputeVersionsByBusinessIdResponse
	(*CreateRelationRequest)(nil),                       // 8: d4l.mex.items.CreateRelationRequest
	(*CreateRelationResponse)(nil),                      // 9: d4l.mex.items.CreateRelationResponse
	(*CreateRelationsFromBusinessIdsRequest)(nil),       // 10: d4l.mex.items.CreateRelationsFromBusinessIdsRequest
	(*CreateRelationsFromBusinessIdsResponse)(nil),      // 11: d4l.mex.items.CreateRelationsFromBusinessIdsResponse
	(*CreateRelationsFromOriginalItemsRequest)(nil),     // 12: d4l.mex.items.CreateRelationsFromOriginalItemsRequest
	(*CreateRelationsFromOriginalItemsResponse)(nil),    // 13: d4l.mex.items.CreateRelationsFromOriginalItemsResponse
	(*ListRelationsRequest)(nil),                        // 14: d4l.mex.items.ListRelationsRequest
	(*ListRelation)(nil),                                // 15: d4l.mex.items.ListRelation
	(*ListRelationsResponse)(nil),                       // 16: d4l.mex.items.ListRelationsResponse
	(*ListItemsRequest)(nil),                            // 17: d4l.mex.items.ListItemsRequest
	(*ListItem)(nil),                                    // 18: d4l.mex.items.ListItem
	(*ListItemsResponse)(nil),                           // 19: d4l.mex.items.ListItemsResponse
	(*GetItemRequest)(nil),                              // 20: d4l.mex.items.GetItemRequest
	(*GetItemResponse)(nil),                             // 21: d4l.mex.items.GetItemResponse
	(*DeleteItemRequest)(nil),                           // 22: d4l.mex.items.DeleteItemRequest
	(*DeleteItemResponse)(nil),                          // 23: d4l.mex.items.DeleteItemResponse
	(*DeleteItemsRequest)(nil),                          // 24: d4l.mex.items.DeleteItemsRequest
	(*DeleteItemsResponse)(nil),                         // 25: d4l.mex.items.DeleteItemsResponse
	(*DeleteAllItemsRequest)(nil),                       // 26: d4l.mex.items.DeleteAllItemsRequest
	(*DeleteAllItemsResponse)(nil),                      // 27: d4l.mex.items.DeleteAllItemsResponse
	(*AggregateItemsRequest)(nil),                       // 28: d4l.mex.items.AggregateItemsRequest
	(*AggregateItemsResponse)(nil),                      // 29: d4l.mex.items.AggregateItemsResponse
	(*ListAllVersionsRequest)(nil),                      // 30: d4l.mex.items.ListAllVersionsRequest
	(*ListAllVersionsResponse)(nil),                     // 31: d4l.mex.items.ListAllVersionsResponse
	(*ComputeItemsTreeRequest)(nil),                     // 32: d4l.mex.items.ComputeItemsTreeRequest
	(*ComputeItemsTreeResponse)(nil),                    // 33: d4l.mex.items.ComputeItemsTreeResponse
	(*CreateItemResponse_PostActionResult)(nil),         // 34: d4l.mex.items.CreateItemResponse.PostActionResult
	(*ComputeVersionsResponse_Version)(nil),             // 35: d4l.mex.items.ComputeVersionsResponse.Version
	(*ComputeVersionsByBusinessIdResponse_Version)(nil), // 36: d4l.mex.items.ComputeVersionsByBusinessIdResponse.Version
	nil,                                       // 37: d4l.mex.items.ListRelationsResponse.RelationsEntry
	(*GetItemResponse_FullItemValue)(nil),     // 38: d4l.mex.items.GetItemResponse.FullItemValue
	(*ListAllVersionsResponse_Versions)(nil),  // 39: d4l.mex.items.ListAllVersionsResponse.Versions
	(*ComputeItemsTreeResponse_Display)(nil),  // 40: d4l.mex.items.ComputeItemsTreeResponse.Display
	(*ComputeItemsTreeResponse_TreeNode)(nil), // 41: d4l.mex.items.ComputeItemsTreeResponse.TreeNode
	(*items.Item)(nil),                        // 42: d4l.mex.items.Item
	(cfg.DuplicateDetectionAlgorithm)(0),      // 43: d4l.mex.cfg.DuplicateDetectionAlgorithm
	(*items.ItemValue)(nil),                   // 44: d4l.mex.items.ItemValue
	(*timestamppb.Timestamp)(nil),             // 45: google.protobuf.Timestamp
}
var file_services_metadata_endpoints_items_items_proto_depIdxs = []int32{
	42, // 0: d4l.mex.items.CreateItemRequest.item:type_name -> d4l.mex.items.Item
	42, // 1: d4l.mex.items.CreateItemsBulkRequest.items:type_name -> d4l.mex.items.Item
	43, // 2: d4l.mex.items.CreateItemsBulkRequest.duplicate_algorithm:type_name -> d4l.mex.cfg.DuplicateDetectionAlgorithm
	35, // 3: d4l.mex.items.ComputeVersionsResponse.versions:type_name -> d4l.mex.items.ComputeVersionsResponse.Version
	36, // 4: d4l.mex.items.ComputeVersionsByBusinessIdResponse.versions:type_name -> d4l.mex.items.ComputeVersionsByBusinessIdResponse.Version
	44, // 5: d4l.mex.items.CreateRelationRequest.values:type_name -> d4l.mex.items.ItemValue
	37, // 6: d4l.mex.items.ListRelationsResponse.relations:type_name -> d4l.mex.items.ListRelationsResponse.RelationsEntry
	45, // 7: d4l.mex.items.ListItem.created_at:type_name -> google.protobuf.Timestamp
	18, // 8: d4l.mex.items.ListItemsResponse.items:type_name -> d4l.mex.items.ListItem
	45, // 9: d4l.mex.items.GetItemResponse.created_at:type_name -> google.protobuf.Timestamp
	38, // 10: d4l.mex.items.GetItemResponse.values:type_name -> d4l.mex.items.GetItemResponse.FullItemValue
	39, // 11: d4l.mex.items.ListAllVersionsResponse.versions:type_name -> d4l.mex.items.ListAllVersionsResponse.Versions
	41, // 12: d4l.mex.items.ComputeItemsTreeResponse.nodes:type_name -> d4l.mex.items.ComputeItemsTreeResponse.TreeNode
	45, // 13: d4l.mex.items.ComputeVersionsResponse.Version.created_at:type_name -> google.protobuf.Timestamp
	45, // 14: d4l.mex.items.ComputeVersionsByBusinessIdResponse.Version.created_at:type_name -> google.protobuf.Timestamp
	15, // 15: d4l.mex.items.ListRelationsResponse.RelationsEntry.value:type_name -> d4l.mex.items.ListRelation
	40, // 16: d4l.mex.items.ComputeItemsTreeResponse.TreeNode.display:type_name -> d4l.mex.items.ComputeItemsTreeResponse.Display
	0,  // 17: d4l.mex.items.Items.CreateItem:input_type -> d4l.mex.items.CreateItemRequest
	2,  // 18: d4l.mex.items.Items.CreateItemsBulk:input_type -> d4l.mex.items.CreateItemsBulkRequest
	17, // 19: d4l.mex.items.Items.ListItems:input_type -> d4l.mex.items.ListItemsRequest
	20, // 20: d4l.mex.items.Items.GetItem:input_type -> d4l.mex.items.GetItemRequest
	22, // 21: d4l.mex.items.Items.DeleteItem:input_type -> d4l.mex.items.DeleteItemRequest
	24, // 22: d4l.mex.items.Items.DeleteItems:input_type -> d4l.mex.items.DeleteItemsRequest
	26, // 23: d4l.mex.items.Items.DeleteAllItems:input_type -> d4l.mex.items.DeleteAllItemsRequest
	4,  // 24: d4l.mex.items.Items.ComputeVersions:input_type -> d4l.mex.items.ComputeVersionsRequest
	6,  // 25: d4l.mex.items.Items.ComputeVersionsByBusinessID:input_type -> d4l.mex.items.ComputeVersionsByBusinessIdRequest
	8,  // 26: d4l.mex.items.Items.CreateRelation:input_type -> d4l.mex.items.CreateRelationRequest
	10, // 27: d4l.mex.items.Items.CreateRelationsFromBusinessIds:input_type -> d4l.mex.items.CreateRelationsFromBusinessIdsRequest
	12, // 28: d4l.mex.items.Items.CreateRelationsFromOriginalItems:input_type -> d4l.mex.items.CreateRelationsFromOriginalItemsRequest
	14, // 29: d4l.mex.items.Items.ListRelations:input_type -> d4l.mex.items.ListRelationsRequest
	28, // 30: d4l.mex.items.Items.AggregateItems:input_type -> d4l.mex.items.AggregateItemsRequest
	30, // 31: d4l.mex.items.Items.ListAllVersions:input_type -> d4l.mex.items.ListAllVersionsRequest
	32, // 32: d4l.mex.items.Items.ComputeItemsTree:input_type -> d4l.mex.items.ComputeItemsTreeRequest
	1,  // 33: d4l.mex.items.Items.CreateItem:output_type -> d4l.mex.items.CreateItemResponse
	3,  // 34: d4l.mex.items.Items.CreateItemsBulk:output_type -> d4l.mex.items.CreateItemsBulkResponse
	19, // 35: d4l.mex.items.Items.ListItems:output_type -> d4l.mex.items.ListItemsResponse
	21, // 36: d4l.mex.items.Items.GetItem:output_type -> d4l.mex.items.GetItemResponse
	23, // 37: d4l.mex.items.Items.DeleteItem:output_type -> d4l.mex.items.DeleteItemResponse
	25, // 38: d4l.mex.items.Items.DeleteItems:output_type -> d4l.mex.items.DeleteItemsResponse
	27, // 39: d4l.mex.items.Items.DeleteAllItems:output_type -> d4l.mex.items.DeleteAllItemsResponse
	5,  // 40: d4l.mex.items.Items.ComputeVersions:output_type -> d4l.mex.items.ComputeVersionsResponse
	7,  // 41: d4l.mex.items.Items.ComputeVersionsByBusinessID:output_type -> d4l.mex.items.ComputeVersionsByBusinessIdResponse
	9,  // 42: d4l.mex.items.Items.CreateRelation:output_type -> d4l.mex.items.CreateRelationResponse
	11, // 43: d4l.mex.items.Items.CreateRelationsFromBusinessIds:output_type -> d4l.mex.items.CreateRelationsFromBusinessIdsResponse
	13, // 44: d4l.mex.items.Items.CreateRelationsFromOriginalItems:output_type -> d4l.mex.items.CreateRelationsFromOriginalItemsResponse
	16, // 45: d4l.mex.items.Items.ListRelations:output_type -> d4l.mex.items.ListRelationsResponse
	29, // 46: d4l.mex.items.Items.AggregateItems:output_type -> d4l.mex.items.AggregateItemsResponse
	31, // 47: d4l.mex.items.Items.ListAllVersions:output_type -> d4l.mex.items.ListAllVersionsResponse
	33, // 48: d4l.mex.items.Items.ComputeItemsTree:output_type -> d4l.mex.items.ComputeItemsTreeResponse
	33, // [33:49] is the sub-list for method output_type
	17, // [17:33] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_services_metadata_endpoints_items_items_proto_init() }
func file_services_metadata_endpoints_items_items_proto_init() {
	if File_services_metadata_endpoints_items_items_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_metadata_endpoints_items_items_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateItemsBulkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateItemsBulkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeVersionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeVersionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeVersionsByBusinessIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeVersionsByBusinessIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRelationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRelationsFromBusinessIdsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRelationsFromBusinessIdsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRelationsFromOriginalItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRelationsFromOriginalItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRelationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRelation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRelationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAllItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAllItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregateItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregateItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllVersionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllVersionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeItemsTreeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeItemsTreeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateItemResponse_PostActionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeVersionsResponse_Version); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeVersionsByBusinessIdResponse_Version); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemResponse_FullItemValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllVersionsResponse_Versions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeItemsTreeResponse_Display); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_items_items_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeItemsTreeResponse_TreeNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_services_metadata_endpoints_items_items_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_services_metadata_endpoints_items_items_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_services_metadata_endpoints_items_items_proto_msgTypes[21].OneofWrappers = []interface{}{}
	file_services_metadata_endpoints_items_items_proto_msgTypes[40].OneofWrappers = []interface{}{}
	file_services_metadata_endpoints_items_items_proto_msgTypes[41].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_metadata_endpoints_items_items_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   42,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_metadata_endpoints_items_items_proto_goTypes,
		DependencyIndexes: file_services_metadata_endpoints_items_items_proto_depIdxs,
		MessageInfos:      file_services_metadata_endpoints_items_items_proto_msgTypes,
	}.Build()
	File_services_metadata_endpoints_items_items_proto = out.File
	file_services_metadata_endpoints_items_items_proto_rawDesc = nil
	file_services_metadata_endpoints_items_items_proto_goTypes = nil
	file_services_metadata_endpoints_items_items_proto_depIdxs = nil
}
