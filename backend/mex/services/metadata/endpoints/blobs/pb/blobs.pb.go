// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.22.0
// source: services/metadata/endpoints/blobs/blobs.proto

package pbBlobs

import (
	blobs "github.com/d4l-data4life/mex/mex/shared/blobs"
	_ "github.com/d4l-data4life/mex/mex/shared/known/securitypb"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MeshTestRequest_LoadingMode int32

const (
	MeshTestRequest_LOADING_MODE_IN_MEMORY MeshTestRequest_LoadingMode = 0
	MeshTestRequest_LOADING_MODE_TEMP_FILE MeshTestRequest_LoadingMode = 1
)

// Enum value maps for MeshTestRequest_LoadingMode.
var (
	MeshTestRequest_LoadingMode_name = map[int32]string{
		0: "LOADING_MODE_IN_MEMORY",
		1: "LOADING_MODE_TEMP_FILE",
	}
	MeshTestRequest_LoadingMode_value = map[string]int32{
		"LOADING_MODE_IN_MEMORY": 0,
		"LOADING_MODE_TEMP_FILE": 1,
	}
)

func (x MeshTestRequest_LoadingMode) Enum() *MeshTestRequest_LoadingMode {
	p := new(MeshTestRequest_LoadingMode)
	*p = x
	return p
}

func (x MeshTestRequest_LoadingMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MeshTestRequest_LoadingMode) Descriptor() protoreflect.EnumDescriptor {
	return file_services_metadata_endpoints_blobs_blobs_proto_enumTypes[0].Descriptor()
}

func (MeshTestRequest_LoadingMode) Type() protoreflect.EnumType {
	return &file_services_metadata_endpoints_blobs_blobs_proto_enumTypes[0]
}

func (x MeshTestRequest_LoadingMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MeshTestRequest_LoadingMode.Descriptor instead.
func (MeshTestRequest_LoadingMode) EnumDescriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_blobs_blobs_proto_rawDescGZIP(), []int{8, 0}
}

type CreateBlobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlobName string `protobuf:"bytes,1,opt,name=blob_name,json=blobName,proto3" json:"blob_name,omitempty"`
	BlobType string `protobuf:"bytes,2,opt,name=blob_type,json=blobType,proto3" json:"blob_type,omitempty"`
	Data     []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Append   bool   `protobuf:"varint,4,opt,name=append,proto3" json:"append,omitempty"`
}

func (x *CreateBlobRequest) Reset() {
	*x = CreateBlobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBlobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBlobRequest) ProtoMessage() {}

func (x *CreateBlobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBlobRequest.ProtoReflect.Descriptor instead.
func (*CreateBlobRequest) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_blobs_blobs_proto_rawDescGZIP(), []int{0}
}

func (x *CreateBlobRequest) GetBlobName() string {
	if x != nil {
		return x.BlobName
	}
	return ""
}

func (x *CreateBlobRequest) GetBlobType() string {
	if x != nil {
		return x.BlobType
	}
	return ""
}

func (x *CreateBlobRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateBlobRequest) GetAppend() bool {
	if x != nil {
		return x.Append
	}
	return false
}

type CreateBlobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BytesWritten int32 `protobuf:"varint,2,opt,name=bytes_written,json=bytesWritten,proto3" json:"bytes_written,omitempty"`
}

func (x *CreateBlobResponse) Reset() {
	*x = CreateBlobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBlobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBlobResponse) ProtoMessage() {}

func (x *CreateBlobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBlobResponse.ProtoReflect.Descriptor instead.
func (*CreateBlobResponse) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_blobs_blobs_proto_rawDescGZIP(), []int{1}
}

func (x *CreateBlobResponse) GetBytesWritten() int32 {
	if x != nil {
		return x.BytesWritten
	}
	return 0
}

type ListBlobsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListBlobsRequest) Reset() {
	*x = ListBlobsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBlobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlobsRequest) ProtoMessage() {}

func (x *ListBlobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlobsRequest.ProtoReflect.Descriptor instead.
func (*ListBlobsRequest) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_blobs_blobs_proto_rawDescGZIP(), []int{2}
}

type ListBlobsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlobInfos []*blobs.BlobInfo `protobuf:"bytes,1,rep,name=blob_infos,json=blobInfos,proto3" json:"blob_infos,omitempty"`
}

func (x *ListBlobsResponse) Reset() {
	*x = ListBlobsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBlobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlobsResponse) ProtoMessage() {}

func (x *ListBlobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlobsResponse.ProtoReflect.Descriptor instead.
func (*ListBlobsResponse) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_blobs_blobs_proto_rawDescGZIP(), []int{3}
}

func (x *ListBlobsResponse) GetBlobInfos() []*blobs.BlobInfo {
	if x != nil {
		return x.BlobInfos
	}
	return nil
}

type DeleteBlobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlobName string `protobuf:"bytes,1,opt,name=blob_name,json=blobName,proto3" json:"blob_name,omitempty"`
	BlobType string `protobuf:"bytes,2,opt,name=blob_type,json=blobType,proto3" json:"blob_type,omitempty"`
}

func (x *DeleteBlobRequest) Reset() {
	*x = DeleteBlobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBlobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBlobRequest) ProtoMessage() {}

func (x *DeleteBlobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBlobRequest.ProtoReflect.Descriptor instead.
func (*DeleteBlobRequest) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_blobs_blobs_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteBlobRequest) GetBlobName() string {
	if x != nil {
		return x.BlobName
	}
	return ""
}

func (x *DeleteBlobRequest) GetBlobType() string {
	if x != nil {
		return x.BlobType
	}
	return ""
}

type DeleteBlobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteBlobResponse) Reset() {
	*x = DeleteBlobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBlobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBlobResponse) ProtoMessage() {}

func (x *DeleteBlobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBlobResponse.ProtoReflect.Descriptor instead.
func (*DeleteBlobResponse) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_blobs_blobs_proto_rawDescGZIP(), []int{5}
}

type GetBlobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlobName string `protobuf:"bytes,1,opt,name=blob_name,json=blobName,proto3" json:"blob_name,omitempty"`
	BlobType string `protobuf:"bytes,2,opt,name=blob_type,json=blobType,proto3" json:"blob_type,omitempty"`
}

func (x *GetBlobRequest) Reset() {
	*x = GetBlobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlobRequest) ProtoMessage() {}

func (x *GetBlobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlobRequest.ProtoReflect.Descriptor instead.
func (*GetBlobRequest) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_blobs_blobs_proto_rawDescGZIP(), []int{6}
}

func (x *GetBlobRequest) GetBlobName() string {
	if x != nil {
		return x.BlobName
	}
	return ""
}

func (x *GetBlobRequest) GetBlobType() string {
	if x != nil {
		return x.BlobType
	}
	return ""
}

type GetBlobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetBlobResponse) Reset() {
	*x = GetBlobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlobResponse) ProtoMessage() {}

func (x *GetBlobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlobResponse.ProtoReflect.Descriptor instead.
func (*GetBlobResponse) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_blobs_blobs_proto_rawDescGZIP(), []int{7}
}

func (x *GetBlobResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type MeshTestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BagSize     int32                       `protobuf:"varint,1,opt,name=bag_size,json=bagSize,proto3" json:"bag_size,omitempty"`
	Iterations  int32                       `protobuf:"varint,2,opt,name=iterations,proto3" json:"iterations,omitempty"`
	ShowTerms   bool                        `protobuf:"varint,3,opt,name=show_terms,json=showTerms,proto3" json:"show_terms,omitempty"`
	BlobName    string                      `protobuf:"bytes,4,opt,name=blob_name,json=blobName,proto3" json:"blob_name,omitempty"`
	BlobType    string                      `protobuf:"bytes,5,opt,name=blob_type,json=blobType,proto3" json:"blob_type,omitempty"`
	LoadingMode MeshTestRequest_LoadingMode `protobuf:"varint,6,opt,name=loading_mode,json=loadingMode,proto3,enum=d4l.mex.blobs.MeshTestRequest_LoadingMode" json:"loading_mode,omitempty"`
	RunGc       bool                        `protobuf:"varint,7,opt,name=run_gc,json=runGc,proto3" json:"run_gc,omitempty"`
}

func (x *MeshTestRequest) Reset() {
	*x = MeshTestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeshTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeshTestRequest) ProtoMessage() {}

func (x *MeshTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeshTestRequest.ProtoReflect.Descriptor instead.
func (*MeshTestRequest) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_blobs_blobs_proto_rawDescGZIP(), []int{8}
}

func (x *MeshTestRequest) GetBagSize() int32 {
	if x != nil {
		return x.BagSize
	}
	return 0
}

func (x *MeshTestRequest) GetIterations() int32 {
	if x != nil {
		return x.Iterations
	}
	return 0
}

func (x *MeshTestRequest) GetShowTerms() bool {
	if x != nil {
		return x.ShowTerms
	}
	return false
}

func (x *MeshTestRequest) GetBlobName() string {
	if x != nil {
		return x.BlobName
	}
	return ""
}

func (x *MeshTestRequest) GetBlobType() string {
	if x != nil {
		return x.BlobType
	}
	return ""
}

func (x *MeshTestRequest) GetLoadingMode() MeshTestRequest_LoadingMode {
	if x != nil {
		return x.LoadingMode
	}
	return MeshTestRequest_LOADING_MODE_IN_MEMORY
}

func (x *MeshTestRequest) GetRunGc() bool {
	if x != nil {
		return x.RunGc
	}
	return false
}

type MeshTestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DistinctCount int32             `protobuf:"varint,1,opt,name=distinct_count,json=distinctCount,proto3" json:"distinct_count,omitempty"`
	Info          map[string]string `protobuf:"bytes,2,rep,name=info,proto3" json:"info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MeshTestResponse) Reset() {
	*x = MeshTestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeshTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeshTestResponse) ProtoMessage() {}

func (x *MeshTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeshTestResponse.ProtoReflect.Descriptor instead.
func (*MeshTestResponse) Descriptor() ([]byte, []int) {
	return file_services_metadata_endpoints_blobs_blobs_proto_rawDescGZIP(), []int{9}
}

func (x *MeshTestResponse) GetDistinctCount() int32 {
	if x != nil {
		return x.DistinctCount
	}
	return 0
}

func (x *MeshTestResponse) GetInfo() map[string]string {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_services_metadata_endpoints_blobs_blobs_proto protoreflect.FileDescriptor

var file_services_metadata_endpoints_blobs_blobs_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2f, 0x62, 0x6c,
	0x6f, 0x62, 0x73, 0x2f, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0d, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x1a, 0x12,
	0x64, 0x34, 0x6c, 0x2f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x18, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x62, 0x6c, 0x6f, 0x62, 0x73,
	0x2f, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32,
	0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x79, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x6c, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61,
	0x70, 0x70, 0x65, 0x6e, 0x64, 0x22, 0x39, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x6c, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x74, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x62, 0x79, 0x74, 0x65, 0x73, 0x57, 0x72, 0x69, 0x74, 0x74, 0x65, 0x6e,
	0x22, 0x12, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x4b, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x62,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x62, 0x6c, 0x6f,
	0x62, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x2e, 0x42, 0x6c,
	0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x22, 0x4d, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x62, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x62, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x62,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6c, 0x6f,
	0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x25, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd2, 0x02, 0x0a, 0x0f, 0x4d, 0x65,
	0x73, 0x68, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x61, 0x67, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x62, 0x61, 0x67, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x74,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x77,
	0x5f, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x68,
	0x6f, 0x77, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x62, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x62,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x62, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x4d, 0x0a, 0x0c, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65,
	0x78, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x68, 0x54, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d,
	0x6f, 0x64, 0x65, 0x52, 0x0b, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x15, 0x0a, 0x06, 0x72, 0x75, 0x6e, 0x5f, 0x67, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x72, 0x75, 0x6e, 0x47, 0x63, 0x22, 0x45, 0x0a, 0x0b, 0x4c, 0x6f, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x4c, 0x4f, 0x41, 0x44, 0x49, 0x4e,
	0x47, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x5f, 0x4d, 0x45, 0x4d, 0x4f, 0x52, 0x59,
	0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x4c, 0x4f, 0x41, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4d, 0x4f,
	0x44, 0x45, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x01, 0x22, 0xb1,
	0x01, 0x0a, 0x10, 0x4d, 0x65, 0x73, 0x68, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x63, 0x74, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d,
	0x65, 0x78, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x68, 0x54, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x1a, 0x37, 0x0a, 0x09, 0x49, 0x6e, 0x66,
	0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x32, 0x9c, 0x09, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x62, 0x73, 0x12, 0x81, 0x05, 0x0a,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x20, 0x2e, 0x64, 0x34,
	0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xad, 0x04, 0x92, 0x41, 0xfa, 0x03, 0x12, 0x24, 0x57, 0x72, 0x69, 0x74, 0x65, 0x20, 0x64,
	0x61, 0x74, 0x61, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x20, 0x6f, 0x72, 0x20, 0x6e, 0x65, 0x77, 0x20, 0x62, 0x6c, 0x6f, 0x62, 0x2e, 0x1a, 0xea, 0x02,
	0x49, 0x66, 0x20, 0x6e, 0x6f, 0x20, 0x62, 0x6c, 0x6f, 0x62, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x20, 0x6e, 0x61,
	0x6d, 0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x65, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x2c, 0x20, 0x69, 0x74, 0x20, 0x69, 0x73, 0x20, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x69,
	0x73, 0x20, 0x77, 0x72, 0x69, 0x74, 0x74, 0x65, 0x6e, 0x2e, 0x20, 0x49, 0x6e, 0x20, 0x74, 0x68,
	0x61, 0x74, 0x20, 0x63, 0x61, 0x73, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x61, 0x70, 0x70, 0x65,
	0x6e, 0x64, 0x20, 0x66, 0x6c, 0x61, 0x67, 0x20, 0x68, 0x61, 0x73, 0x20, 0x6e, 0x6f, 0x20, 0x6d,
	0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x20, 0x49, 0x66, 0x20, 0x61, 0x20, 0x62, 0x6c, 0x6f,
	0x62, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x74, 0x79,
	0x70, 0x65, 0x20, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x20, 0x65, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x69, 0x73, 0x20, 0x6f,
	0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x27, 0x73, 0x20, 0x64, 0x61,
	0x74, 0x61, 0x20, 0x28, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x61, 0x70, 0x70, 0x65, 0x6e,
	0x64, 0x20, 0x66, 0x6c, 0x61, 0x67, 0x20, 0x69, 0x73, 0x20, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29,
	0x20, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x27,
	0x73, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x69, 0x73, 0x20, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x20, 0x62, 0x6c, 0x6f, 0x62, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x28, 0x69, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x20, 0x66, 0x6c, 0x61, 0x67,
	0x20, 0x69, 0x73, 0x20, 0x74, 0x72, 0x75, 0x65, 0x29, 0x2e, 0x4a, 0x65, 0x0a, 0x03, 0x32, 0x30,
	0x31, 0x12, 0x5e, 0x0a, 0x31, 0x49, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x20, 0x63, 0x61, 0x73, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x20, 0x69, 0x73, 0x20, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x20,
	0x61, 0x20, 0x32, 0x30, 0x31, 0x2e, 0x12, 0x29, 0x0a, 0x27, 0x1a, 0x25, 0x23, 0x2f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x98, 0xf1, 0x04, 0x02, 0xaa, 0xf1, 0x04, 0x0f, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x62, 0x73,
	0x12, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x3a, 0x01,
	0x2a, 0x22, 0x0d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x62, 0x6c, 0x6f, 0x62, 0x73,
	0x12, 0x7a, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x62, 0x73, 0x12, 0x1f, 0x2e,
	0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x6c, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2a, 0x98, 0xf1, 0x04, 0x02, 0xaa, 0xf1, 0x04, 0x0d, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x62,
	0x73, 0x12, 0x04, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x12, 0x80, 0x01, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x1d, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d,
	0x65, 0x78, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x62,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65,
	0x78, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x62, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x98, 0xf1, 0x04, 0x02, 0xaa, 0xf1, 0x04,
	0x0d, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x12, 0x04, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x62, 0x6c,
	0x6f, 0x62, 0x73, 0x2f, 0x7b, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12,
	0x8b, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x20,
	0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x38, 0x98, 0xf1, 0x04, 0x02, 0xaa, 0xf1, 0x04, 0x0f, 0x0a, 0x05, 0x62,
	0x6c, 0x6f, 0x62, 0x73, 0x12, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1b, 0x2a, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x62, 0x6c, 0x6f, 0x62,
	0x73, 0x2f, 0x7b, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0x81, 0x01,
	0x0a, 0x08, 0x4d, 0x65, 0x73, 0x68, 0x54, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x64, 0x34, 0x6c,
	0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x68, 0x54,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64, 0x34, 0x6c,
	0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x68, 0x54,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x98, 0xf1, 0x04,
	0x02, 0xaa, 0xf1, 0x04, 0x0f, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x12, 0x06, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x2f, 0x6d, 0x65, 0x73,
	0x68, 0x42, 0x5f, 0x5a, 0x5d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x67, 0x65, 0x73, 0x75, 0x6e, 0x64, 0x68, 0x65, 0x69, 0x74, 0x73, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x72, 0x6b, 0x69, 0x2d, 0x6d, 0x65, 0x78, 0x2d, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x2f, 0x6d, 0x65, 0x78, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x2f, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0x42, 0x6c, 0x6f,
	0x62, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_metadata_endpoints_blobs_blobs_proto_rawDescOnce sync.Once
	file_services_metadata_endpoints_blobs_blobs_proto_rawDescData = file_services_metadata_endpoints_blobs_blobs_proto_rawDesc
)

func file_services_metadata_endpoints_blobs_blobs_proto_rawDescGZIP() []byte {
	file_services_metadata_endpoints_blobs_blobs_proto_rawDescOnce.Do(func() {
		file_services_metadata_endpoints_blobs_blobs_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_metadata_endpoints_blobs_blobs_proto_rawDescData)
	})
	return file_services_metadata_endpoints_blobs_blobs_proto_rawDescData
}

var file_services_metadata_endpoints_blobs_blobs_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_services_metadata_endpoints_blobs_blobs_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_services_metadata_endpoints_blobs_blobs_proto_goTypes = []interface{}{
	(MeshTestRequest_LoadingMode)(0), // 0: d4l.mex.blobs.MeshTestRequest.LoadingMode
	(*CreateBlobRequest)(nil),        // 1: d4l.mex.blobs.CreateBlobRequest
	(*CreateBlobResponse)(nil),       // 2: d4l.mex.blobs.CreateBlobResponse
	(*ListBlobsRequest)(nil),         // 3: d4l.mex.blobs.ListBlobsRequest
	(*ListBlobsResponse)(nil),        // 4: d4l.mex.blobs.ListBlobsResponse
	(*DeleteBlobRequest)(nil),        // 5: d4l.mex.blobs.DeleteBlobRequest
	(*DeleteBlobResponse)(nil),       // 6: d4l.mex.blobs.DeleteBlobResponse
	(*GetBlobRequest)(nil),           // 7: d4l.mex.blobs.GetBlobRequest
	(*GetBlobResponse)(nil),          // 8: d4l.mex.blobs.GetBlobResponse
	(*MeshTestRequest)(nil),          // 9: d4l.mex.blobs.MeshTestRequest
	(*MeshTestResponse)(nil),         // 10: d4l.mex.blobs.MeshTestResponse
	nil,                              // 11: d4l.mex.blobs.MeshTestResponse.InfoEntry
	(*blobs.BlobInfo)(nil),           // 12: d4l.mex.blobs.BlobInfo
}
var file_services_metadata_endpoints_blobs_blobs_proto_depIdxs = []int32{
	12, // 0: d4l.mex.blobs.ListBlobsResponse.blob_infos:type_name -> d4l.mex.blobs.BlobInfo
	0,  // 1: d4l.mex.blobs.MeshTestRequest.loading_mode:type_name -> d4l.mex.blobs.MeshTestRequest.LoadingMode
	11, // 2: d4l.mex.blobs.MeshTestResponse.info:type_name -> d4l.mex.blobs.MeshTestResponse.InfoEntry
	1,  // 3: d4l.mex.blobs.Blobs.CreateBlob:input_type -> d4l.mex.blobs.CreateBlobRequest
	3,  // 4: d4l.mex.blobs.Blobs.ListBlobs:input_type -> d4l.mex.blobs.ListBlobsRequest
	7,  // 5: d4l.mex.blobs.Blobs.GetBlob:input_type -> d4l.mex.blobs.GetBlobRequest
	5,  // 6: d4l.mex.blobs.Blobs.DeleteBlob:input_type -> d4l.mex.blobs.DeleteBlobRequest
	9,  // 7: d4l.mex.blobs.Blobs.MeshTest:input_type -> d4l.mex.blobs.MeshTestRequest
	2,  // 8: d4l.mex.blobs.Blobs.CreateBlob:output_type -> d4l.mex.blobs.CreateBlobResponse
	4,  // 9: d4l.mex.blobs.Blobs.ListBlobs:output_type -> d4l.mex.blobs.ListBlobsResponse
	8,  // 10: d4l.mex.blobs.Blobs.GetBlob:output_type -> d4l.mex.blobs.GetBlobResponse
	6,  // 11: d4l.mex.blobs.Blobs.DeleteBlob:output_type -> d4l.mex.blobs.DeleteBlobResponse
	10, // 12: d4l.mex.blobs.Blobs.MeshTest:output_type -> d4l.mex.blobs.MeshTestResponse
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_services_metadata_endpoints_blobs_blobs_proto_init() }
func file_services_metadata_endpoints_blobs_blobs_proto_init() {
	if File_services_metadata_endpoints_blobs_blobs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBlobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBlobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBlobsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBlobsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBlobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBlobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeshTestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_metadata_endpoints_blobs_blobs_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeshTestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_metadata_endpoints_blobs_blobs_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_metadata_endpoints_blobs_blobs_proto_goTypes,
		DependencyIndexes: file_services_metadata_endpoints_blobs_blobs_proto_depIdxs,
		EnumInfos:         file_services_metadata_endpoints_blobs_blobs_proto_enumTypes,
		MessageInfos:      file_services_metadata_endpoints_blobs_blobs_proto_msgTypes,
	}.Build()
	File_services_metadata_endpoints_blobs_blobs_proto = out.File
	file_services_metadata_endpoints_blobs_blobs_proto_rawDesc = nil
	file_services_metadata_endpoints_blobs_blobs_proto_goTypes = nil
	file_services_metadata_endpoints_blobs_blobs_proto_depIdxs = nil
}
