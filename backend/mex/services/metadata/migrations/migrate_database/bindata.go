// Code generated for package migrate_database by go-bindata DO NOT EDIT. (@generated)
// sources:
// mex/services/metadata/migrations/migrate_database/01_initial_schema.sql
// mex/services/metadata/migrations/migrate_database/02_views_functions.sql
// mex/services/metadata/migrations/migrate_database/03_tree_functions.sql
// mex/services/metadata/migrations/migrate_database/17_fingerprint.sql
// mex/services/metadata/migrations/migrate_database/18_remove_entities.sql
// mex/services/metadata/migrations/migrate_database/19_remove_search_configs.sql
// mex/services/metadata/migrations/migrate_database/20_remove_fields.sql
// mex/services/metadata/migrations/migrate_database/21_blobstore.sql
// mex/services/metadata/migrations/migrate_database/init.sql
package migrate_database

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __01_initial_schemaSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\xc1\x72\xa3\x38\x10\xbd\xf3\x15\x2a\x2a\x87\xb8\xca\x7b\xd9\xab\x4f\x8c\xad\xb8\xa8\x75\xe4\x2c\xc6\x55\x99\x93\x4a\x86\x36\xa3\x0c\x08\xaf\x10\x19\x67\xbf\x7e\x0b\x84\xb1\x84\x31\x90\x9d\xf8\x94\x8a\x5b\xdd\x4f\xef\xbd\xee\x96\x97\x01\xf6\x42\x8c\xf0\x6b\x88\xc9\xce\xdf\x12\xe4\x3f\x21\xb2\x0d\x11\x7e\xf5\x77\xe1\x0e\xb9\x65\xc9\xe3\x3f\xf2\xa2\x38\xb9\x0b\xc7\x69\x82\x43\xef\xdb\x06\x77\x03\x41\x28\xae\x3e\xa8\xfa\x38\x41\xe1\xa2\x47\x07\x21\x84\xdc\x48\x02\x53\x10\x53\xa6\x5c\xa4\x78\x06\x85\x62\xd9\x49\xfd\x5b\x1f\x24\xfb\xcd\x66\xae\xc3\x04\xcb\xc0\x45\xfa\xa3\xe0\xac\x9a\x3f\xbb\x61\x51\x2e\x8e\x3c\xd1\x81\x6f\x45\x2e\x0e\x73\xa7\xfe\xe2\x25\xf0\x9f\xbd\xe0\x3b\xfa\x0b\x7f\x47\x8f\x3a\xd9\xcc\x99\x8d\xe0\xe5\x0a\xb2\x7e\xa0\x43\x48\x79\x7c\xc1\x39\x0c\x35\xff\x25\x40\x4e\xb8\x52\xc3\x9a\x26\x60\x20\xee\x50\x16\x5c\x40\x51\xd0\x0a\x40\x15\x77\xfb\x7f\x7a\xe4\x90\xc6\x46\xaa\x5e\x76\x78\xec\xce\xf4\xd9\xe5\x96\xec\xc2\xc0\xf3\x49\x88\xdc\xe3\x4f\x6a\xea\x47\x1b\x72\x9e\xb6\x01\xf6\xd7\xa4\x39\x6a\x62\x9d\xa1\x00\x3f\xe1\x00\x93\x25\xee\x6a\x6f\x29\xb0\x0a\xb6\x2f\xc8\x27\x2b\xfc\x5a\xf1\xdf\x70\x5f\x67\xa7\x26\x74\x1e\x9f\x17\x17\xb5\xda\x68\x43\xad\xde\x13\x68\x4b\x5a\x19\xf7\x3b\x9f\xac\xd1\x41\x49\x00\xf4\x68\xb1\x55\xa1\x18\x34\x82\x84\x94\x29\x9e\x8b\x3b\x66\xd0\x0a\x4e\x74\xc4\x98\xdc\x31\xa4\xa0\xc0\x3c\x71\xc8\xf3\x14\x98\x18\xf5\xd0\x58\xe6\x22\x2f\x65\x04\xb5\x70\x54\x43\x1a\x08\xae\x84\x72\xa7\x62\x56\x4c\x26\xa0\x26\x66\xe6\xe2\x98\x9b\xa1\x68\xcc\x89\x7d\x56\xd4\x6a\xa7\x70\x54\xd4\x10\xa7\xfa\xd8\x86\xec\xdc\xd9\xf6\xa4\x36\x86\x2e\x53\x39\x65\x85\x37\x38\xc4\x68\xe9\xed\x96\xde\x0a\xf7\xb6\x80\xae\x2b\x79\xf2\xa3\x5b\xd8\xae\xdb\x61\xe4\x8b\xea\x66\xa0\x58\xcc\x14\x33\x4b\xdb\x75\x2d\x72\x67\x08\x7d\xa2\xee\xe8\x38\xd4\xc3\x23\x86\xe3\xff\x6c\x03\x73\x84\x8f\x5a\xea\x27\x17\xf1\xe4\xe0\x98\x17\xa7\x94\x7d\xd0\x6b\xa3\x19\xf3\x8f\x8b\x18\xce\x15\xec\x36\x5d\xbd\x18\x6e\x32\x0d\xef\x89\xd1\x45\x41\xdf\x59\x5a\xde\xd9\x6b\x63\xcc\xdc\x0c\x88\x81\xbb\x4a\x78\xe7\x05\xcf\x45\x7b\xa2\x00\xc9\x59\xda\xcf\x4b\x77\x96\x0c\x8c\x92\x94\x89\xa4\x64\xc9\x55\x21\x83\x42\x73\x6d\x8c\xe1\xd3\xb1\x35\x19\xee\x58\xec\x29\x65\x91\x65\x09\x2e\x14\x24\x20\xfb\x62\xad\x89\x31\x91\x23\x1a\xe5\x59\x06\x42\x0d\x2f\xbb\xf9\x95\xd3\xc1\x69\x73\x11\xb8\xfe\x74\xda\xce\xe8\xb8\xdf\x6d\xf5\x6b\x9b\xb5\x15\xed\x62\x86\x1a\xf6\x5c\x31\x1a\x74\xda\x86\x6d\x0a\x18\xcf\x82\x49\x6b\xb6\xff\x58\xbb\x6b\x5b\xd8\xf6\xc6\x35\x61\x4f\x01\xd5\x70\xfa\x29\x44\xc6\x99\x31\x38\xad\x64\xd3\x9a\x9b\xc3\x2f\x1a\xe5\xa5\x50\x9f\x7e\xb9\x9a\xc6\x1d\xf0\x6c\x59\x80\x9c\x10\x76\xc1\x70\xbf\x5b\xfa\x4c\xde\x40\x98\xb7\x55\x06\x8d\x7e\x7b\xe3\x7b\x6e\xff\xc2\xed\x52\x00\x93\xd1\x0f\xaa\x1f\xf0\x34\x3f\xbc\x41\x64\x70\xdd\x21\xa6\x7f\xb3\xdc\xf9\x36\x3f\xbc\xd1\xe6\x39\x73\x1b\x31\xfc\xea\xd8\x13\xff\xef\x3d\xbe\x6c\x82\xb9\x91\x6b\xfc\xd7\x83\x7d\xa1\xda\xfd\xd7\xfb\xe8\xfb\x59\x2f\xa0\xbb\xb3\xb4\x9d\xbb\x93\xd0\x5f\x33\xcf\xad\x04\x77\x14\xef\xa5\xbd\x45\x6b\xeb\x7e\x4d\x6d\x2b\xdf\x2f\xdd\x14\x27\x6c\x03\x14\xe0\x97\x8d\xb7\xc4\xe8\x69\x4f\x96\x61\xf5\xeb\x52\xc0\x59\xd1\x8c\x27\xb2\x7e\xe1\xd0\x77\x90\xd5\x68\x7e\xac\x4a\x86\xfb\x80\xec\x2e\xb6\x77\x36\x1e\x59\xef\xbd\x35\x46\xa7\xf4\x94\x14\xff\xa4\xc8\x7f\x7e\xde\x6b\x29\xbc\x9d\xf3\xf0\xe0\x7c\xc3\x6b\x9f\xd4\x97\x96\xa0\x4a\x29\xd0\x9f\x0b\x07\x93\xd5\xc2\x79\x78\x58\x38\xff\x05\x00\x00\xff\xff\xa5\xde\x5f\xd5\xd6\x0e\x00\x00")

func _01_initial_schemaSqlBytes() ([]byte, error) {
	return bindataRead(
		__01_initial_schemaSql,
		"01_initial_schema.sql",
	)
}

func _01_initial_schemaSql() (*asset, error) {
	bytes, err := _01_initial_schemaSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "01_initial_schema.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __02_views_functionsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4b\x6f\xe3\x38\x13\x3c\x8b\xbf\xa2\x21\x04\x88\x35\x70\x04\xcc\xe5\xfb\x0e\xd9\x1c\x3c\x59\x4d\xd6\x0b\x47\x5e\xd8\xce\xce\x51\x90\xa5\x96\xc3\x44\x26\x3d\x24\x15\x3f\x7e\xfd\x82\x0f\xc7\x94\x22\x1b\x59\x2c\xe6\x64\xb1\x5d\x6c\x56\x75\x35\x1f\xf7\xb3\x64\xb4\x48\x60\x3a\x83\x59\xf2\xd7\x64\x74\x9f\xc0\xdf\xe3\xe4\x07\x84\x12\x73\x51\x3c\x67\x05\x67\x15\x5d\x85\x30\x9a\xc3\x80\x00\x00\xcc\x93\x49\x72\xbf\x00\x59\xf0\x38\xa4\x65\x38\xb4\x5f\x2c\x5f\xe3\xf1\x9b\x2f\x5f\x32\xb5\xdf\xd8\x71\x15\x87\x15\xc5\xba\xcc\x0c\xc2\x64\xf8\x3e\x9b\x3e\x76\xf2\x67\x7c\xf9\x82\x85\x92\xa1\xce\x60\x40\xe3\x34\x4d\x66\xf0\xe7\x74\x9c\x76\xa1\x26\x9d\x41\x56\x06\x39\x4d\xdf\xc9\xc0\x9d\x5d\xd1\x66\xcb\x68\x19\x92\xe8\x96\x90\x73\x12\x8b\x46\x08\x64\x2a\xa3\x0a\xd7\xd9\x5b\x5e\x37\x28\x9d\xd0\xc0\xa9\xdc\x39\x8d\xfa\x57\x83\x8e\x03\x4f\x92\x37\x36\x29\x6c\x60\x53\xe7\x85\xfb\x14\xf8\x46\x25\xe5\xcc\x8e\xea\x9c\xad\x9a\x7c\xd5\x2a\x45\x6b\xfd\x1d\x09\x7e\xfc\x91\xcc\x12\x0d\x2e\xb1\x46\x85\x46\x57\x95\xd7\x12\x2f\xaa\xd1\x59\x64\xb6\xa5\xea\x39\x5b\x36\x92\x32\x94\x52\xf3\xfd\xe0\x1c\xb5\xa5\xca\x25\x78\x9a\x68\x1c\x16\x02\x73\x85\x65\x96\x2b\x3b\xe6\x5b\x86\xc2\x7e\x22\x53\x54\xed\x8f\x7a\x0b\x9e\xd7\x28\x0b\x1c\xd0\x38\xf4\x57\x1a\xc2\xf5\x75\x64\xf2\xb6\xa3\x6d\x58\xd6\xdf\x0e\x86\x7d\x08\xd4\x84\x6c\x01\x3a\xe9\x61\x3c\x87\x74\xba\x80\xf4\x69\x32\xb9\x58\x88\x3a\x57\x28\xad\xab\x17\xeb\x21\xb1\xc6\x42\x7d\xf0\xd6\xab\x03\x98\xc0\xb1\x10\xbb\x6e\x21\x76\x5d\xfd\xbb\xcb\x4a\x2b\xc1\xd7\x6e\x6d\x6f\xfd\x2f\x43\x10\x7c\x9b\xb1\x66\xbd\x44\x31\x88\x80\xbf\xa1\x80\xc1\x26\x17\x8a\x2a\xca\x19\x2c\xf7\xdd\x82\xb6\x68\x00\x17\x25\x0a\x83\xf2\x99\x97\x28\x0b\x6b\x06\x13\xe1\xfb\x92\x86\xc1\xb9\x4e\x31\xa8\x08\x76\xe6\x77\xfb\x8c\x02\xb5\x20\x26\x74\xfb\x7d\xfd\x44\xeb\xb1\xa6\xae\xf3\x65\x8d\xbf\xb8\xfd\x3e\x74\xdd\xbf\xeb\xaf\x4f\x6e\xa1\x9a\xb2\xd7\xe3\x69\xe0\x8c\x3a\xc4\x92\x37\xa2\xc0\xcc\xf1\x1e\x9e\x22\x27\xf2\x5e\xd0\x28\xf0\xc6\x9e\x0c\x2f\xda\x4f\xbd\x1f\xe0\x45\x35\xbf\x0e\x5e\xe5\x62\x85\xaa\x8b\x77\x51\xc7\x99\xb8\x1e\x0c\x9c\xa6\x7d\xfc\x89\xf6\xeb\x23\x12\x7e\x5c\x4d\x77\x66\x3f\x3b\xaf\x49\x3f\x14\xec\xd4\xa9\x4c\x90\xe0\x48\x2f\x78\xdf\x9c\x5f\x86\x40\xb7\x4b\x9a\xd9\xf5\x62\xa7\x43\xe3\x3b\xca\x82\xd3\x64\x6f\x77\x99\xb9\x76\x51\xe9\x4f\xee\x5a\xd9\xc2\x79\xec\x4e\x50\xdf\xe3\x16\xda\xf8\xec\x01\x9d\xef\x2d\x8c\xe7\xbd\x87\x6c\x75\x44\x0b\xdf\xdf\x15\xde\xd4\x73\x6d\x73\x2e\x4b\xff\xd4\x21\x14\xf4\x2d\x6e\x2f\x70\xce\x43\x1f\x6b\x2e\x2b\x03\xee\x69\x03\x67\x80\x71\xa3\xe7\x8a\xd5\x69\x1c\x84\x32\x5d\xb9\x17\x4e\x19\xf4\x9f\x49\x2d\x39\x6e\x12\x00\x67\xfd\xb6\xde\x19\x86\xa7\x7e\xd0\xd8\x9b\x9b\x1b\x98\x53\x56\x20\xa8\x67\x04\xa5\xcf\x27\xb0\x1a\x4a\xac\x24\x94\x1c\x25\x30\xae\xa0\xe0\x4c\xe5\x94\x81\x56\x8d\xa5\x85\xc8\xa1\x99\xb4\xc4\x9a\x6f\xf5\x1f\x08\x9c\xd5\x7b\xd8\x72\xf1\x2a\x81\x56\xc0\x78\x1b\x0e\xb9\x40\xe0\x15\xe8\xc7\x0f\x5c\xeb\xbf\xae\x1d\x0b\x7b\x9a\x76\x6a\x4d\x19\x0c\x5c\x97\x56\xa5\x7b\x42\xd9\xaa\x79\x04\xab\xd2\x4d\xae\xca\xf8\x95\x32\x2d\xd2\x66\x8e\x48\x10\xe8\xc3\x3a\x08\x6a\xac\x14\xf0\x46\x7d\xa6\x94\xd6\x2e\xc3\xea\x58\x45\xb7\xb1\x7c\xe8\x1d\xec\x7a\x4e\x13\x12\x44\xb0\x27\x11\x1c\x88\x65\x74\x88\x99\xb8\x70\x35\x7c\x7f\x4a\xef\x17\xe3\x69\x0a\x61\x95\x5d\xbc\x92\xb3\x25\x6f\x58\x89\x65\x38\x78\xe6\x82\x1e\x38\x03\x45\xd7\x28\x55\xbe\xde\xa8\xc3\xe0\x7f\x51\x44\x04\xaa\x46\x30\xe9\xec\x1b\x1c\xfd\x56\xb8\x53\x43\xf0\x36\x6b\x7b\xde\x10\xec\xce\xb4\x30\x7f\x07\xda\x88\xaf\x58\x47\x22\x72\x7c\x9c\xc1\xa6\xde\xac\xe4\xcf\x1a\x72\x49\xae\xaa\x86\x15\x57\x64\x89\x2b\xca\xcc\x7d\x62\xc9\xc0\xcf\x06\xc5\xfe\x97\xbc\x23\x2e\xbc\x15\x0e\x9f\x39\xae\x0f\xdd\x0b\xf2\x10\x9f\x79\x31\x1c\xe2\xff\xfa\x66\x80\xc3\x3b\xee\xd8\x14\x9e\x1f\xbf\xdd\x81\xb3\xf4\xe2\xdb\xe2\x96\x20\x2b\x6f\x5d\xa5\x2f\xf7\x12\xc3\x9d\xca\xd6\x74\x25\x72\xad\x36\x7b\x43\xa1\x9f\xd6\x83\x08\x66\xc9\xe2\x69\x96\xce\x81\x32\x85\x2b\x14\x64\x32\x4a\x1f\x9e\x46\x0f\xc9\xbb\x95\xe3\xc7\xc7\xa7\xc5\xe8\xdb\x24\x81\xd1\x9c\x5c\x5d\x91\x6f\xc9\xc3\x38\xf5\x0d\xfd\xfa\xff\x5b\x92\xa4\xbf\xdf\x92\x2b\xcd\xe1\x9f\x00\x00\x00\xff\xff\x5d\xb1\xad\xe1\x17\x0d\x00\x00")

func _02_views_functionsSqlBytes() ([]byte, error) {
	return bindataRead(
		__02_views_functionsSql,
		"02_views_functions.sql",
	)
}

func _02_views_functionsSql() (*asset, error) {
	bytes, err := _02_views_functionsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "02_views_functions.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __03_tree_functionsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x55\x4d\x73\xea\x46\x10\xbc\xef\xaf\x98\x03\x55\x81\x44\xa6\xf2\x4e\x39\x50\x3e\xf0\xb0\x9e\x43\x0a\x43\x8a\x8f\xe4\xa8\x5a\xa4\x41\xda\x64\xd9\xd5\x9b\x1d\x19\xfb\xdf\xa7\x56\x92\x85\x24\x70\x42\x9c\xa4\xa2\x9b\x56\xcc\x4c\x4f\x77\x6f\x73\x77\x07\xdb\x0c\xe1\x60\xb5\xb6\x27\x65\x52\x38\x14\x26\x66\x65\x8d\x03\x49\x08\x85\xc3\x04\xd8\x42\x82\xa4\x9e\x11\x14\xe3\xd1\xc1\xfe\x15\x38\x43\x45\xb0\x2f\x9c\x32\xe8\x1c\xcc\x1f\xe0\x94\xa9\x38\x2b\x6b\xb4\x32\xbf\x57\x55\x07\x4b\x47\x90\xc0\x84\x08\xc3\x83\x25\xc0\x17\x79\xcc\x35\x06\x60\x29\x05\xc7\x54\xc4\x5c\x10\xba\xd1\x58\xdc\xdd\xc1\xdc\x00\x67\xca\x41\x6c\x0d\xe3\x0b\x07\x70\x42\x20\x3c\x20\xf9\x56\xd5\x64\xe9\xc0\xd8\x04\x1d\x48\x93\x78\x0c\xe5\xf1\x37\xae\x03\x44\xb9\xaa\x8a\x2a\x0c\x75\x09\xcc\x1f\xc6\x42\x94\xdb\x2a\xd7\x2c\x09\x84\x5c\x90\xdf\x55\x6b\x30\xd6\xdc\x91\xb5\x5c\x8d\x70\x01\x70\x26\x19\x94\x0b\xaa\x83\xfa\x3d\x93\xcf\x08\x92\x41\xa3\x74\x0c\xd6\x20\xd8\x82\x53\xeb\xa9\xc3\x24\xc5\xb1\x88\x09\x25\x23\x58\x02\xc2\x5c\xcb\x18\xcf\xd3\x0e\x91\xa7\x22\x4a\xd0\xc5\x68\x12\x69\xd8\x0d\xd1\xb0\xe2\xd7\xc8\xc8\x23\x42\xb5\xb5\xa7\x2f\x3a\x28\xd4\xc9\xf9\x74\x24\xde\x80\xb2\xdc\x6b\x84\xa1\x47\x14\xa9\xa4\x2e\xc9\x25\xa1\xe1\xa8\x7d\x38\x12\x5a\x9a\xb4\x90\x29\x42\xae\xf3\xd4\x7d\xd5\x20\x9d\x18\x78\x28\x03\xb1\xc7\x54\x19\x01\x00\xf5\xfe\xf0\xb5\x40\x7a\x2d\x0f\x1c\x6a\x8c\x19\x9c\x2d\x28\xc6\xe8\x8d\x57\xdf\xb5\x26\x32\x52\x49\x00\x2c\x29\x45\xee\x7f\xee\xc2\x28\xdb\x1d\xc8\x1e\x2b\xed\xa2\x93\xe2\x2c\xf2\xcb\x39\x50\x27\x5d\x7e\x3d\x65\x48\xe8\xdf\xc6\xf5\xbc\x36\x1b\xf7\xd0\x7e\xf3\x82\xb7\x7e\xd8\x27\xe9\xbe\x4f\xdb\x44\xa0\x49\xea\x7d\x27\x7f\x21\xfc\x59\xf4\x46\xf3\xda\x10\xde\x6a\x67\xd5\x8d\xfd\xfb\x5a\xfb\xde\x6e\x28\x29\x8d\xfe\x05\xa5\x3f\x2a\x6a\x4b\x58\xad\x4e\x7b\x35\x6e\x0b\xd7\x12\xb6\xf9\x71\x29\x9b\x96\x8c\x8e\xa3\x96\x7a\xed\xb2\xb2\x51\x53\x50\x29\x59\x35\xef\x8a\xd8\x5b\xbd\xa9\xf0\x0f\xbe\xc4\x98\x73\x1f\x62\x4b\xe6\xeb\xfe\xeb\xc2\x7c\xd7\x5d\x37\x38\xac\xaf\xcb\x87\x5c\x36\xe9\xd8\x6c\xe7\x7c\x6a\xc5\x05\x39\x1f\x98\x07\x94\x3e\xe1\x7c\x10\x31\xc9\x67\x24\x87\x65\x6e\x95\x91\xd8\x04\x60\x39\xf7\x28\x95\x61\xa9\x0c\x48\x48\x30\xe7\x0c\x62\x5b\x18\x46\xba\xc1\x65\xff\x59\x8a\x04\x35\x14\x65\xfe\x91\xf7\x7e\x9d\x6f\x7f\x84\x75\x38\xdb\xad\x37\xf3\x5f\xc2\x6a\xf9\xe9\x06\x86\x1d\x33\x6c\xc2\x45\x38\xdb\xc2\xf7\xfe\x4b\x39\x35\x00\xa6\x71\x13\x39\xa6\xd0\xfa\x9d\x90\x79\x7b\xbe\xac\x57\x4f\xdd\x7b\xd7\xe2\xe5\x82\x92\x11\x30\x75\xca\xfd\xb3\x5b\xce\x57\x4b\x98\x2e\x16\xd7\xa0\xf9\xc6\xe3\x8a\x90\xef\xe0\x53\x00\x9c\x9c\xe1\x71\x32\xbe\x11\xd9\x3b\xe9\x7f\x0d\x5f\xb7\xc9\x4f\xab\xf9\xb2\xc4\x70\x81\x7a\xb5\xbc\x9c\x0f\xf7\x15\xde\x3e\x9c\x91\xb8\xb6\xd5\x79\x0f\xff\xd6\xed\x14\xb4\x16\x17\x9d\x8d\xfc\x79\xff\x0a\xdc\x98\x89\x51\x2e\x39\xbb\xd1\xb7\x01\x38\x96\xd4\xff\x7f\xfb\x9f\xbc\xec\x83\xa6\x75\xc1\xcf\xbb\x34\x6c\xf5\xd9\x2b\xc7\x8e\xbc\x77\xbb\x86\xaf\xe3\x8e\x5b\xe4\x5f\x32\x5f\xfb\xad\x4c\xba\xcb\xcb\x7e\xcd\x34\x75\xe6\x35\x6d\xe1\xbe\x4b\xdf\x85\x7b\x0a\xa3\xac\xf9\x28\xb2\x4e\x5d\x89\xf2\x46\x98\x9d\x42\x65\x0c\x12\xfc\x66\x95\x39\x13\x0a\x94\x5f\x40\xf5\x7f\xdc\xf9\x15\xa3\xff\x89\xcb\xeb\x5d\xbe\xad\xc0\x35\xdd\x2f\x6c\x3b\x5b\x87\xd3\x6d\x08\xab\x35\xac\xc3\x9f\x17\xd3\x59\x08\x5f\x76\xcb\xd9\xd6\xc7\x81\xc1\x17\x8e\x8e\x2a\x25\xe9\x5d\x1c\xf9\x14\x57\xd6\x0c\x47\xb0\x0e\xb7\xbb\xf5\x72\xe3\x2d\x85\x29\x92\x58\x4c\x97\x8f\xbb\xe9\x63\xd8\xb8\x6a\xfe\xf4\xb4\xdb\x4e\x3f\x2f\x42\x98\x6e\xc4\x60\x20\x3e\x87\x8f\xf3\x65\xdb\x5b\x9f\x7e\x98\x88\x70\xf9\x30\x11\x83\xc1\x44\xfc\x11\x00\x00\xff\xff\xc4\x60\x25\xe0\x8c\x0b\x00\x00")

func _03_tree_functionsSqlBytes() ([]byte, error) {
	return bindataRead(
		__03_tree_functionsSql,
		"03_tree_functions.sql",
	)
}

func _03_tree_functionsSql() (*asset, error) {
	bytes, err := _03_tree_functionsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "03_tree_functions.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __17_fingerprintSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcf\xb1\x6a\xc3\x30\x10\xc6\xf1\xfd\x9e\xe2\xc3\x78\x48\xc6\x6e\x05\x4d\x8a\x7d\x31\x02\xe7\x14\x64\x09\xb2\x99\x94\x8a\x44\x90\x38\xa9\xac\x16\x3f\x7e\x69\x43\xdb\xa5\xfb\xef\xee\xcf\xa7\x7b\xcf\x0e\x5e\x6f\x7a\x46\x95\x4a\xbc\xce\x15\x74\xdb\xa2\xb1\x7d\xd8\x09\xaa\xf3\x71\x3e\x57\x28\x71\x29\x8a\xa8\x75\x76\x0f\x23\x2d\x1f\x60\xb6\xe0\x83\x19\xfc\x80\xef\xa3\xf1\xcb\x8d\xe9\x75\x51\xd4\x38\xd6\x9e\xff\x98\x58\xff\x3f\x85\x95\xdf\x64\x18\x8c\x74\x78\x29\x39\x46\xac\x1e\xd1\xb5\x22\xfa\x79\x66\x1d\x1c\xef\x7b\xdd\x30\xb6\x41\x1a\x6f\xac\x60\x8a\x4b\x19\xaf\xe9\x94\x8f\x25\xdd\xa6\xf1\x23\xe6\x39\xdd\xa6\xd5\x1a\x8e\x7d\x70\x32\x20\x4d\x25\x9e\x62\xa6\x5e\x4b\x17\x74\xc7\xb8\x5f\xee\xa7\xf9\xed\x02\xb3\xdb\x85\xc7\x62\x3d\x50\x5d\xd3\x86\x3b\x23\x04\x00\x39\x96\xf7\x3c\xe1\xe9\x59\x11\x4b\xab\xa8\xae\x15\x7d\x06\x00\x00\xff\xff\x1e\x38\xcd\x86\x22\x01\x00\x00")

func _17_fingerprintSqlBytes() ([]byte, error) {
	return bindataRead(
		__17_fingerprintSql,
		"17_fingerprint.sql",
	)
}

func _17_fingerprintSql() (*asset, error) {
	bytes, err := _17_fingerprintSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "17_fingerprint.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __18_remove_entitiesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcd\x31\x4f\xc3\x30\x10\xc5\xf1\xfd\x3e\xc5\x53\x94\x01\x46\x46\x94\xc9\x4d\x8f\x28\x52\xea\x54\x17\x67\xb6\x18\x8e\xc8\xa2\x75\x83\x73\x20\xfa\xed\x11\x94\xa1\xf3\xfb\x3d\xfd\xdd\x10\x58\x10\xdc\x6e\x60\x54\xc9\xf4\xbc\x55\xd8\xcb\x78\x44\x3b\xfa\x29\x88\xeb\x7d\x40\xf5\xf6\x1e\x35\x5b\xb2\x6b\xb4\xeb\xaa\x5b\xbc\xb9\x86\xe8\x4f\xfe\x9f\xef\xc5\xef\xd6\x0a\xbb\xc0\x18\x05\xc2\xc7\xc1\xb5\x8c\x97\xd9\xb7\xa1\x1f\x3d\xb2\x7e\x5b\x3c\xa7\xa5\xbc\x5a\xba\xe4\xf8\xa5\x65\x4b\x97\xfc\xf0\x08\xe1\x30\x8b\x9f\x90\xb2\xe9\xa2\x85\x06\xe7\xbb\xd9\x75\x8c\xf5\xb4\x2e\xdb\xc7\x09\xfd\xe1\x30\xdf\x7a\x6e\xa2\xba\xa6\x1d\x77\xbd\x27\x00\x28\x6a\x9f\x25\xe3\xe9\xb9\x21\xf6\xfb\x86\xea\xba\xa1\x9f\x00\x00\x00\xff\xff\xfc\xbc\xbe\xf8\xdd\x00\x00\x00")

func _18_remove_entitiesSqlBytes() ([]byte, error) {
	return bindataRead(
		__18_remove_entitiesSql,
		"18_remove_entities.sql",
	)
}

func _18_remove_entitiesSql() (*asset, error) {
	bytes, err := _18_remove_entitiesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "18_remove_entities.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __19_remove_search_configsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xcd\xb1\x4e\xc3\x30\x10\x80\xe1\xfd\x9e\xe2\x14\x65\x80\x0d\xb1\x7a\x72\xd3\x23\xb2\x94\x3a\x95\x6b\xc3\x68\x95\x70\x35\x46\xc1\x0e\xb6\x41\x3c\x3e\x02\x36\x06\xe6\xff\x93\xfe\xbd\x99\x8f\x78\xaf\xe8\x01\xbb\xca\xe7\xb2\x3c\xfb\x25\xa7\x4b\x0c\x9d\x00\xf8\x69\x56\xee\x26\xfa\x13\xfd\x25\xf2\xfa\x54\x3b\xf1\x0f\xc9\x8f\x2f\xbc\xb4\x6f\x03\x83\x21\x69\x09\x67\x83\x86\x8e\x93\x1c\x08\xef\x9c\x1e\xac\x9a\x35\x26\xfe\x6c\xfe\x35\x86\x72\x6e\x31\x27\xff\xc1\xa5\xc6\x9c\xae\xae\xd1\x90\x75\x46\x9f\x30\xa6\xc6\x81\x0b\x4c\x52\x8f\x4e\x8e\x84\xdb\xba\x85\xfa\xb6\xa2\x3a\x1c\xdc\xef\x58\x9e\xa0\xef\x61\x47\xa3\xd2\x80\x88\x58\xb8\xbd\x97\x84\xb7\x37\x02\x48\xef\x05\xf4\xbd\x80\xaf\x00\x00\x00\xff\xff\xd1\xec\xcb\x1c\xe7\x00\x00\x00")

func _19_remove_search_configsSqlBytes() ([]byte, error) {
	return bindataRead(
		__19_remove_search_configsSql,
		"19_remove_search_configs.sql",
	)
}

func _19_remove_search_configsSql() (*asset, error) {
	bytes, err := _19_remove_search_configsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "19_remove_search_configs.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __20_remove_fieldsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\xcf\x6f\xa3\x3a\x10\x3e\xe3\xbf\x62\x14\xe5\x00\x4f\x51\xa4\xbe\xc3\xbb\x44\x39\xd0\x94\x56\x91\x52\xd2\x47\xc9\x7b\x5b\xad\x56\x16\x81\x49\xea\x2d\x98\xac\x6d\xf2\xeb\xaf\x5f\x01\xa6\x98\x84\xec\xee\x09\x31\xfe\xc6\xf3\xcd\x7c\x33\x63\x77\x11\x7a\x01\x84\xee\xfd\xc2\x83\x01\x53\x98\xd1\x7d\x94\x16\x28\x07\xf0\x10\x2c\x5f\x60\xb6\xf4\x5f\xc3\xc0\x9d\xfb\x21\x0c\x36\x1f\x74\xc3\x30\x4d\x68\x82\x1b\xd9\xc0\x26\x84\x54\xc0\xff\xe6\xde\xff\xf5\x05\x92\x1e\x98\x7a\xa7\x29\xe3\x1f\xd5\xf1\x2c\xf0\xdc\xd0\x83\x65\x00\x81\xf7\xb2\x70\x67\x1e\x3c\xae\xfc\x59\x38\x5f\xfa\x3d\x78\xbb\xfc\x3c\x96\x51\xfc\x28\x43\x09\xa1\xf7\x25\xfc\xfa\xcd\x21\x81\x17\xae\x02\xff\xb5\x26\x6a\xcb\xbc\x10\x31\xd2\x8a\x2e\x4b\x2a\xd0\x08\xb4\x31\x16\x18\x29\x4c\x68\xa4\x40\xb1\x0c\xa5\x8a\xb2\x9d\x3a\xdb\xff\x38\x9f\x88\xfc\xc0\x51\x74\x9d\x90\x2b\xa6\x4e\x94\x47\x19\x76\x0f\xd6\x85\x64\x1c\xa5\xa4\x2c\xd1\xc9\xff\x12\xd3\x3d\x28\x73\xb9\xf6\x52\x91\xd8\xa2\xea\xf1\xd2\x07\x66\x56\x0e\x59\xb8\xfe\xd3\xca\x7d\xf2\x60\x97\xee\xb6\xf2\x47\x0a\xee\x2b\x19\x6e\x0a\x1e\x0f\xc9\xbd\xf7\x34\xf7\x09\x00\x40\x5d\x1d\xf8\x77\xe5\x05\x6f\x44\x62\x8a\xb1\x82\xf3\xb8\x5b\xa5\x51\x6b\x69\x4b\x64\x18\xab\xaa\x18\xff\x46\x49\x0c\x6b\x7f\x3d\xfa\x01\x86\xf5\xa2\x12\xe5\xc9\x75\x19\x0c\xab\xe6\x4c\x36\x22\xcf\xc0\x26\x96\xce\xe9\x34\xfe\x6b\x04\x22\x3f\x50\x5e\x64\x6b\x14\xb6\x03\xf9\x1e\x05\xd8\xbb\x48\x28\xa6\x58\xce\x61\x7d\x82\x53\x2f\x95\xd3\x78\x70\x1d\x71\x50\xd9\xfb\x39\x0e\x20\x17\x09\x8a\xce\x8d\x46\x6f\x25\x28\x63\x07\x22\x09\x5c\x10\xab\xa1\xd9\xf0\x3c\x96\x3c\xd9\x61\xcd\x68\x1d\x73\xdc\x68\x1a\xc9\x0b\x95\x89\xd5\x3a\x97\x4a\xea\x0b\x2a\xdf\x3a\xa8\x34\x9d\x2f\x25\xed\xe0\x0c\x76\x2d\xd4\xd4\xba\x83\xae\xa7\xa0\x05\x6a\xfd\x3b\x18\x73\x2c\x5a\x64\xa7\x33\x3a\xf8\x1b\xd3\xd2\xba\xde\x6a\x9f\x5b\xb7\xf4\xbb\x8e\x20\x66\xfb\x71\x37\xc0\x2d\x15\x4d\x6c\xb5\xb2\x2a\x70\x4f\x2b\x68\x01\x2a\x35\xe2\x42\x08\xe4\x5a\xa4\x7a\xd1\x95\xd7\x68\x08\xe3\x65\xe5\xbe\xe7\x8c\x83\xb1\xbf\x4c\xd6\x66\x3a\xda\x09\x20\xe7\xfd\xb2\x4e\x2b\x86\x6d\x3f\x94\xd8\xc3\x3b\x0a\xbc\xcc\x72\x0a\xae\xff\x06\xf6\xf0\xce\x21\x96\xe5\xc0\x91\x58\x56\x8a\x1b\x05\x79\xa1\xfe\x84\x4f\x9d\x73\x15\xa0\xa1\xa2\xbb\xd3\x84\x4e\xe1\xd8\x33\x9a\xc4\x72\xe0\x44\x1c\x38\x93\x9a\xd9\x79\xcc\x05\x4c\xe1\x6e\x42\x3c\xff\x61\xa2\x17\x52\xf3\x14\xe8\xc7\xa4\x7d\x2b\x7e\xf3\x0a\x70\x3c\x2a\x9a\xb1\xad\x88\xca\x11\xa6\x7b\x14\x92\xe5\xdc\x76\xa0\x59\xfa\x8c\x2b\xdc\xa2\xb8\xde\x85\xf3\xe7\xe7\x55\x1d\xad\xdc\x8a\xe6\x46\x14\xa8\x0a\xc1\xe1\xef\x4f\x86\xc3\x09\xf9\x19\x00\x00\xff\xff\xa9\x71\x24\xbb\xeb\x06\x00\x00")

func _20_remove_fieldsSqlBytes() ([]byte, error) {
	return bindataRead(
		__20_remove_fieldsSql,
		"20_remove_fields.sql",
	)
}

func _20_remove_fieldsSql() (*asset, error) {
	bytes, err := _20_remove_fieldsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20_remove_fields.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __21_blobstoreSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8c\x31\x6f\xb3\x30\x18\x84\x77\xff\x8a\x1b\x18\x82\x94\x29\x2b\x93\xc3\xe7\x0f\x21\x11\xa7\x72\x60\x46\xa6\x7d\x85\xac\x1a\x9b\xbe\xbc\xa9\xc2\xbf\xaf\xda\x2e\xe9\x70\xd2\x9d\x4e\xcf\xf3\xca\xe4\x85\x20\x7e\x8a\x84\x29\xe6\x69\xdc\x24\x33\xe1\xf0\xd3\x93\x5f\x08\x42\x0f\x39\xfe\x7e\xb2\xaf\x7f\x76\x0e\x6f\xf8\x4e\xca\x82\x74\x8f\xf1\x88\x95\xc3\xe2\x79\xc7\x3b\xed\x4f\x8e\x27\xbc\x2c\x2b\xa5\x6a\x67\x74\x6f\x70\x75\x70\xe6\xa5\xd3\xb5\xc1\xff\xc1\xd6\x7d\x7b\xb5\x48\xf4\x90\x71\x09\x33\x7b\x09\x39\x8d\x9f\xc4\x5b\xc8\xe9\x50\xc2\x99\x7e\x70\xf6\x86\x90\x84\x66\x62\xd5\x69\xdb\x0c\xba\x31\x58\xe3\x3a\x6f\x1f\x11\xed\xe5\x32\xf4\xfa\xdc\x19\xe8\x9b\x2a\x0a\x75\x36\x4d\x6b\x15\x00\x30\xc9\x9d\x13\x4e\xa7\x4a\x19\xfb\xaf\x52\x45\x51\xa9\xaf\x00\x00\x00\xff\xff\x3c\x4d\xa8\xe0\xf9\x00\x00\x00")

func _21_blobstoreSqlBytes() ([]byte, error) {
	return bindataRead(
		__21_blobstoreSql,
		"21_blobstore.sql",
	)
}

func _21_blobstoreSql() (*asset, error) {
	bytes, err := _21_blobstoreSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "21_blobstore.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _initSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcc\xb1\x6a\xc3\x30\x10\x06\xe0\xb9\xf7\x14\x3f\xc1\x43\x0b\x5d\x3a\x6b\x52\xdc\x8b\x2b\xb0\xe5\x22\x9d\xa1\x9b\x71\x83\x70\x04\x8e\xe2\xca\x4a\xf1\xe3\x77\x68\xe6\x0f\xbe\xda\xb1\x16\x86\xaf\x3f\xb8\xd3\x30\x27\xd8\x5e\xc0\x5f\xc6\x8b\xc7\xe1\x1a\xf6\x83\x22\xf2\x2c\xd8\xc2\x94\xcf\x97\x71\x9d\xca\x05\xd2\xff\xd3\xeb\x7a\xff\x5e\xe2\x59\x11\x3d\x96\xde\xc1\xf1\x67\xab\x6b\xc6\x69\xb0\xb5\x98\xde\x22\x85\xbd\x8c\xd7\x38\xe7\xa9\xc4\x5b\x1a\x7f\x43\xde\xe2\x2d\x3d\xbf\xc0\xb1\x0c\xce\x7a\xc4\x54\xc2\x1c\x32\x69\x8f\xaa\xa2\x23\x37\xc6\xd2\x53\x0e\xe5\x9e\x13\xde\x14\xb1\x7d\x57\x55\x45\xad\xb6\xcd\xa0\x1b\xc6\xba\xac\xf3\xf6\xb3\xc0\x74\xdd\x20\xfa\xd8\xb2\xa2\xbf\x00\x00\x00\xff\xff\x0b\xd0\x6b\xd9\xc4\x00\x00\x00")

func initSqlBytes() ([]byte, error) {
	return bindataRead(
		_initSql,
		"init.sql",
	)
}

func initSql() (*asset, error) {
	bytes, err := initSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "init.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"01_initial_schema.sql":        _01_initial_schemaSql,
	"02_views_functions.sql":       _02_views_functionsSql,
	"03_tree_functions.sql":        _03_tree_functionsSql,
	"17_fingerprint.sql":           _17_fingerprintSql,
	"18_remove_entities.sql":       _18_remove_entitiesSql,
	"19_remove_search_configs.sql": _19_remove_search_configsSql,
	"20_remove_fields.sql":         _20_remove_fieldsSql,
	"21_blobstore.sql":             _21_blobstoreSql,
	"init.sql":                     initSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"01_initial_schema.sql":        &bintree{_01_initial_schemaSql, map[string]*bintree{}},
	"02_views_functions.sql":       &bintree{_02_views_functionsSql, map[string]*bintree{}},
	"03_tree_functions.sql":        &bintree{_03_tree_functionsSql, map[string]*bintree{}},
	"17_fingerprint.sql":           &bintree{_17_fingerprintSql, map[string]*bintree{}},
	"18_remove_entities.sql":       &bintree{_18_remove_entitiesSql, map[string]*bintree{}},
	"19_remove_search_configs.sql": &bintree{_19_remove_search_configsSql, map[string]*bintree{}},
	"20_remove_fields.sql":         &bintree{_20_remove_fieldsSql, map[string]*bintree{}},
	"21_blobstore.sql":             &bintree{_21_blobstoreSql, map[string]*bintree{}},
	"init.sql":                     &bintree{initSql, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
