// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.22.0
// source: services/query/endpoints/search/search.proto

package pb

import (
	_ "github.com/d4l-data4life/mex/mex/shared/known/securitypb"
	solr "github.com/d4l-data4life/mex/mex/shared/solr"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query           string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Fields          []string               `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	Sorting         *solr.Sorting          `protobuf:"bytes,3,opt,name=sorting,proto3" json:"sorting,omitempty"`
	Limit           uint32                 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset          uint32                 `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	SearchFocus     string                 `protobuf:"bytes,6,opt,name=search_focus,json=searchFocus,proto3" json:"search_focus,omitempty"`
	HighlightFields []string               `protobuf:"bytes,7,rep,name=highlight_fields,json=highlightFields,proto3" json:"highlight_fields,omitempty"`
	AutoHighlight   bool                   `protobuf:"varint,8,opt,name=auto_highlight,json=autoHighlight,proto3" json:"auto_highlight,omitempty"`
	Facets          []*solr.Facet          `protobuf:"bytes,9,rep,name=facets,proto3" json:"facets,omitempty"`
	AxisConstraints []*solr.AxisConstraint `protobuf:"bytes,10,rep,name=axis_constraints,json=axisConstraints,proto3" json:"axis_constraints,omitempty"`
	MaxEditDistance uint32                 `protobuf:"varint,11,opt,name=max_edit_distance,json=maxEditDistance,proto3" json:"max_edit_distance,omitempty"`
	UseNgramField   bool                   `protobuf:"varint,12,opt,name=use_ngram_field,json=useNgramField,proto3" json:"use_ngram_field,omitempty"`
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_query_endpoints_search_search_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_query_endpoints_search_search_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_services_query_endpoints_search_search_proto_rawDescGZIP(), []int{0}
}

func (x *SearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *SearchRequest) GetSorting() *solr.Sorting {
	if x != nil {
		return x.Sorting
	}
	return nil
}

func (x *SearchRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SearchRequest) GetSearchFocus() string {
	if x != nil {
		return x.SearchFocus
	}
	return ""
}

func (x *SearchRequest) GetHighlightFields() []string {
	if x != nil {
		return x.HighlightFields
	}
	return nil
}

func (x *SearchRequest) GetAutoHighlight() bool {
	if x != nil {
		return x.AutoHighlight
	}
	return false
}

func (x *SearchRequest) GetFacets() []*solr.Facet {
	if x != nil {
		return x.Facets
	}
	return nil
}

func (x *SearchRequest) GetAxisConstraints() []*solr.AxisConstraint {
	if x != nil {
		return x.AxisConstraints
	}
	return nil
}

func (x *SearchRequest) GetMaxEditDistance() uint32 {
	if x != nil {
		return x.MaxEditDistance
	}
	return 0
}

func (x *SearchRequest) GetUseNgramField() bool {
	if x != nil {
		return x.UseNgramField
	}
	return false
}

type SearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumFound      uint32              `protobuf:"varint,1,opt,name=num_found,json=numFound,proto3" json:"num_found,omitempty"`
	NumFoundExact bool                `protobuf:"varint,2,opt,name=num_found_exact,json=numFoundExact,proto3" json:"num_found_exact,omitempty"`
	Start         uint32              `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	MaxScore      float64             `protobuf:"fixed64,4,opt,name=max_score,json=maxScore,proto3" json:"max_score,omitempty"`
	Items         []*solr.DocItem     `protobuf:"bytes,10,rep,name=items,proto3" json:"items,omitempty"`
	Facets        []*solr.FacetResult `protobuf:"bytes,11,rep,name=facets,proto3" json:"facets,omitempty"`
	Highlights    []*solr.Highlight   `protobuf:"bytes,12,rep,name=highlights,proto3" json:"highlights,omitempty"`
	Diagnostics   *solr.Diagnostics   `protobuf:"bytes,13,opt,name=diagnostics,proto3" json:"diagnostics,omitempty"`
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_query_endpoints_search_search_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_query_endpoints_search_search_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_services_query_endpoints_search_search_proto_rawDescGZIP(), []int{1}
}

func (x *SearchResponse) GetNumFound() uint32 {
	if x != nil {
		return x.NumFound
	}
	return 0
}

func (x *SearchResponse) GetNumFoundExact() bool {
	if x != nil {
		return x.NumFoundExact
	}
	return false
}

func (x *SearchResponse) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *SearchResponse) GetMaxScore() float64 {
	if x != nil {
		return x.MaxScore
	}
	return 0
}

func (x *SearchResponse) GetItems() []*solr.DocItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SearchResponse) GetFacets() []*solr.FacetResult {
	if x != nil {
		return x.Facets
	}
	return nil
}

func (x *SearchResponse) GetHighlights() []*solr.Highlight {
	if x != nil {
		return x.Highlights
	}
	return nil
}

func (x *SearchResponse) GetDiagnostics() *solr.Diagnostics {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

var File_services_query_endpoints_search_search_proto protoreflect.FileDescriptor

var file_services_query_endpoints_search_search_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x2f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x64, 0x34, 0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x1a, 0x16,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x73, 0x6f, 0x6c, 0x72, 0x2f, 0x73, 0x6f, 0x6c, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x64, 0x34, 0x6c, 0x2f, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe1, 0x03, 0x0a, 0x0d, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x92, 0x41, 0x13, 0x32, 0x11,
	0x53, 0x6f, 0x6c, 0x72, 0x20, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x20, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x12, 0x29, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x5f, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x10,
	0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x6f, 0x5f,
	0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x61, 0x75, 0x74, 0x6f, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x25,
	0x0a, 0x06, 0x66, 0x61, 0x63, 0x65, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x76, 0x30, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x74, 0x52, 0x06, 0x66,
	0x61, 0x63, 0x65, 0x74, 0x73, 0x12, 0x41, 0x0a, 0x10, 0x61, 0x78, 0x69, 0x73, 0x5f, 0x63, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x76, 0x30, 0x2e, 0x41, 0x78, 0x69, 0x73, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x0f, 0x61, 0x78, 0x69, 0x73, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x61, 0x78, 0x5f,
	0x65, 0x64, 0x69, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6d, 0x61, 0x78, 0x45, 0x64, 0x69, 0x74, 0x44, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x67, 0x72, 0x61,
	0x6d, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x75,
	0x73, 0x65, 0x4e, 0x67, 0x72, 0x61, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x22, 0xc6, 0x02, 0x0a,
	0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x6e, 0x75, 0x6d, 0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x78, 0x61, 0x63, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x45,
	0x78, 0x61, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61,
	0x78, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d,
	0x61, 0x78, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x76, 0x30, 0x2e,
	0x44, 0x6f, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2b,
	0x0a, 0x06, 0x66, 0x61, 0x63, 0x65, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x76, 0x30, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x66, 0x61, 0x63, 0x65, 0x74, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x68,
	0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x76, 0x30, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x52, 0x0a, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x35,
	0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x76, 0x30, 0x2e, 0x44, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x32, 0xb1, 0x01, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x12, 0xa6, 0x01, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1d, 0x2e, 0x64, 0x34,
	0x6c, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x64, 0x34, 0x6c,
	0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5d, 0x92, 0x41, 0x25, 0x1a,
	0x23, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x61, 0x20, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x20, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x98, 0xf1, 0x04, 0x02, 0xaa, 0xf1, 0x04, 0x0e, 0x0a, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19,
	0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x58, 0x5a, 0x56, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x73, 0x75, 0x6e, 0x64, 0x68, 0x65,
	0x69, 0x74, 0x73, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x72, 0x6b, 0x69, 0x2d, 0x6d, 0x65, 0x78,
	0x2d, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x6d, 0x65, 0x78, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x70, 0x62,
	0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_query_endpoints_search_search_proto_rawDescOnce sync.Once
	file_services_query_endpoints_search_search_proto_rawDescData = file_services_query_endpoints_search_search_proto_rawDesc
)

func file_services_query_endpoints_search_search_proto_rawDescGZIP() []byte {
	file_services_query_endpoints_search_search_proto_rawDescOnce.Do(func() {
		file_services_query_endpoints_search_search_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_query_endpoints_search_search_proto_rawDescData)
	})
	return file_services_query_endpoints_search_search_proto_rawDescData
}

var file_services_query_endpoints_search_search_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_services_query_endpoints_search_search_proto_goTypes = []interface{}{
	(*SearchRequest)(nil),       // 0: d4l.mex.search.SearchRequest
	(*SearchResponse)(nil),      // 1: d4l.mex.search.SearchResponse
	(*solr.Sorting)(nil),        // 2: mex.v0.Sorting
	(*solr.Facet)(nil),          // 3: mex.v0.Facet
	(*solr.AxisConstraint)(nil), // 4: mex.v0.AxisConstraint
	(*solr.DocItem)(nil),        // 5: mex.v0.DocItem
	(*solr.FacetResult)(nil),    // 6: mex.v0.FacetResult
	(*solr.Highlight)(nil),      // 7: mex.v0.Highlight
	(*solr.Diagnostics)(nil),    // 8: mex.v0.Diagnostics
}
var file_services_query_endpoints_search_search_proto_depIdxs = []int32{
	2, // 0: d4l.mex.search.SearchRequest.sorting:type_name -> mex.v0.Sorting
	3, // 1: d4l.mex.search.SearchRequest.facets:type_name -> mex.v0.Facet
	4, // 2: d4l.mex.search.SearchRequest.axis_constraints:type_name -> mex.v0.AxisConstraint
	5, // 3: d4l.mex.search.SearchResponse.items:type_name -> mex.v0.DocItem
	6, // 4: d4l.mex.search.SearchResponse.facets:type_name -> mex.v0.FacetResult
	7, // 5: d4l.mex.search.SearchResponse.highlights:type_name -> mex.v0.Highlight
	8, // 6: d4l.mex.search.SearchResponse.diagnostics:type_name -> mex.v0.Diagnostics
	0, // 7: d4l.mex.search.Search.Search:input_type -> d4l.mex.search.SearchRequest
	1, // 8: d4l.mex.search.Search.Search:output_type -> d4l.mex.search.SearchResponse
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_services_query_endpoints_search_search_proto_init() }
func file_services_query_endpoints_search_search_proto_init() {
	if File_services_query_endpoints_search_search_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_query_endpoints_search_search_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_query_endpoints_search_search_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_query_endpoints_search_search_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_query_endpoints_search_search_proto_goTypes,
		DependencyIndexes: file_services_query_endpoints_search_search_proto_depIdxs,
		MessageInfos:      file_services_query_endpoints_search_search_proto_msgTypes,
	}.Build()
	File_services_query_endpoints_search_search_proto = out.File
	file_services_query_endpoints_search_search_proto_rawDesc = nil
	file_services_query_endpoints_search_search_proto_goTypes = nil
	file_services_query_endpoints_search_search_proto_depIdxs = nil
}
