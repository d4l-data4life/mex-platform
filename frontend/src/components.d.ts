/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Breadcrumb } from "./components/breadcrumbs/breadcrumbs";
import { CardRow } from "./components/card/card";
import { CheckStatusEnum } from "utils/filters";
import { SearchFacet } from "config/search";
import { SearchResultsFacet, SearchResultsFacetBucket, SearchResultsItem } from "stores/search";
import { CompletenessData } from "utils/field";
import { Content, TocTree } from "services/content";
import { DropdownOption } from "./components/dropdown/dropdown";
import { Item, Version } from "services/item";
import { FormBlockInputRadioOption } from "services/form";
import { SidebarFeatureConfig, SidebarFeatureConfigActionItem } from "config/item";
import { ModalData } from "components/root/root";
import { Field } from "models/field";
import { LinklistTile } from "./components/home/linklist/linklist";
import { LinkItem } from "config/navigation";
import { ModalContentsButton } from "./components/modal/modal-contents";
import { RangeChartPoint } from "./components/range-chart/range-chart";
import { TabsItem } from "./components/tabs/tabs";
export namespace Components {
    interface MexAccordion {
        "expanded": boolean;
        "testAttr"?: string;
    }
    interface MexBreadcrumbs {
        "items": Breadcrumb[];
    }
    interface MexBrowse {
    }
    interface MexCard {
        "icon"?: 'email' | 'support';
        "rows": CardRow[];
    }
    interface MexCheckbox {
        "checked": CheckStatusEnum;
        "classes": string;
        "disabled": boolean;
        "handleChange"?: (checked: CheckStatusEnum) => void;
        "label": string;
        "required": boolean;
        "secondaryText"?: string;
        "testAttr"?: string;
    }
    interface MexCheckboxFilter {
        "buckets": SearchResultsFacetBucket[];
        "busy": boolean;
        "expanded": boolean;
        "facet": SearchFacet;
    }
    interface MexCompletenessDetails {
        "context": any;
        "data": CompletenessData;
    }
    interface MexContentPage {
        "content": Content;
    }
    interface MexContentPageContent {
        "content": Content;
        "handleViewPortIntersect"?: (displayedHeadings: string[]) => void;
        "isMediaTablet"?: boolean;
        "scrollTarget": string;
    }
    interface MexContentPageNav {
        "activeAnchors"?: string[];
        "contentEl"?: HTMLMexContentPageContentElement;
        "handleAnchorClick"?: (slug: string) => void;
        "isMediaTablet"?: boolean;
        "tocTree": TocTree;
    }
    interface MexDashboard {
    }
    interface MexDropdown {
        "collapse": () => Promise<void>;
        "disabled": boolean;
        "handleChange"?: (value: any) => void;
        "handleCollapse"?: () => void;
        "handleExpand"?: () => void;
        "label": string;
        "options"?: DropdownOption[];
        "orientation": 'left' | 'right';
        "required": boolean;
        "testAttr"?: string;
        "toggleClass": string;
        "value"?: any;
        "withLabelsTranslation": boolean;
    }
    interface MexError {
    }
    interface MexFilter {
        "busy": boolean;
        "facet": SearchFacet;
        "isParentExpanded": boolean;
    }
    interface MexFilterFooter {
        "busy": boolean;
        "facet": SearchFacet;
        "hasItems": boolean;
        "isLoadMoreDisabled": boolean;
    }
    interface MexFilters {
    }
    interface MexFiltersSummary {
        "label": string;
        "testAttr"?: string;
    }
    interface MexFooter {
        "isThin": boolean;
    }
    interface MexForm {
        "context"?: Item;
        "embedded"?: boolean;
        "formId": string;
        "formKey"?: string;
        "recipient"?: Item;
    }
    interface MexFormInputRadio {
        "default"?: string;
        "handleBlur"?: () => void;
        "handleChange"?: (value: string) => void;
        "handleFocus"?: () => void;
        "label"?: string;
        "name": string;
        "options": FormBlockInputRadioOption[];
        "required"?: boolean;
        "showLabel"?: boolean;
        "testAttr"?: string;
        "value"?: string;
        "width": '1' | '2/3' | '1/2' | '1/3';
    }
    interface MexFormInputText {
        "ariaLabelAttr"?: string;
        "handleBlur"?: () => void;
        "handleFocus"?: () => void;
        "handleInput"?: (value: string) => void;
        "index"?: number;
        "label"?: string;
        "name": string;
        "placeholder"?: string;
        "required"?: boolean;
        "showLabel"?: boolean;
        "testAttr"?: string;
        "type"?: string;
        "value"?: string;
        "width": '1' | '2/3' | '1/2' | '1/3';
    }
    interface MexHeader {
    }
    interface MexHeaderUser {
    }
    interface MexHierarchyFilter {
        "busy": boolean;
        "expanded": boolean;
        "facet": SearchFacet;
        "facetResponse"?: SearchResultsFacet;
        "handleChange"?: () => void;
    }
    interface MexIconArrow {
        "classes": string;
    }
    interface MexIconArrowDrilldown {
        "classes": string;
    }
    interface MexIconCalendar {
        "arrows": boolean;
        "classes": string;
    }
    interface MexIconCheck {
        "classes": string;
    }
    interface MexIconChevron {
        "classes": string;
    }
    interface MexIconClose {
        "classes": string;
    }
    interface MexIconCloseInline {
        "classes": string;
    }
    interface MexIconCompleteness {
        "barsCount": number;
        "classes": string;
        "monochrome": boolean;
        "value": number;
    }
    interface MexIconDatum {
        "classes": string;
    }
    interface MexIconDownload {
        "classes": string;
    }
    interface MexIconEmail {
        "classes": string;
    }
    interface MexIconEntity {
        "attrs": object;
        "entityName": string;
    }
    interface MexIconInfo {
        "classes": string;
        "hasBackground": boolean;
    }
    interface MexIconLock {
        "classes": string;
        "open": boolean;
    }
    interface MexIconPlatform {
        "classes": string;
    }
    interface MexIconReload {
        "classes": string;
    }
    interface MexIconResource {
        "classes": string;
    }
    interface MexIconSearch {
        "classes": string;
    }
    interface MexIconSource {
        "classes": string;
    }
    interface MexIconSupport {
        "classes": string;
    }
    interface MexIconTrash {
        "classes": string;
    }
    interface MexIconUser {
        "classes": string;
    }
    interface MexIconWarning {
        "classes": string;
    }
    interface MexIllustrationConfirm {
        "classes": string;
    }
    interface MexIllustrationContact {
        "classes": string;
    }
    interface MexIllustrationDownload {
        "classes": string;
    }
    interface MexIllustrationError {
        "classes": string;
    }
    interface MexIllustrationSearchEmpty {
        "classes": string;
    }
    interface MexItem {
        "highlightChanges": boolean;
        "item"?: Item;
        "latestVersionItem"?: Item;
        "previousVersionItem"?: Item;
    }
    interface MexItemContact {
        "config": SidebarFeatureConfig;
        "isOnLatestVersion": boolean;
        "item"?: Item;
    }
    interface MexItemContactChoice {
        "actions": SidebarFeatureConfigActionItem[];
        "config": SidebarFeatureConfig;
        "contactItem": Item;
        "contextItem": Item;
        "handleFormClose"?: () => void;
        "handleFormOpen"?: () => void;
    }
    interface MexItemEntityHeadline {
        "item"?: Item;
        "link"?: string;
    }
    interface MexItemFieldDescription {
        "field": Field;
        "highlightChanges": boolean;
        "item"?: Item;
        "previousVersionItem"?: Item;
    }
    interface MexItemFieldEntity {
        "field": Field;
        "item"?: Item;
    }
    interface MexItemFieldPlain {
        "field": Field;
        "highlightChanges": boolean;
        "item"?: Item;
        "items"?: Item[];
        "previousVersionItem"?: Item;
        "refErrors"?: string[];
    }
    interface MexItemFieldReference {
        "field": Field;
        "highlightChanges": boolean;
        "item"?: Item;
        "previousVersionItem"?: Item;
    }
    interface MexItemFieldTitle {
        "field": Field;
        "highlightChanges": boolean;
        "item"?: Item;
        "previousVersionItem"?: Item;
    }
    interface MexItemFields {
        "context": 'details' | 'preview' | 'sidebar';
        "fields"?: Field[];
        "highlightChanges": boolean;
        "item"?: Item;
        "level": number;
        "previousVersionItem"?: Item;
    }
    interface MexItemInfo {
        "features": SidebarFeatureConfig[];
        "item": SearchResultsItem | Item;
        "orientation": 'horizontal' | 'vertical' | 'auto';
    }
    interface MexItemNavigation {
        "breadcrumb": string;
        "expandVersions": boolean;
        "item"?: Item;
        "itemId": string;
        "versions"?: Version[];
    }
    interface MexItemRelatedResults {
        "item": Item;
    }
    interface MexLink {
        "label": string;
        "showUrl"?: boolean;
        "testAttr"?: string;
        "url": string;
    }
    interface MexLinklist {
        "headline": string;
        "tile": LinklistTile;
    }
    interface MexLinks {
        "classes"?: string;
        "itemClasses"?: string;
        "items": LinkItem[];
        "showUrl"?: boolean;
    }
    interface MexLogo {
        "flag": string;
        "flagTooltip": string;
        "loader": boolean;
    }
    interface MexModal {
        "handleClose"?: () => void;
        "handleSetFocus"?: (closeRef?: HTMLButtonElement) => void;
    }
    interface MexModalContents {
        "buttons"?: ModalContentsButton[];
        "caption"?: string;
        "context"?: any;
        "illustration"?: 'error' | 'download' | 'confirm' | 'contact';
        "progress"?: number;
        "text"?: string;
    }
    interface MexNotFoundState {
        "buttonText"?: string;
        "buttonUrl"?: string;
        "caption": string;
        "testAttr"?: string;
        "text"?: string;
    }
    interface MexNotifications {
    }
    interface MexPagination {
        "ariaLabelAttr"?: string;
        "current"?: number;
        "disabled": boolean;
        "handleClick"?: (num: number) => void;
        "range": number[];
        "renderSlot": boolean;
        "testAttr"?: string;
    }
    interface MexPlaceholder {
        "height"?: string;
        "inline": boolean;
        "lines": number;
        "text": string;
        "width"?: string;
    }
    interface MexProgressBar {
        "progress": number;
        "spaced": boolean;
    }
    interface MexRadio {
        "checked": boolean;
        "classes": string;
        "disabled"?: boolean;
        "handleChange"?: (value: string | number) => void;
        "handleInvalid"?: (event: Event) => void;
        "label": string;
        "name": string;
        "required"?: boolean;
        "testAttr"?: string;
        "value": string | number;
    }
    interface MexRangeChart {
        "handleClick"?: (point: RangeChartPoint) => void;
        "points": RangeChartPoint[];
        "value": number[];
    }
    interface MexRangeFilter {
        "buckets": SearchResultsFacetBucket[];
        "busy": boolean;
        "expanded": boolean;
        "facet": SearchFacet;
    }
    interface MexRangeSlider {
        "disabled": boolean;
        "handleChange": (value: number[]) => void;
        "handleDrag"?: (value: number[]) => void;
        "highlightActiveRange": boolean;
        "max": number;
        "min": number;
        "mode": 'point' | 'frame';
        "testAttr"?: string;
        "value": number[];
    }
    interface MexResult {
        "item"?: SearchResultsItem;
    }
    interface MexResults {
        "handlePagination"?: (page: number) => void;
    }
    interface MexResultsDownload {
        "disabled"?: boolean;
    }
    interface MexRoot {
    }
    interface MexSearch {
        "autofocus": boolean;
        "expanded": boolean;
        "handleReset"?: () => void;
        "handleSearch"?: (value: string, searchFocus: string) => void;
        "searchFocus": any;
        "value": string;
    }
    interface MexServicelist {
        "items": LinkItem[];
    }
    interface MexTabs {
        "handleClick"?: (item: TabsItem) => void;
        "items": TabsItem[];
        "testAttr"?: string;
    }
    interface MexTag {
        "clickable": boolean;
        "closable": boolean;
        "closeTitle"?: string;
        "handleClick"?: () => void;
        "handleClose"?: () => void;
        "testAttr"?: string;
        "text": string;
    }
    interface MexTile {
        "disabled": boolean;
        "handleClick"?: () => void;
        "hint"?: string;
        "icon"?: 'arrow' | 'drilldown';
        "isBusy"?: boolean;
        "modifiers": string[];
        "testAttr"?: string;
        "testKeyAttr"?: number;
        "text"?: string;
        "url"?: string;
    }
    interface MexToggle {
        "active": boolean;
        "disabled": boolean;
        "label": string;
        "testAttr"?: string;
        "toggleHandler": (isActive: boolean) => void;
    }
    interface MexTooltip {
        "classes": string;
        "handleClick"?: (event?: MouseEvent | TouchEvent) => void;
        "method": 'focus' | 'hover';
        "testAttr"?: string;
        "text"?: string;
    }
    interface MexTrackingBanner {
    }
    interface MexViewAuth {
        "url": URL;
    }
    interface MexViewContentPage {
        "pageId": string;
    }
    interface MexViewHome {
    }
    interface MexViewItem {
        "itemId": string;
    }
    interface MexViewLogout {
    }
    interface MexViewNotFound {
    }
    interface MexViewSearch {
        "url": URL;
    }
}
export interface MexCheckboxFilterCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLMexCheckboxFilterElement;
}
export interface MexContentPageCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLMexContentPageElement;
}
export interface MexFiltersCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLMexFiltersElement;
}
export interface MexFiltersSummaryCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLMexFiltersSummaryElement;
}
export interface MexFormCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLMexFormElement;
}
export interface MexHierarchyFilterCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLMexHierarchyFilterElement;
}
export interface MexItemContactCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLMexItemContactElement;
}
export interface MexItemContactChoiceCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLMexItemContactChoiceElement;
}
export interface MexItemInfoCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLMexItemInfoElement;
}
export interface MexItemNavigationCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLMexItemNavigationElement;
}
export interface MexRangeFilterCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLMexRangeFilterElement;
}
export interface MexResultsCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLMexResultsElement;
}
export interface MexResultsDownloadCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLMexResultsDownloadElement;
}
export interface MexRootCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLMexRootElement;
}
declare global {
    interface HTMLMexAccordionElement extends Components.MexAccordion, HTMLStencilElement {
    }
    var HTMLMexAccordionElement: {
        prototype: HTMLMexAccordionElement;
        new (): HTMLMexAccordionElement;
    };
    interface HTMLMexBreadcrumbsElement extends Components.MexBreadcrumbs, HTMLStencilElement {
    }
    var HTMLMexBreadcrumbsElement: {
        prototype: HTMLMexBreadcrumbsElement;
        new (): HTMLMexBreadcrumbsElement;
    };
    interface HTMLMexBrowseElement extends Components.MexBrowse, HTMLStencilElement {
    }
    var HTMLMexBrowseElement: {
        prototype: HTMLMexBrowseElement;
        new (): HTMLMexBrowseElement;
    };
    interface HTMLMexCardElement extends Components.MexCard, HTMLStencilElement {
    }
    var HTMLMexCardElement: {
        prototype: HTMLMexCardElement;
        new (): HTMLMexCardElement;
    };
    interface HTMLMexCheckboxElement extends Components.MexCheckbox, HTMLStencilElement {
    }
    var HTMLMexCheckboxElement: {
        prototype: HTMLMexCheckboxElement;
        new (): HTMLMexCheckboxElement;
    };
    interface HTMLMexCheckboxFilterElement extends Components.MexCheckboxFilter, HTMLStencilElement {
    }
    var HTMLMexCheckboxFilterElement: {
        prototype: HTMLMexCheckboxFilterElement;
        new (): HTMLMexCheckboxFilterElement;
    };
    interface HTMLMexCompletenessDetailsElement extends Components.MexCompletenessDetails, HTMLStencilElement {
    }
    var HTMLMexCompletenessDetailsElement: {
        prototype: HTMLMexCompletenessDetailsElement;
        new (): HTMLMexCompletenessDetailsElement;
    };
    interface HTMLMexContentPageElement extends Components.MexContentPage, HTMLStencilElement {
    }
    var HTMLMexContentPageElement: {
        prototype: HTMLMexContentPageElement;
        new (): HTMLMexContentPageElement;
    };
    interface HTMLMexContentPageContentElement extends Components.MexContentPageContent, HTMLStencilElement {
    }
    var HTMLMexContentPageContentElement: {
        prototype: HTMLMexContentPageContentElement;
        new (): HTMLMexContentPageContentElement;
    };
    interface HTMLMexContentPageNavElement extends Components.MexContentPageNav, HTMLStencilElement {
    }
    var HTMLMexContentPageNavElement: {
        prototype: HTMLMexContentPageNavElement;
        new (): HTMLMexContentPageNavElement;
    };
    interface HTMLMexDashboardElement extends Components.MexDashboard, HTMLStencilElement {
    }
    var HTMLMexDashboardElement: {
        prototype: HTMLMexDashboardElement;
        new (): HTMLMexDashboardElement;
    };
    interface HTMLMexDropdownElement extends Components.MexDropdown, HTMLStencilElement {
    }
    var HTMLMexDropdownElement: {
        prototype: HTMLMexDropdownElement;
        new (): HTMLMexDropdownElement;
    };
    interface HTMLMexErrorElement extends Components.MexError, HTMLStencilElement {
    }
    var HTMLMexErrorElement: {
        prototype: HTMLMexErrorElement;
        new (): HTMLMexErrorElement;
    };
    interface HTMLMexFilterElement extends Components.MexFilter, HTMLStencilElement {
    }
    var HTMLMexFilterElement: {
        prototype: HTMLMexFilterElement;
        new (): HTMLMexFilterElement;
    };
    interface HTMLMexFilterFooterElement extends Components.MexFilterFooter, HTMLStencilElement {
    }
    var HTMLMexFilterFooterElement: {
        prototype: HTMLMexFilterFooterElement;
        new (): HTMLMexFilterFooterElement;
    };
    interface HTMLMexFiltersElement extends Components.MexFilters, HTMLStencilElement {
    }
    var HTMLMexFiltersElement: {
        prototype: HTMLMexFiltersElement;
        new (): HTMLMexFiltersElement;
    };
    interface HTMLMexFiltersSummaryElement extends Components.MexFiltersSummary, HTMLStencilElement {
    }
    var HTMLMexFiltersSummaryElement: {
        prototype: HTMLMexFiltersSummaryElement;
        new (): HTMLMexFiltersSummaryElement;
    };
    interface HTMLMexFooterElement extends Components.MexFooter, HTMLStencilElement {
    }
    var HTMLMexFooterElement: {
        prototype: HTMLMexFooterElement;
        new (): HTMLMexFooterElement;
    };
    interface HTMLMexFormElement extends Components.MexForm, HTMLStencilElement {
    }
    var HTMLMexFormElement: {
        prototype: HTMLMexFormElement;
        new (): HTMLMexFormElement;
    };
    interface HTMLMexFormInputRadioElement extends Components.MexFormInputRadio, HTMLStencilElement {
    }
    var HTMLMexFormInputRadioElement: {
        prototype: HTMLMexFormInputRadioElement;
        new (): HTMLMexFormInputRadioElement;
    };
    interface HTMLMexFormInputTextElement extends Components.MexFormInputText, HTMLStencilElement {
    }
    var HTMLMexFormInputTextElement: {
        prototype: HTMLMexFormInputTextElement;
        new (): HTMLMexFormInputTextElement;
    };
    interface HTMLMexHeaderElement extends Components.MexHeader, HTMLStencilElement {
    }
    var HTMLMexHeaderElement: {
        prototype: HTMLMexHeaderElement;
        new (): HTMLMexHeaderElement;
    };
    interface HTMLMexHeaderUserElement extends Components.MexHeaderUser, HTMLStencilElement {
    }
    var HTMLMexHeaderUserElement: {
        prototype: HTMLMexHeaderUserElement;
        new (): HTMLMexHeaderUserElement;
    };
    interface HTMLMexHierarchyFilterElement extends Components.MexHierarchyFilter, HTMLStencilElement {
    }
    var HTMLMexHierarchyFilterElement: {
        prototype: HTMLMexHierarchyFilterElement;
        new (): HTMLMexHierarchyFilterElement;
    };
    interface HTMLMexIconArrowElement extends Components.MexIconArrow, HTMLStencilElement {
    }
    var HTMLMexIconArrowElement: {
        prototype: HTMLMexIconArrowElement;
        new (): HTMLMexIconArrowElement;
    };
    interface HTMLMexIconArrowDrilldownElement extends Components.MexIconArrowDrilldown, HTMLStencilElement {
    }
    var HTMLMexIconArrowDrilldownElement: {
        prototype: HTMLMexIconArrowDrilldownElement;
        new (): HTMLMexIconArrowDrilldownElement;
    };
    interface HTMLMexIconCalendarElement extends Components.MexIconCalendar, HTMLStencilElement {
    }
    var HTMLMexIconCalendarElement: {
        prototype: HTMLMexIconCalendarElement;
        new (): HTMLMexIconCalendarElement;
    };
    interface HTMLMexIconCheckElement extends Components.MexIconCheck, HTMLStencilElement {
    }
    var HTMLMexIconCheckElement: {
        prototype: HTMLMexIconCheckElement;
        new (): HTMLMexIconCheckElement;
    };
    interface HTMLMexIconChevronElement extends Components.MexIconChevron, HTMLStencilElement {
    }
    var HTMLMexIconChevronElement: {
        prototype: HTMLMexIconChevronElement;
        new (): HTMLMexIconChevronElement;
    };
    interface HTMLMexIconCloseElement extends Components.MexIconClose, HTMLStencilElement {
    }
    var HTMLMexIconCloseElement: {
        prototype: HTMLMexIconCloseElement;
        new (): HTMLMexIconCloseElement;
    };
    interface HTMLMexIconCloseInlineElement extends Components.MexIconCloseInline, HTMLStencilElement {
    }
    var HTMLMexIconCloseInlineElement: {
        prototype: HTMLMexIconCloseInlineElement;
        new (): HTMLMexIconCloseInlineElement;
    };
    interface HTMLMexIconCompletenessElement extends Components.MexIconCompleteness, HTMLStencilElement {
    }
    var HTMLMexIconCompletenessElement: {
        prototype: HTMLMexIconCompletenessElement;
        new (): HTMLMexIconCompletenessElement;
    };
    interface HTMLMexIconDatumElement extends Components.MexIconDatum, HTMLStencilElement {
    }
    var HTMLMexIconDatumElement: {
        prototype: HTMLMexIconDatumElement;
        new (): HTMLMexIconDatumElement;
    };
    interface HTMLMexIconDownloadElement extends Components.MexIconDownload, HTMLStencilElement {
    }
    var HTMLMexIconDownloadElement: {
        prototype: HTMLMexIconDownloadElement;
        new (): HTMLMexIconDownloadElement;
    };
    interface HTMLMexIconEmailElement extends Components.MexIconEmail, HTMLStencilElement {
    }
    var HTMLMexIconEmailElement: {
        prototype: HTMLMexIconEmailElement;
        new (): HTMLMexIconEmailElement;
    };
    interface HTMLMexIconEntityElement extends Components.MexIconEntity, HTMLStencilElement {
    }
    var HTMLMexIconEntityElement: {
        prototype: HTMLMexIconEntityElement;
        new (): HTMLMexIconEntityElement;
    };
    interface HTMLMexIconInfoElement extends Components.MexIconInfo, HTMLStencilElement {
    }
    var HTMLMexIconInfoElement: {
        prototype: HTMLMexIconInfoElement;
        new (): HTMLMexIconInfoElement;
    };
    interface HTMLMexIconLockElement extends Components.MexIconLock, HTMLStencilElement {
    }
    var HTMLMexIconLockElement: {
        prototype: HTMLMexIconLockElement;
        new (): HTMLMexIconLockElement;
    };
    interface HTMLMexIconPlatformElement extends Components.MexIconPlatform, HTMLStencilElement {
    }
    var HTMLMexIconPlatformElement: {
        prototype: HTMLMexIconPlatformElement;
        new (): HTMLMexIconPlatformElement;
    };
    interface HTMLMexIconReloadElement extends Components.MexIconReload, HTMLStencilElement {
    }
    var HTMLMexIconReloadElement: {
        prototype: HTMLMexIconReloadElement;
        new (): HTMLMexIconReloadElement;
    };
    interface HTMLMexIconResourceElement extends Components.MexIconResource, HTMLStencilElement {
    }
    var HTMLMexIconResourceElement: {
        prototype: HTMLMexIconResourceElement;
        new (): HTMLMexIconResourceElement;
    };
    interface HTMLMexIconSearchElement extends Components.MexIconSearch, HTMLStencilElement {
    }
    var HTMLMexIconSearchElement: {
        prototype: HTMLMexIconSearchElement;
        new (): HTMLMexIconSearchElement;
    };
    interface HTMLMexIconSourceElement extends Components.MexIconSource, HTMLStencilElement {
    }
    var HTMLMexIconSourceElement: {
        prototype: HTMLMexIconSourceElement;
        new (): HTMLMexIconSourceElement;
    };
    interface HTMLMexIconSupportElement extends Components.MexIconSupport, HTMLStencilElement {
    }
    var HTMLMexIconSupportElement: {
        prototype: HTMLMexIconSupportElement;
        new (): HTMLMexIconSupportElement;
    };
    interface HTMLMexIconTrashElement extends Components.MexIconTrash, HTMLStencilElement {
    }
    var HTMLMexIconTrashElement: {
        prototype: HTMLMexIconTrashElement;
        new (): HTMLMexIconTrashElement;
    };
    interface HTMLMexIconUserElement extends Components.MexIconUser, HTMLStencilElement {
    }
    var HTMLMexIconUserElement: {
        prototype: HTMLMexIconUserElement;
        new (): HTMLMexIconUserElement;
    };
    interface HTMLMexIconWarningElement extends Components.MexIconWarning, HTMLStencilElement {
    }
    var HTMLMexIconWarningElement: {
        prototype: HTMLMexIconWarningElement;
        new (): HTMLMexIconWarningElement;
    };
    interface HTMLMexIllustrationConfirmElement extends Components.MexIllustrationConfirm, HTMLStencilElement {
    }
    var HTMLMexIllustrationConfirmElement: {
        prototype: HTMLMexIllustrationConfirmElement;
        new (): HTMLMexIllustrationConfirmElement;
    };
    interface HTMLMexIllustrationContactElement extends Components.MexIllustrationContact, HTMLStencilElement {
    }
    var HTMLMexIllustrationContactElement: {
        prototype: HTMLMexIllustrationContactElement;
        new (): HTMLMexIllustrationContactElement;
    };
    interface HTMLMexIllustrationDownloadElement extends Components.MexIllustrationDownload, HTMLStencilElement {
    }
    var HTMLMexIllustrationDownloadElement: {
        prototype: HTMLMexIllustrationDownloadElement;
        new (): HTMLMexIllustrationDownloadElement;
    };
    interface HTMLMexIllustrationErrorElement extends Components.MexIllustrationError, HTMLStencilElement {
    }
    var HTMLMexIllustrationErrorElement: {
        prototype: HTMLMexIllustrationErrorElement;
        new (): HTMLMexIllustrationErrorElement;
    };
    interface HTMLMexIllustrationSearchEmptyElement extends Components.MexIllustrationSearchEmpty, HTMLStencilElement {
    }
    var HTMLMexIllustrationSearchEmptyElement: {
        prototype: HTMLMexIllustrationSearchEmptyElement;
        new (): HTMLMexIllustrationSearchEmptyElement;
    };
    interface HTMLMexItemElement extends Components.MexItem, HTMLStencilElement {
    }
    var HTMLMexItemElement: {
        prototype: HTMLMexItemElement;
        new (): HTMLMexItemElement;
    };
    interface HTMLMexItemContactElement extends Components.MexItemContact, HTMLStencilElement {
    }
    var HTMLMexItemContactElement: {
        prototype: HTMLMexItemContactElement;
        new (): HTMLMexItemContactElement;
    };
    interface HTMLMexItemContactChoiceElement extends Components.MexItemContactChoice, HTMLStencilElement {
    }
    var HTMLMexItemContactChoiceElement: {
        prototype: HTMLMexItemContactChoiceElement;
        new (): HTMLMexItemContactChoiceElement;
    };
    interface HTMLMexItemEntityHeadlineElement extends Components.MexItemEntityHeadline, HTMLStencilElement {
    }
    var HTMLMexItemEntityHeadlineElement: {
        prototype: HTMLMexItemEntityHeadlineElement;
        new (): HTMLMexItemEntityHeadlineElement;
    };
    interface HTMLMexItemFieldDescriptionElement extends Components.MexItemFieldDescription, HTMLStencilElement {
    }
    var HTMLMexItemFieldDescriptionElement: {
        prototype: HTMLMexItemFieldDescriptionElement;
        new (): HTMLMexItemFieldDescriptionElement;
    };
    interface HTMLMexItemFieldEntityElement extends Components.MexItemFieldEntity, HTMLStencilElement {
    }
    var HTMLMexItemFieldEntityElement: {
        prototype: HTMLMexItemFieldEntityElement;
        new (): HTMLMexItemFieldEntityElement;
    };
    interface HTMLMexItemFieldPlainElement extends Components.MexItemFieldPlain, HTMLStencilElement {
    }
    var HTMLMexItemFieldPlainElement: {
        prototype: HTMLMexItemFieldPlainElement;
        new (): HTMLMexItemFieldPlainElement;
    };
    interface HTMLMexItemFieldReferenceElement extends Components.MexItemFieldReference, HTMLStencilElement {
    }
    var HTMLMexItemFieldReferenceElement: {
        prototype: HTMLMexItemFieldReferenceElement;
        new (): HTMLMexItemFieldReferenceElement;
    };
    interface HTMLMexItemFieldTitleElement extends Components.MexItemFieldTitle, HTMLStencilElement {
    }
    var HTMLMexItemFieldTitleElement: {
        prototype: HTMLMexItemFieldTitleElement;
        new (): HTMLMexItemFieldTitleElement;
    };
    interface HTMLMexItemFieldsElement extends Components.MexItemFields, HTMLStencilElement {
    }
    var HTMLMexItemFieldsElement: {
        prototype: HTMLMexItemFieldsElement;
        new (): HTMLMexItemFieldsElement;
    };
    interface HTMLMexItemInfoElement extends Components.MexItemInfo, HTMLStencilElement {
    }
    var HTMLMexItemInfoElement: {
        prototype: HTMLMexItemInfoElement;
        new (): HTMLMexItemInfoElement;
    };
    interface HTMLMexItemNavigationElement extends Components.MexItemNavigation, HTMLStencilElement {
    }
    var HTMLMexItemNavigationElement: {
        prototype: HTMLMexItemNavigationElement;
        new (): HTMLMexItemNavigationElement;
    };
    interface HTMLMexItemRelatedResultsElement extends Components.MexItemRelatedResults, HTMLStencilElement {
    }
    var HTMLMexItemRelatedResultsElement: {
        prototype: HTMLMexItemRelatedResultsElement;
        new (): HTMLMexItemRelatedResultsElement;
    };
    interface HTMLMexLinkElement extends Components.MexLink, HTMLStencilElement {
    }
    var HTMLMexLinkElement: {
        prototype: HTMLMexLinkElement;
        new (): HTMLMexLinkElement;
    };
    interface HTMLMexLinklistElement extends Components.MexLinklist, HTMLStencilElement {
    }
    var HTMLMexLinklistElement: {
        prototype: HTMLMexLinklistElement;
        new (): HTMLMexLinklistElement;
    };
    interface HTMLMexLinksElement extends Components.MexLinks, HTMLStencilElement {
    }
    var HTMLMexLinksElement: {
        prototype: HTMLMexLinksElement;
        new (): HTMLMexLinksElement;
    };
    interface HTMLMexLogoElement extends Components.MexLogo, HTMLStencilElement {
    }
    var HTMLMexLogoElement: {
        prototype: HTMLMexLogoElement;
        new (): HTMLMexLogoElement;
    };
    interface HTMLMexModalElement extends Components.MexModal, HTMLStencilElement {
    }
    var HTMLMexModalElement: {
        prototype: HTMLMexModalElement;
        new (): HTMLMexModalElement;
    };
    interface HTMLMexModalContentsElement extends Components.MexModalContents, HTMLStencilElement {
    }
    var HTMLMexModalContentsElement: {
        prototype: HTMLMexModalContentsElement;
        new (): HTMLMexModalContentsElement;
    };
    interface HTMLMexNotFoundStateElement extends Components.MexNotFoundState, HTMLStencilElement {
    }
    var HTMLMexNotFoundStateElement: {
        prototype: HTMLMexNotFoundStateElement;
        new (): HTMLMexNotFoundStateElement;
    };
    interface HTMLMexNotificationsElement extends Components.MexNotifications, HTMLStencilElement {
    }
    var HTMLMexNotificationsElement: {
        prototype: HTMLMexNotificationsElement;
        new (): HTMLMexNotificationsElement;
    };
    interface HTMLMexPaginationElement extends Components.MexPagination, HTMLStencilElement {
    }
    var HTMLMexPaginationElement: {
        prototype: HTMLMexPaginationElement;
        new (): HTMLMexPaginationElement;
    };
    interface HTMLMexPlaceholderElement extends Components.MexPlaceholder, HTMLStencilElement {
    }
    var HTMLMexPlaceholderElement: {
        prototype: HTMLMexPlaceholderElement;
        new (): HTMLMexPlaceholderElement;
    };
    interface HTMLMexProgressBarElement extends Components.MexProgressBar, HTMLStencilElement {
    }
    var HTMLMexProgressBarElement: {
        prototype: HTMLMexProgressBarElement;
        new (): HTMLMexProgressBarElement;
    };
    interface HTMLMexRadioElement extends Components.MexRadio, HTMLStencilElement {
    }
    var HTMLMexRadioElement: {
        prototype: HTMLMexRadioElement;
        new (): HTMLMexRadioElement;
    };
    interface HTMLMexRangeChartElement extends Components.MexRangeChart, HTMLStencilElement {
    }
    var HTMLMexRangeChartElement: {
        prototype: HTMLMexRangeChartElement;
        new (): HTMLMexRangeChartElement;
    };
    interface HTMLMexRangeFilterElement extends Components.MexRangeFilter, HTMLStencilElement {
    }
    var HTMLMexRangeFilterElement: {
        prototype: HTMLMexRangeFilterElement;
        new (): HTMLMexRangeFilterElement;
    };
    interface HTMLMexRangeSliderElement extends Components.MexRangeSlider, HTMLStencilElement {
    }
    var HTMLMexRangeSliderElement: {
        prototype: HTMLMexRangeSliderElement;
        new (): HTMLMexRangeSliderElement;
    };
    interface HTMLMexResultElement extends Components.MexResult, HTMLStencilElement {
    }
    var HTMLMexResultElement: {
        prototype: HTMLMexResultElement;
        new (): HTMLMexResultElement;
    };
    interface HTMLMexResultsElement extends Components.MexResults, HTMLStencilElement {
    }
    var HTMLMexResultsElement: {
        prototype: HTMLMexResultsElement;
        new (): HTMLMexResultsElement;
    };
    interface HTMLMexResultsDownloadElement extends Components.MexResultsDownload, HTMLStencilElement {
    }
    var HTMLMexResultsDownloadElement: {
        prototype: HTMLMexResultsDownloadElement;
        new (): HTMLMexResultsDownloadElement;
    };
    interface HTMLMexRootElement extends Components.MexRoot, HTMLStencilElement {
    }
    var HTMLMexRootElement: {
        prototype: HTMLMexRootElement;
        new (): HTMLMexRootElement;
    };
    interface HTMLMexSearchElement extends Components.MexSearch, HTMLStencilElement {
    }
    var HTMLMexSearchElement: {
        prototype: HTMLMexSearchElement;
        new (): HTMLMexSearchElement;
    };
    interface HTMLMexServicelistElement extends Components.MexServicelist, HTMLStencilElement {
    }
    var HTMLMexServicelistElement: {
        prototype: HTMLMexServicelistElement;
        new (): HTMLMexServicelistElement;
    };
    interface HTMLMexTabsElement extends Components.MexTabs, HTMLStencilElement {
    }
    var HTMLMexTabsElement: {
        prototype: HTMLMexTabsElement;
        new (): HTMLMexTabsElement;
    };
    interface HTMLMexTagElement extends Components.MexTag, HTMLStencilElement {
    }
    var HTMLMexTagElement: {
        prototype: HTMLMexTagElement;
        new (): HTMLMexTagElement;
    };
    interface HTMLMexTileElement extends Components.MexTile, HTMLStencilElement {
    }
    var HTMLMexTileElement: {
        prototype: HTMLMexTileElement;
        new (): HTMLMexTileElement;
    };
    interface HTMLMexToggleElement extends Components.MexToggle, HTMLStencilElement {
    }
    var HTMLMexToggleElement: {
        prototype: HTMLMexToggleElement;
        new (): HTMLMexToggleElement;
    };
    interface HTMLMexTooltipElement extends Components.MexTooltip, HTMLStencilElement {
    }
    var HTMLMexTooltipElement: {
        prototype: HTMLMexTooltipElement;
        new (): HTMLMexTooltipElement;
    };
    interface HTMLMexTrackingBannerElement extends Components.MexTrackingBanner, HTMLStencilElement {
    }
    var HTMLMexTrackingBannerElement: {
        prototype: HTMLMexTrackingBannerElement;
        new (): HTMLMexTrackingBannerElement;
    };
    interface HTMLMexViewAuthElement extends Components.MexViewAuth, HTMLStencilElement {
    }
    var HTMLMexViewAuthElement: {
        prototype: HTMLMexViewAuthElement;
        new (): HTMLMexViewAuthElement;
    };
    interface HTMLMexViewContentPageElement extends Components.MexViewContentPage, HTMLStencilElement {
    }
    var HTMLMexViewContentPageElement: {
        prototype: HTMLMexViewContentPageElement;
        new (): HTMLMexViewContentPageElement;
    };
    interface HTMLMexViewHomeElement extends Components.MexViewHome, HTMLStencilElement {
    }
    var HTMLMexViewHomeElement: {
        prototype: HTMLMexViewHomeElement;
        new (): HTMLMexViewHomeElement;
    };
    interface HTMLMexViewItemElement extends Components.MexViewItem, HTMLStencilElement {
    }
    var HTMLMexViewItemElement: {
        prototype: HTMLMexViewItemElement;
        new (): HTMLMexViewItemElement;
    };
    interface HTMLMexViewLogoutElement extends Components.MexViewLogout, HTMLStencilElement {
    }
    var HTMLMexViewLogoutElement: {
        prototype: HTMLMexViewLogoutElement;
        new (): HTMLMexViewLogoutElement;
    };
    interface HTMLMexViewNotFoundElement extends Components.MexViewNotFound, HTMLStencilElement {
    }
    var HTMLMexViewNotFoundElement: {
        prototype: HTMLMexViewNotFoundElement;
        new (): HTMLMexViewNotFoundElement;
    };
    interface HTMLMexViewSearchElement extends Components.MexViewSearch, HTMLStencilElement {
    }
    var HTMLMexViewSearchElement: {
        prototype: HTMLMexViewSearchElement;
        new (): HTMLMexViewSearchElement;
    };
    interface HTMLElementTagNameMap {
        "mex-accordion": HTMLMexAccordionElement;
        "mex-breadcrumbs": HTMLMexBreadcrumbsElement;
        "mex-browse": HTMLMexBrowseElement;
        "mex-card": HTMLMexCardElement;
        "mex-checkbox": HTMLMexCheckboxElement;
        "mex-checkbox-filter": HTMLMexCheckboxFilterElement;
        "mex-completeness-details": HTMLMexCompletenessDetailsElement;
        "mex-content-page": HTMLMexContentPageElement;
        "mex-content-page-content": HTMLMexContentPageContentElement;
        "mex-content-page-nav": HTMLMexContentPageNavElement;
        "mex-dashboard": HTMLMexDashboardElement;
        "mex-dropdown": HTMLMexDropdownElement;
        "mex-error": HTMLMexErrorElement;
        "mex-filter": HTMLMexFilterElement;
        "mex-filter-footer": HTMLMexFilterFooterElement;
        "mex-filters": HTMLMexFiltersElement;
        "mex-filters-summary": HTMLMexFiltersSummaryElement;
        "mex-footer": HTMLMexFooterElement;
        "mex-form": HTMLMexFormElement;
        "mex-form-input-radio": HTMLMexFormInputRadioElement;
        "mex-form-input-text": HTMLMexFormInputTextElement;
        "mex-header": HTMLMexHeaderElement;
        "mex-header-user": HTMLMexHeaderUserElement;
        "mex-hierarchy-filter": HTMLMexHierarchyFilterElement;
        "mex-icon-arrow": HTMLMexIconArrowElement;
        "mex-icon-arrow-drilldown": HTMLMexIconArrowDrilldownElement;
        "mex-icon-calendar": HTMLMexIconCalendarElement;
        "mex-icon-check": HTMLMexIconCheckElement;
        "mex-icon-chevron": HTMLMexIconChevronElement;
        "mex-icon-close": HTMLMexIconCloseElement;
        "mex-icon-close-inline": HTMLMexIconCloseInlineElement;
        "mex-icon-completeness": HTMLMexIconCompletenessElement;
        "mex-icon-datum": HTMLMexIconDatumElement;
        "mex-icon-download": HTMLMexIconDownloadElement;
        "mex-icon-email": HTMLMexIconEmailElement;
        "mex-icon-entity": HTMLMexIconEntityElement;
        "mex-icon-info": HTMLMexIconInfoElement;
        "mex-icon-lock": HTMLMexIconLockElement;
        "mex-icon-platform": HTMLMexIconPlatformElement;
        "mex-icon-reload": HTMLMexIconReloadElement;
        "mex-icon-resource": HTMLMexIconResourceElement;
        "mex-icon-search": HTMLMexIconSearchElement;
        "mex-icon-source": HTMLMexIconSourceElement;
        "mex-icon-support": HTMLMexIconSupportElement;
        "mex-icon-trash": HTMLMexIconTrashElement;
        "mex-icon-user": HTMLMexIconUserElement;
        "mex-icon-warning": HTMLMexIconWarningElement;
        "mex-illustration-confirm": HTMLMexIllustrationConfirmElement;
        "mex-illustration-contact": HTMLMexIllustrationContactElement;
        "mex-illustration-download": HTMLMexIllustrationDownloadElement;
        "mex-illustration-error": HTMLMexIllustrationErrorElement;
        "mex-illustration-search-empty": HTMLMexIllustrationSearchEmptyElement;
        "mex-item": HTMLMexItemElement;
        "mex-item-contact": HTMLMexItemContactElement;
        "mex-item-contact-choice": HTMLMexItemContactChoiceElement;
        "mex-item-entity-headline": HTMLMexItemEntityHeadlineElement;
        "mex-item-field-description": HTMLMexItemFieldDescriptionElement;
        "mex-item-field-entity": HTMLMexItemFieldEntityElement;
        "mex-item-field-plain": HTMLMexItemFieldPlainElement;
        "mex-item-field-reference": HTMLMexItemFieldReferenceElement;
        "mex-item-field-title": HTMLMexItemFieldTitleElement;
        "mex-item-fields": HTMLMexItemFieldsElement;
        "mex-item-info": HTMLMexItemInfoElement;
        "mex-item-navigation": HTMLMexItemNavigationElement;
        "mex-item-related-results": HTMLMexItemRelatedResultsElement;
        "mex-link": HTMLMexLinkElement;
        "mex-linklist": HTMLMexLinklistElement;
        "mex-links": HTMLMexLinksElement;
        "mex-logo": HTMLMexLogoElement;
        "mex-modal": HTMLMexModalElement;
        "mex-modal-contents": HTMLMexModalContentsElement;
        "mex-not-found-state": HTMLMexNotFoundStateElement;
        "mex-notifications": HTMLMexNotificationsElement;
        "mex-pagination": HTMLMexPaginationElement;
        "mex-placeholder": HTMLMexPlaceholderElement;
        "mex-progress-bar": HTMLMexProgressBarElement;
        "mex-radio": HTMLMexRadioElement;
        "mex-range-chart": HTMLMexRangeChartElement;
        "mex-range-filter": HTMLMexRangeFilterElement;
        "mex-range-slider": HTMLMexRangeSliderElement;
        "mex-result": HTMLMexResultElement;
        "mex-results": HTMLMexResultsElement;
        "mex-results-download": HTMLMexResultsDownloadElement;
        "mex-root": HTMLMexRootElement;
        "mex-search": HTMLMexSearchElement;
        "mex-servicelist": HTMLMexServicelistElement;
        "mex-tabs": HTMLMexTabsElement;
        "mex-tag": HTMLMexTagElement;
        "mex-tile": HTMLMexTileElement;
        "mex-toggle": HTMLMexToggleElement;
        "mex-tooltip": HTMLMexTooltipElement;
        "mex-tracking-banner": HTMLMexTrackingBannerElement;
        "mex-view-auth": HTMLMexViewAuthElement;
        "mex-view-content-page": HTMLMexViewContentPageElement;
        "mex-view-home": HTMLMexViewHomeElement;
        "mex-view-item": HTMLMexViewItemElement;
        "mex-view-logout": HTMLMexViewLogoutElement;
        "mex-view-not-found": HTMLMexViewNotFoundElement;
        "mex-view-search": HTMLMexViewSearchElement;
    }
}
declare namespace LocalJSX {
    interface MexAccordion {
        "expanded"?: boolean;
        "testAttr"?: string;
    }
    interface MexBreadcrumbs {
        "items"?: Breadcrumb[];
    }
    interface MexBrowse {
    }
    interface MexCard {
        "icon"?: 'email' | 'support';
        "rows"?: CardRow[];
    }
    interface MexCheckbox {
        "checked"?: CheckStatusEnum;
        "classes"?: string;
        "disabled"?: boolean;
        "handleChange"?: (checked: CheckStatusEnum) => void;
        "label"?: string;
        "required"?: boolean;
        "secondaryText"?: string;
        "testAttr"?: string;
    }
    interface MexCheckboxFilter {
        "buckets"?: SearchResultsFacetBucket[];
        "busy"?: boolean;
        "expanded"?: boolean;
        "facet"?: SearchFacet;
        "onUpdateSearch"?: (event: MexCheckboxFilterCustomEvent<any>) => void;
    }
    interface MexCompletenessDetails {
        "context"?: any;
        "data"?: CompletenessData;
    }
    interface MexContentPage {
        "content"?: Content;
        "onStaticPageTitleChanged"?: (event: MexContentPageCustomEvent<any>) => void;
        "onStickyFooterEnabled"?: (event: MexContentPageCustomEvent<any>) => void;
    }
    interface MexContentPageContent {
        "content"?: Content;
        "handleViewPortIntersect"?: (displayedHeadings: string[]) => void;
        "isMediaTablet"?: boolean;
        "scrollTarget"?: string;
    }
    interface MexContentPageNav {
        "activeAnchors"?: string[];
        "contentEl"?: HTMLMexContentPageContentElement;
        "handleAnchorClick"?: (slug: string) => void;
        "isMediaTablet"?: boolean;
        "tocTree"?: TocTree;
    }
    interface MexDashboard {
    }
    interface MexDropdown {
        "disabled"?: boolean;
        "handleChange"?: (value: any) => void;
        "handleCollapse"?: () => void;
        "handleExpand"?: () => void;
        "label"?: string;
        "options"?: DropdownOption[];
        "orientation"?: 'left' | 'right';
        "required"?: boolean;
        "testAttr"?: string;
        "toggleClass"?: string;
        "value"?: any;
        "withLabelsTranslation"?: boolean;
    }
    interface MexError {
    }
    interface MexFilter {
        "busy"?: boolean;
        "facet"?: SearchFacet;
        "isParentExpanded"?: boolean;
    }
    interface MexFilterFooter {
        "busy"?: boolean;
        "facet"?: SearchFacet;
        "hasItems"?: boolean;
        "isLoadMoreDisabled"?: boolean;
    }
    interface MexFilters {
        "onUpdateSearch"?: (event: MexFiltersCustomEvent<any>) => void;
    }
    interface MexFiltersSummary {
        "label"?: string;
        "onUpdateSearch"?: (event: MexFiltersSummaryCustomEvent<any>) => void;
        "testAttr"?: string;
    }
    interface MexFooter {
        "isThin"?: boolean;
    }
    interface MexForm {
        "context"?: Item;
        "embedded"?: boolean;
        "formId"?: string;
        "formKey"?: string;
        "onCloseModal"?: (event: MexFormCustomEvent<any>) => void;
        "onScrollModalToTop"?: (event: MexFormCustomEvent<any>) => void;
        "recipient"?: Item;
    }
    interface MexFormInputRadio {
        "default"?: string;
        "handleBlur"?: () => void;
        "handleChange"?: (value: string) => void;
        "handleFocus"?: () => void;
        "label"?: string;
        "name"?: string;
        "options"?: FormBlockInputRadioOption[];
        "required"?: boolean;
        "showLabel"?: boolean;
        "testAttr"?: string;
        "value"?: string;
        "width"?: '1' | '2/3' | '1/2' | '1/3';
    }
    interface MexFormInputText {
        "ariaLabelAttr"?: string;
        "handleBlur"?: () => void;
        "handleFocus"?: () => void;
        "handleInput"?: (value: string) => void;
        "index"?: number;
        "label"?: string;
        "name"?: string;
        "placeholder"?: string;
        "required"?: boolean;
        "showLabel"?: boolean;
        "testAttr"?: string;
        "type"?: string;
        "value"?: string;
        "width"?: '1' | '2/3' | '1/2' | '1/3';
    }
    interface MexHeader {
    }
    interface MexHeaderUser {
    }
    interface MexHierarchyFilter {
        "busy"?: boolean;
        "expanded"?: boolean;
        "facet"?: SearchFacet;
        "facetResponse"?: SearchResultsFacet;
        "handleChange"?: () => void;
        "onUpdateSearch"?: (event: MexHierarchyFilterCustomEvent<any>) => void;
    }
    interface MexIconArrow {
        "classes"?: string;
    }
    interface MexIconArrowDrilldown {
        "classes"?: string;
    }
    interface MexIconCalendar {
        "arrows"?: boolean;
        "classes"?: string;
    }
    interface MexIconCheck {
        "classes"?: string;
    }
    interface MexIconChevron {
        "classes"?: string;
    }
    interface MexIconClose {
        "classes"?: string;
    }
    interface MexIconCloseInline {
        "classes"?: string;
    }
    interface MexIconCompleteness {
        "barsCount"?: number;
        "classes"?: string;
        "monochrome"?: boolean;
        "value"?: number;
    }
    interface MexIconDatum {
        "classes"?: string;
    }
    interface MexIconDownload {
        "classes"?: string;
    }
    interface MexIconEmail {
        "classes"?: string;
    }
    interface MexIconEntity {
        "attrs"?: object;
        "entityName"?: string;
    }
    interface MexIconInfo {
        "classes"?: string;
        "hasBackground"?: boolean;
    }
    interface MexIconLock {
        "classes"?: string;
        "open"?: boolean;
    }
    interface MexIconPlatform {
        "classes"?: string;
    }
    interface MexIconReload {
        "classes"?: string;
    }
    interface MexIconResource {
        "classes"?: string;
    }
    interface MexIconSearch {
        "classes"?: string;
    }
    interface MexIconSource {
        "classes"?: string;
    }
    interface MexIconSupport {
        "classes"?: string;
    }
    interface MexIconTrash {
        "classes"?: string;
    }
    interface MexIconUser {
        "classes"?: string;
    }
    interface MexIconWarning {
        "classes"?: string;
    }
    interface MexIllustrationConfirm {
        "classes"?: string;
    }
    interface MexIllustrationContact {
        "classes"?: string;
    }
    interface MexIllustrationDownload {
        "classes"?: string;
    }
    interface MexIllustrationError {
        "classes"?: string;
    }
    interface MexIllustrationSearchEmpty {
        "classes"?: string;
    }
    interface MexItem {
        "highlightChanges"?: boolean;
        "item"?: Item;
        "latestVersionItem"?: Item;
        "previousVersionItem"?: Item;
    }
    interface MexItemContact {
        "config"?: SidebarFeatureConfig;
        "isOnLatestVersion"?: boolean;
        "item"?: Item;
        "onScrollingDisabled"?: (event: MexItemContactCustomEvent<boolean>) => void;
        "onShowModal"?: (event: MexItemContactCustomEvent<ModalData>) => void;
    }
    interface MexItemContactChoice {
        "actions"?: SidebarFeatureConfigActionItem[];
        "config"?: SidebarFeatureConfig;
        "contactItem"?: Item;
        "contextItem"?: Item;
        "handleFormClose"?: () => void;
        "handleFormOpen"?: () => void;
        "onCloseModal"?: (event: MexItemContactChoiceCustomEvent<any>) => void;
        "onShowModal"?: (event: MexItemContactChoiceCustomEvent<ModalData>) => void;
    }
    interface MexItemEntityHeadline {
        "item"?: Item;
        "link"?: string;
    }
    interface MexItemFieldDescription {
        "field"?: Field;
        "highlightChanges"?: boolean;
        "item"?: Item;
        "previousVersionItem"?: Item;
    }
    interface MexItemFieldEntity {
        "field"?: Field;
        "item"?: Item;
    }
    interface MexItemFieldPlain {
        "field"?: Field;
        "highlightChanges"?: boolean;
        "item"?: Item;
        "items"?: Item[];
        "previousVersionItem"?: Item;
        "refErrors"?: string[];
    }
    interface MexItemFieldReference {
        "field"?: Field;
        "highlightChanges"?: boolean;
        "item"?: Item;
        "previousVersionItem"?: Item;
    }
    interface MexItemFieldTitle {
        "field"?: Field;
        "highlightChanges"?: boolean;
        "item"?: Item;
        "previousVersionItem"?: Item;
    }
    interface MexItemFields {
        "context"?: 'details' | 'preview' | 'sidebar';
        "fields"?: Field[];
        "highlightChanges"?: boolean;
        "item"?: Item;
        "level"?: number;
        "previousVersionItem"?: Item;
    }
    interface MexItemInfo {
        "features"?: SidebarFeatureConfig[];
        "item"?: SearchResultsItem | Item;
        "onCloseModal"?: (event: MexItemInfoCustomEvent<any>) => void;
        "onShowModal"?: (event: MexItemInfoCustomEvent<ModalData>) => void;
        "orientation"?: 'horizontal' | 'vertical' | 'auto';
    }
    interface MexItemNavigation {
        "breadcrumb"?: string;
        "expandVersions"?: boolean;
        "item"?: Item;
        "itemId"?: string;
        "onChangeItemId"?: (event: MexItemNavigationCustomEvent<any>) => void;
        "onToggleVersions"?: (event: MexItemNavigationCustomEvent<any>) => void;
        "versions"?: Version[];
    }
    interface MexItemRelatedResults {
        "item"?: Item;
    }
    interface MexLink {
        "label"?: string;
        "showUrl"?: boolean;
        "testAttr"?: string;
        "url"?: string;
    }
    interface MexLinklist {
        "headline"?: string;
        "tile"?: LinklistTile;
    }
    interface MexLinks {
        "classes"?: string;
        "itemClasses"?: string;
        "items"?: LinkItem[];
        "showUrl"?: boolean;
    }
    interface MexLogo {
        "flag"?: string;
        "flagTooltip"?: string;
        "loader"?: boolean;
    }
    interface MexModal {
        "handleClose"?: () => void;
        "handleSetFocus"?: (closeRef?: HTMLButtonElement) => void;
    }
    interface MexModalContents {
        "buttons"?: ModalContentsButton[];
        "caption"?: string;
        "context"?: any;
        "illustration"?: 'error' | 'download' | 'confirm' | 'contact';
        "progress"?: number;
        "text"?: string;
    }
    interface MexNotFoundState {
        "buttonText"?: string;
        "buttonUrl"?: string;
        "caption"?: string;
        "testAttr"?: string;
        "text"?: string;
    }
    interface MexNotifications {
    }
    interface MexPagination {
        "ariaLabelAttr"?: string;
        "current"?: number;
        "disabled"?: boolean;
        "handleClick"?: (num: number) => void;
        "range"?: number[];
        "renderSlot"?: boolean;
        "testAttr"?: string;
    }
    interface MexPlaceholder {
        "height"?: string;
        "inline"?: boolean;
        "lines"?: number;
        "text"?: string;
        "width"?: string;
    }
    interface MexProgressBar {
        "progress"?: number;
        "spaced"?: boolean;
    }
    interface MexRadio {
        "checked"?: boolean;
        "classes"?: string;
        "disabled"?: boolean;
        "handleChange"?: (value: string | number) => void;
        "handleInvalid"?: (event: Event) => void;
        "label"?: string;
        "name"?: string;
        "required"?: boolean;
        "testAttr"?: string;
        "value"?: string | number;
    }
    interface MexRangeChart {
        "handleClick"?: (point: RangeChartPoint) => void;
        "points"?: RangeChartPoint[];
        "value"?: number[];
    }
    interface MexRangeFilter {
        "buckets"?: SearchResultsFacetBucket[];
        "busy"?: boolean;
        "expanded"?: boolean;
        "facet"?: SearchFacet;
        "onUpdateSearch"?: (event: MexRangeFilterCustomEvent<any>) => void;
    }
    interface MexRangeSlider {
        "disabled"?: boolean;
        "handleChange"?: (value: number[]) => void;
        "handleDrag"?: (value: number[]) => void;
        "highlightActiveRange"?: boolean;
        "max"?: number;
        "min"?: number;
        "mode"?: 'point' | 'frame';
        "testAttr"?: string;
        "value"?: number[];
    }
    interface MexResult {
        "item"?: SearchResultsItem;
    }
    interface MexResults {
        "handlePagination"?: (page: number) => void;
        "onUpdateSearch"?: (event: MexResultsCustomEvent<any>) => void;
    }
    interface MexResultsDownload {
        "disabled"?: boolean;
        "onCloseModal"?: (event: MexResultsDownloadCustomEvent<any>) => void;
        "onShowModal"?: (event: MexResultsDownloadCustomEvent<ModalData>) => void;
    }
    interface MexRoot {
        "onCloseError"?: (event: MexRootCustomEvent<any>) => void;
        "onCloseModal"?: (event: MexRootCustomEvent<any>) => void;
    }
    interface MexSearch {
        "autofocus"?: boolean;
        "expanded"?: boolean;
        "handleReset"?: () => void;
        "handleSearch"?: (value: string, searchFocus: string) => void;
        "searchFocus"?: any;
        "value"?: string;
    }
    interface MexServicelist {
        "items"?: LinkItem[];
    }
    interface MexTabs {
        "handleClick"?: (item: TabsItem) => void;
        "items"?: TabsItem[];
        "testAttr"?: string;
    }
    interface MexTag {
        "clickable"?: boolean;
        "closable"?: boolean;
        "closeTitle"?: string;
        "handleClick"?: () => void;
        "handleClose"?: () => void;
        "testAttr"?: string;
        "text"?: string;
    }
    interface MexTile {
        "disabled"?: boolean;
        "handleClick"?: () => void;
        "hint"?: string;
        "icon"?: 'arrow' | 'drilldown';
        "isBusy"?: boolean;
        "modifiers"?: string[];
        "testAttr"?: string;
        "testKeyAttr"?: number;
        "text"?: string;
        "url"?: string;
    }
    interface MexToggle {
        "active"?: boolean;
        "disabled"?: boolean;
        "label"?: string;
        "testAttr"?: string;
        "toggleHandler"?: (isActive: boolean) => void;
    }
    interface MexTooltip {
        "classes"?: string;
        "handleClick"?: (event?: MouseEvent | TouchEvent) => void;
        "method"?: 'focus' | 'hover';
        "testAttr"?: string;
        "text"?: string;
    }
    interface MexTrackingBanner {
    }
    interface MexViewAuth {
        "url"?: URL;
    }
    interface MexViewContentPage {
        "pageId"?: string;
    }
    interface MexViewHome {
    }
    interface MexViewItem {
        "itemId"?: string;
    }
    interface MexViewLogout {
    }
    interface MexViewNotFound {
    }
    interface MexViewSearch {
        "url"?: URL;
    }
    interface IntrinsicElements {
        "mex-accordion": MexAccordion;
        "mex-breadcrumbs": MexBreadcrumbs;
        "mex-browse": MexBrowse;
        "mex-card": MexCard;
        "mex-checkbox": MexCheckbox;
        "mex-checkbox-filter": MexCheckboxFilter;
        "mex-completeness-details": MexCompletenessDetails;
        "mex-content-page": MexContentPage;
        "mex-content-page-content": MexContentPageContent;
        "mex-content-page-nav": MexContentPageNav;
        "mex-dashboard": MexDashboard;
        "mex-dropdown": MexDropdown;
        "mex-error": MexError;
        "mex-filter": MexFilter;
        "mex-filter-footer": MexFilterFooter;
        "mex-filters": MexFilters;
        "mex-filters-summary": MexFiltersSummary;
        "mex-footer": MexFooter;
        "mex-form": MexForm;
        "mex-form-input-radio": MexFormInputRadio;
        "mex-form-input-text": MexFormInputText;
        "mex-header": MexHeader;
        "mex-header-user": MexHeaderUser;
        "mex-hierarchy-filter": MexHierarchyFilter;
        "mex-icon-arrow": MexIconArrow;
        "mex-icon-arrow-drilldown": MexIconArrowDrilldown;
        "mex-icon-calendar": MexIconCalendar;
        "mex-icon-check": MexIconCheck;
        "mex-icon-chevron": MexIconChevron;
        "mex-icon-close": MexIconClose;
        "mex-icon-close-inline": MexIconCloseInline;
        "mex-icon-completeness": MexIconCompleteness;
        "mex-icon-datum": MexIconDatum;
        "mex-icon-download": MexIconDownload;
        "mex-icon-email": MexIconEmail;
        "mex-icon-entity": MexIconEntity;
        "mex-icon-info": MexIconInfo;
        "mex-icon-lock": MexIconLock;
        "mex-icon-platform": MexIconPlatform;
        "mex-icon-reload": MexIconReload;
        "mex-icon-resource": MexIconResource;
        "mex-icon-search": MexIconSearch;
        "mex-icon-source": MexIconSource;
        "mex-icon-support": MexIconSupport;
        "mex-icon-trash": MexIconTrash;
        "mex-icon-user": MexIconUser;
        "mex-icon-warning": MexIconWarning;
        "mex-illustration-confirm": MexIllustrationConfirm;
        "mex-illustration-contact": MexIllustrationContact;
        "mex-illustration-download": MexIllustrationDownload;
        "mex-illustration-error": MexIllustrationError;
        "mex-illustration-search-empty": MexIllustrationSearchEmpty;
        "mex-item": MexItem;
        "mex-item-contact": MexItemContact;
        "mex-item-contact-choice": MexItemContactChoice;
        "mex-item-entity-headline": MexItemEntityHeadline;
        "mex-item-field-description": MexItemFieldDescription;
        "mex-item-field-entity": MexItemFieldEntity;
        "mex-item-field-plain": MexItemFieldPlain;
        "mex-item-field-reference": MexItemFieldReference;
        "mex-item-field-title": MexItemFieldTitle;
        "mex-item-fields": MexItemFields;
        "mex-item-info": MexItemInfo;
        "mex-item-navigation": MexItemNavigation;
        "mex-item-related-results": MexItemRelatedResults;
        "mex-link": MexLink;
        "mex-linklist": MexLinklist;
        "mex-links": MexLinks;
        "mex-logo": MexLogo;
        "mex-modal": MexModal;
        "mex-modal-contents": MexModalContents;
        "mex-not-found-state": MexNotFoundState;
        "mex-notifications": MexNotifications;
        "mex-pagination": MexPagination;
        "mex-placeholder": MexPlaceholder;
        "mex-progress-bar": MexProgressBar;
        "mex-radio": MexRadio;
        "mex-range-chart": MexRangeChart;
        "mex-range-filter": MexRangeFilter;
        "mex-range-slider": MexRangeSlider;
        "mex-result": MexResult;
        "mex-results": MexResults;
        "mex-results-download": MexResultsDownload;
        "mex-root": MexRoot;
        "mex-search": MexSearch;
        "mex-servicelist": MexServicelist;
        "mex-tabs": MexTabs;
        "mex-tag": MexTag;
        "mex-tile": MexTile;
        "mex-toggle": MexToggle;
        "mex-tooltip": MexTooltip;
        "mex-tracking-banner": MexTrackingBanner;
        "mex-view-auth": MexViewAuth;
        "mex-view-content-page": MexViewContentPage;
        "mex-view-home": MexViewHome;
        "mex-view-item": MexViewItem;
        "mex-view-logout": MexViewLogout;
        "mex-view-not-found": MexViewNotFound;
        "mex-view-search": MexViewSearch;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "mex-accordion": LocalJSX.MexAccordion & JSXBase.HTMLAttributes<HTMLMexAccordionElement>;
            "mex-breadcrumbs": LocalJSX.MexBreadcrumbs & JSXBase.HTMLAttributes<HTMLMexBreadcrumbsElement>;
            "mex-browse": LocalJSX.MexBrowse & JSXBase.HTMLAttributes<HTMLMexBrowseElement>;
            "mex-card": LocalJSX.MexCard & JSXBase.HTMLAttributes<HTMLMexCardElement>;
            "mex-checkbox": LocalJSX.MexCheckbox & JSXBase.HTMLAttributes<HTMLMexCheckboxElement>;
            "mex-checkbox-filter": LocalJSX.MexCheckboxFilter & JSXBase.HTMLAttributes<HTMLMexCheckboxFilterElement>;
            "mex-completeness-details": LocalJSX.MexCompletenessDetails & JSXBase.HTMLAttributes<HTMLMexCompletenessDetailsElement>;
            "mex-content-page": LocalJSX.MexContentPage & JSXBase.HTMLAttributes<HTMLMexContentPageElement>;
            "mex-content-page-content": LocalJSX.MexContentPageContent & JSXBase.HTMLAttributes<HTMLMexContentPageContentElement>;
            "mex-content-page-nav": LocalJSX.MexContentPageNav & JSXBase.HTMLAttributes<HTMLMexContentPageNavElement>;
            "mex-dashboard": LocalJSX.MexDashboard & JSXBase.HTMLAttributes<HTMLMexDashboardElement>;
            "mex-dropdown": LocalJSX.MexDropdown & JSXBase.HTMLAttributes<HTMLMexDropdownElement>;
            "mex-error": LocalJSX.MexError & JSXBase.HTMLAttributes<HTMLMexErrorElement>;
            "mex-filter": LocalJSX.MexFilter & JSXBase.HTMLAttributes<HTMLMexFilterElement>;
            "mex-filter-footer": LocalJSX.MexFilterFooter & JSXBase.HTMLAttributes<HTMLMexFilterFooterElement>;
            "mex-filters": LocalJSX.MexFilters & JSXBase.HTMLAttributes<HTMLMexFiltersElement>;
            "mex-filters-summary": LocalJSX.MexFiltersSummary & JSXBase.HTMLAttributes<HTMLMexFiltersSummaryElement>;
            "mex-footer": LocalJSX.MexFooter & JSXBase.HTMLAttributes<HTMLMexFooterElement>;
            "mex-form": LocalJSX.MexForm & JSXBase.HTMLAttributes<HTMLMexFormElement>;
            "mex-form-input-radio": LocalJSX.MexFormInputRadio & JSXBase.HTMLAttributes<HTMLMexFormInputRadioElement>;
            "mex-form-input-text": LocalJSX.MexFormInputText & JSXBase.HTMLAttributes<HTMLMexFormInputTextElement>;
            "mex-header": LocalJSX.MexHeader & JSXBase.HTMLAttributes<HTMLMexHeaderElement>;
            "mex-header-user": LocalJSX.MexHeaderUser & JSXBase.HTMLAttributes<HTMLMexHeaderUserElement>;
            "mex-hierarchy-filter": LocalJSX.MexHierarchyFilter & JSXBase.HTMLAttributes<HTMLMexHierarchyFilterElement>;
            "mex-icon-arrow": LocalJSX.MexIconArrow & JSXBase.HTMLAttributes<HTMLMexIconArrowElement>;
            "mex-icon-arrow-drilldown": LocalJSX.MexIconArrowDrilldown & JSXBase.HTMLAttributes<HTMLMexIconArrowDrilldownElement>;
            "mex-icon-calendar": LocalJSX.MexIconCalendar & JSXBase.HTMLAttributes<HTMLMexIconCalendarElement>;
            "mex-icon-check": LocalJSX.MexIconCheck & JSXBase.HTMLAttributes<HTMLMexIconCheckElement>;
            "mex-icon-chevron": LocalJSX.MexIconChevron & JSXBase.HTMLAttributes<HTMLMexIconChevronElement>;
            "mex-icon-close": LocalJSX.MexIconClose & JSXBase.HTMLAttributes<HTMLMexIconCloseElement>;
            "mex-icon-close-inline": LocalJSX.MexIconCloseInline & JSXBase.HTMLAttributes<HTMLMexIconCloseInlineElement>;
            "mex-icon-completeness": LocalJSX.MexIconCompleteness & JSXBase.HTMLAttributes<HTMLMexIconCompletenessElement>;
            "mex-icon-datum": LocalJSX.MexIconDatum & JSXBase.HTMLAttributes<HTMLMexIconDatumElement>;
            "mex-icon-download": LocalJSX.MexIconDownload & JSXBase.HTMLAttributes<HTMLMexIconDownloadElement>;
            "mex-icon-email": LocalJSX.MexIconEmail & JSXBase.HTMLAttributes<HTMLMexIconEmailElement>;
            "mex-icon-entity": LocalJSX.MexIconEntity & JSXBase.HTMLAttributes<HTMLMexIconEntityElement>;
            "mex-icon-info": LocalJSX.MexIconInfo & JSXBase.HTMLAttributes<HTMLMexIconInfoElement>;
            "mex-icon-lock": LocalJSX.MexIconLock & JSXBase.HTMLAttributes<HTMLMexIconLockElement>;
            "mex-icon-platform": LocalJSX.MexIconPlatform & JSXBase.HTMLAttributes<HTMLMexIconPlatformElement>;
            "mex-icon-reload": LocalJSX.MexIconReload & JSXBase.HTMLAttributes<HTMLMexIconReloadElement>;
            "mex-icon-resource": LocalJSX.MexIconResource & JSXBase.HTMLAttributes<HTMLMexIconResourceElement>;
            "mex-icon-search": LocalJSX.MexIconSearch & JSXBase.HTMLAttributes<HTMLMexIconSearchElement>;
            "mex-icon-source": LocalJSX.MexIconSource & JSXBase.HTMLAttributes<HTMLMexIconSourceElement>;
            "mex-icon-support": LocalJSX.MexIconSupport & JSXBase.HTMLAttributes<HTMLMexIconSupportElement>;
            "mex-icon-trash": LocalJSX.MexIconTrash & JSXBase.HTMLAttributes<HTMLMexIconTrashElement>;
            "mex-icon-user": LocalJSX.MexIconUser & JSXBase.HTMLAttributes<HTMLMexIconUserElement>;
            "mex-icon-warning": LocalJSX.MexIconWarning & JSXBase.HTMLAttributes<HTMLMexIconWarningElement>;
            "mex-illustration-confirm": LocalJSX.MexIllustrationConfirm & JSXBase.HTMLAttributes<HTMLMexIllustrationConfirmElement>;
            "mex-illustration-contact": LocalJSX.MexIllustrationContact & JSXBase.HTMLAttributes<HTMLMexIllustrationContactElement>;
            "mex-illustration-download": LocalJSX.MexIllustrationDownload & JSXBase.HTMLAttributes<HTMLMexIllustrationDownloadElement>;
            "mex-illustration-error": LocalJSX.MexIllustrationError & JSXBase.HTMLAttributes<HTMLMexIllustrationErrorElement>;
            "mex-illustration-search-empty": LocalJSX.MexIllustrationSearchEmpty & JSXBase.HTMLAttributes<HTMLMexIllustrationSearchEmptyElement>;
            "mex-item": LocalJSX.MexItem & JSXBase.HTMLAttributes<HTMLMexItemElement>;
            "mex-item-contact": LocalJSX.MexItemContact & JSXBase.HTMLAttributes<HTMLMexItemContactElement>;
            "mex-item-contact-choice": LocalJSX.MexItemContactChoice & JSXBase.HTMLAttributes<HTMLMexItemContactChoiceElement>;
            "mex-item-entity-headline": LocalJSX.MexItemEntityHeadline & JSXBase.HTMLAttributes<HTMLMexItemEntityHeadlineElement>;
            "mex-item-field-description": LocalJSX.MexItemFieldDescription & JSXBase.HTMLAttributes<HTMLMexItemFieldDescriptionElement>;
            "mex-item-field-entity": LocalJSX.MexItemFieldEntity & JSXBase.HTMLAttributes<HTMLMexItemFieldEntityElement>;
            "mex-item-field-plain": LocalJSX.MexItemFieldPlain & JSXBase.HTMLAttributes<HTMLMexItemFieldPlainElement>;
            "mex-item-field-reference": LocalJSX.MexItemFieldReference & JSXBase.HTMLAttributes<HTMLMexItemFieldReferenceElement>;
            "mex-item-field-title": LocalJSX.MexItemFieldTitle & JSXBase.HTMLAttributes<HTMLMexItemFieldTitleElement>;
            "mex-item-fields": LocalJSX.MexItemFields & JSXBase.HTMLAttributes<HTMLMexItemFieldsElement>;
            "mex-item-info": LocalJSX.MexItemInfo & JSXBase.HTMLAttributes<HTMLMexItemInfoElement>;
            "mex-item-navigation": LocalJSX.MexItemNavigation & JSXBase.HTMLAttributes<HTMLMexItemNavigationElement>;
            "mex-item-related-results": LocalJSX.MexItemRelatedResults & JSXBase.HTMLAttributes<HTMLMexItemRelatedResultsElement>;
            "mex-link": LocalJSX.MexLink & JSXBase.HTMLAttributes<HTMLMexLinkElement>;
            "mex-linklist": LocalJSX.MexLinklist & JSXBase.HTMLAttributes<HTMLMexLinklistElement>;
            "mex-links": LocalJSX.MexLinks & JSXBase.HTMLAttributes<HTMLMexLinksElement>;
            "mex-logo": LocalJSX.MexLogo & JSXBase.HTMLAttributes<HTMLMexLogoElement>;
            "mex-modal": LocalJSX.MexModal & JSXBase.HTMLAttributes<HTMLMexModalElement>;
            "mex-modal-contents": LocalJSX.MexModalContents & JSXBase.HTMLAttributes<HTMLMexModalContentsElement>;
            "mex-not-found-state": LocalJSX.MexNotFoundState & JSXBase.HTMLAttributes<HTMLMexNotFoundStateElement>;
            "mex-notifications": LocalJSX.MexNotifications & JSXBase.HTMLAttributes<HTMLMexNotificationsElement>;
            "mex-pagination": LocalJSX.MexPagination & JSXBase.HTMLAttributes<HTMLMexPaginationElement>;
            "mex-placeholder": LocalJSX.MexPlaceholder & JSXBase.HTMLAttributes<HTMLMexPlaceholderElement>;
            "mex-progress-bar": LocalJSX.MexProgressBar & JSXBase.HTMLAttributes<HTMLMexProgressBarElement>;
            "mex-radio": LocalJSX.MexRadio & JSXBase.HTMLAttributes<HTMLMexRadioElement>;
            "mex-range-chart": LocalJSX.MexRangeChart & JSXBase.HTMLAttributes<HTMLMexRangeChartElement>;
            "mex-range-filter": LocalJSX.MexRangeFilter & JSXBase.HTMLAttributes<HTMLMexRangeFilterElement>;
            "mex-range-slider": LocalJSX.MexRangeSlider & JSXBase.HTMLAttributes<HTMLMexRangeSliderElement>;
            "mex-result": LocalJSX.MexResult & JSXBase.HTMLAttributes<HTMLMexResultElement>;
            "mex-results": LocalJSX.MexResults & JSXBase.HTMLAttributes<HTMLMexResultsElement>;
            "mex-results-download": LocalJSX.MexResultsDownload & JSXBase.HTMLAttributes<HTMLMexResultsDownloadElement>;
            "mex-root": LocalJSX.MexRoot & JSXBase.HTMLAttributes<HTMLMexRootElement>;
            "mex-search": LocalJSX.MexSearch & JSXBase.HTMLAttributes<HTMLMexSearchElement>;
            "mex-servicelist": LocalJSX.MexServicelist & JSXBase.HTMLAttributes<HTMLMexServicelistElement>;
            "mex-tabs": LocalJSX.MexTabs & JSXBase.HTMLAttributes<HTMLMexTabsElement>;
            "mex-tag": LocalJSX.MexTag & JSXBase.HTMLAttributes<HTMLMexTagElement>;
            "mex-tile": LocalJSX.MexTile & JSXBase.HTMLAttributes<HTMLMexTileElement>;
            "mex-toggle": LocalJSX.MexToggle & JSXBase.HTMLAttributes<HTMLMexToggleElement>;
            "mex-tooltip": LocalJSX.MexTooltip & JSXBase.HTMLAttributes<HTMLMexTooltipElement>;
            "mex-tracking-banner": LocalJSX.MexTrackingBanner & JSXBase.HTMLAttributes<HTMLMexTrackingBannerElement>;
            "mex-view-auth": LocalJSX.MexViewAuth & JSXBase.HTMLAttributes<HTMLMexViewAuthElement>;
            "mex-view-content-page": LocalJSX.MexViewContentPage & JSXBase.HTMLAttributes<HTMLMexViewContentPageElement>;
            "mex-view-home": LocalJSX.MexViewHome & JSXBase.HTMLAttributes<HTMLMexViewHomeElement>;
            "mex-view-item": LocalJSX.MexViewItem & JSXBase.HTMLAttributes<HTMLMexViewItemElement>;
            "mex-view-logout": LocalJSX.MexViewLogout & JSXBase.HTMLAttributes<HTMLMexViewLogoutElement>;
            "mex-view-not-found": LocalJSX.MexViewNotFound & JSXBase.HTMLAttributes<HTMLMexViewNotFoundElement>;
            "mex-view-search": LocalJSX.MexViewSearch & JSXBase.HTMLAttributes<HTMLMexViewSearchElement>;
        }
    }
}
